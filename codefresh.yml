version: '1.0'
steps:

    gradle_image:
      title: Build Gradle Image
      type: build
      image_name: gradle

    define_vars:
      title: Define Variables
      image: ${{gradle_image}}
      commands:
        - cf_export WORKSPACE=$CF_VOLUME_PATH/$CF_REPO_NAME

    odi_image:
      title: Build ODI Image
      type: build
      image_name: odi
      working_directory: ${{WORKSPACE}}/odi

    copy_jars:
      title: Copy ODI JARs
      image: ${{odi_image}}
      commands:
        - cp /u01/oracle/odi1/odi/sdk/lib/*.jar ${{WORKSPACE}}/odi-sdk

    release_plugin:
      title: Release Plugin
      image: ${{gradle_image}}
      cmd:
        - clean
        - release
        - -Prelease.disableChecks
        - -Prelease.localOnly
      when:
        condition:
          all:
            validateTargetBranch: '"${{CF_PULL_REQUEST_TARGET}}" == "master"'
            prActionClose: '"${{CF_PULL_REQUEST_ACTION}}" == "closed"'
            prActionMerge: '"${{CF_PULL_REQUEST_MERGED}}" == "true"'
    
    build_plugin:
      title: Build Plugin
      image: ${{gradle_image}}
      cmd:
        - build
        - copyBuildResources
        - publishVersionDocs

    unit_tests:
      title: Parse Gradle Test Reports
      image: codefresh/cf-docker-test-reporting
      working_directory: '${{CF_VOLUME_PATH}}/${{CF_REPO_NAME}}/build/reports/tests/'
      environment:
        - REPORT_DIR=test
        - REPORT_INDEX_FILE=index.html
        - CLEAR_TEST_REPORT=true
        - BUCKET_NAME=rpa-checkmate-odi-reports
        - CF_STORAGE_INTEGRATION=google-rpa-devops

    publish_plugin:
      title: Publish Plugin
      image: ${{gradle_image}}
      cmd:
        - publishPlugins
        - publishLatestDocs
        - githubRelease
      when:
        condition:
          all:
            validateTargetBranch: '"${{CF_PULL_REQUEST_TARGET}}" == "master"'
            prActionClose: '"${{CF_PULL_REQUEST_ACTION}}" == "closed"'
            prActionMerge: '"${{CF_PULL_REQUEST_MERGED}}" == "true"'

    analytics_producer:
      title: Analytics Producer
      image: ${{gradle_image}}
      cmd:
        - producer
