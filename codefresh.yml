version: '1.0'
steps:

    main_clone:
      title: Cloning main repository...
      type: git-clone
      repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
      revision: '${{CF_REVISION}}'

    gradle_image:
      title: Build Gradle Image
      type: build
      image_name: gradle

    release_plugin:
      title: Release Plugin
      image: ${{gradle_image}}
      cmd:
        - cleanLibs
        - release
        - -Prelease.disableChecks
        - -Prelease.localOnly
      when:
        condition:
          all:
            validateTargetBranch: '"${{CF_PULL_REQUEST_TARGET}}" == "master"'
            prActionClose: '"${{CF_PULL_REQUEST_ACTION}}" == "closed"'
            prActionMerge: '"${{CF_PULL_REQUEST_MERGED}}" == "true"'

    copy_resources:
      title: Copy Build Resources
      image: ${{gradle_image}}
      cmd:
        - copyBuildResources

    build_plugin:
      title: Build Plugin
      image: ${{gradle_image}}
      cmd:
        - release
        - -Prelease.disableChecks
        - -Prelease.localOnly
        - -Prelease.dryRun
        - build
        - runAllTests

    unit_tests:
      title: Parse Gradle Test Reports
      image: codefresh/cf-docker-test-reporting
      working_directory: '${{CF_VOLUME_PATH}}/${{CF_REPO_NAME}}/build/reports/tests/'
      environment:
        - REPORT_DIR=test
        - REPORT_INDEX_FILE=index.html
        - CLEAR_TEST_REPORT=true
        - BUCKET_NAME=rpa-gradle-reports
        - CF_STORAGE_INTEGRATION=rpa-test-reports

    publish_plugin:
      title: Publish Plugin
      image: ${{gradle_image}}
      cmd:
        - publishVersionDocs
        - publishLatestDocs
        - githubRelease
        - publishPlugins
      when:
        condition:
          all:
            validateTargetBranch: '"${{CF_PULL_REQUEST_TARGET}}" == "master"'
            prActionClose: '"${{CF_PULL_REQUEST_ACTION}}" == "closed"'
            prActionMerge: '"${{CF_PULL_REQUEST_MERGED}}" == "true"'

    analytics_producer:
      title: Analytics Producer
      image: ${{gradle_image}}
      cmd:
        - producer
