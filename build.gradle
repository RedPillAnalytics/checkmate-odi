import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

plugins {
   id 'groovy'
   id 'maven-publish'
   id "com.gradle.plugin-publish" version "0.10.0"
   id 'java-gradle-plugin'
   id "pl.allegro.tech.build.axion-release" version "1.9.3"
   id 'org.unbroken-dome.test-sets' version '2.0.1'
   id "com.github.johnrengelman.shadow" version "4.0.2"
   id "com.github.ben-manes.versions" version "0.20.0"
   id "com.github.breadmoirai.github-release" version "2.0.1"
   id 'com.redpillanalytics.gradle-analytics' version "1.1.15"
}

scmVersion {

   tag {
      prefix = 'v'
      versionSeparator = ''
   }
   ignoreUncommittedChanges = false
}

//set Gradle version to SCM Version
allprojects {
   project.version = scmVersion.version
}

gradlePlugin {
   plugins {
      checkmateOdi {
         id = 'com.redpillanalytics.checkmate.odi'
         implementationClass = 'com.redpillanalytics.odi.gradle.OdiPlugin'
      }
   }
}

pluginBundle {

   website = 'https://github.com/RedPillAnalytics/checkmate-odi/'
   vcsUrl = 'https://github.com/RedPillAnalytics/checkmate-odi/'

   plugins {

      checkmateOdi {
         displayName = 'checkmate.odi'
         description = "A CI/CD framework for Oracle Data Integrator."
         tags = ['oracle', 'data-integration', 'etl']
         version = project.version
      }
   }
}

githubRelease {

   token = githubToken
   owner = 'RedPillAnalytics'
   repo = 'checkmate-odi'
   tagName = "v${version}"
   releaseAssets = fileTree(dir: buildDir, includes: ["**/*${version}*", "**/*${version}*.jar"]).toList()
}

dependencies {

   shadow localGroovy()
   shadow gradleApi()

   // basic Groovy/Gradle stuff
   compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.15'
   shadow group: 'org.slf4j', name: 'slf4j-simple', version: '+'
   shadow group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '+'

   // Gradle Analytics plugin
   // It also has the Common library in it, thus the dependency here
   compile "gradle.plugin.com.redpillanalytics:gradle-analytics:+"

   // ODI SDK common libraries -- will add more in as required
   shadow 'nz.net.osnz.composite:composite-spring-jdbc:4.1'
   shadow 'org.springframework:spring-orm:4.0.1.RELEASE'
   shadow 'org.eclipse.persistence:org.eclipse.persistence.jpa.modelgen.processor:+'
   shadow 'bsh:bsh:+'
   shadow 'org.apache-extras.beanshell:bsh:+'
   shadow 'com.fasterxml.jackson.core:jackson-core:+'
   shadow 'com.fasterxml.jackson.core:jackson-databind:+'
   shadow 'org.glassfish:javax.json:+'
   shadow 'org.eclipse.persistence:javax.persistence:+'
   shadow 'org.eclipse.persistence:org.eclipse.persistence.oracle:+'
   shadow 'org.ops4j.pax.runner:pax-runner-no-jcl:+'
   shadow 'commons-collections:commons-collections:20040616'
   shadow 'javolution:javolution:5.5.1'
   shadow 'trove:trove:1.0.2'

   // ODI Core libraries -- will add more in as required
   compile 'odi-sdk:odi-core:+'
   compile 'odi-sdk:odi-connector:+'
   compile 'odi-sdk:odi-cpld:+'
   compile 'odi-sdk:odi-jse:+'
   compile 'odi-sdk:odi-jaxrsri:+'
   compile 'odi-sdk:spring-core:+'
   compile 'odi-sdk:odi-happ-common:+'
   compile 'odi-sdk:odi-happ-essbase:+'
   compile 'odi-sdk:odi-happ-planning:+'
   compile 'odi-sdk:odi-sap:+'
   compile 'odi-sdk:odi-wls:+'
   compile 'odi-sdk:ogg-jmx:+'
   compile 'odi-sdk:ogg-jmx:+'
   compile 'oracle-common:jps-api:+'
   compile 'oracle-common:ojdl-core:+'
   compile 'oracle-common:ojdbc8:+'
   compile 'oracle-common:ucp-core:+'
   compile 'wls-modules:wls-rac-ucp:+'
   compile 'wls-modules:identitystore-core:+'

   // Libraries that don't appear to be needed, but we will keep them commented out just in case
//   compile 'org.springframework.integration:spring-integration-jdbc:4.0.0.RELEASE'
//   compile 'oracle-common:persistence-api:+'
//   compile 'wls-modules:persistence-core:+'
//   compile 'javax.persistence:javax.persistence-api:+'
//   compile 'org.eclipse.persistence:org.eclipse.persistence.asm:+'
//   compile 'org.eclipse.persistence:org.eclipse.persistence.core:+'
//   compile 'org.eclipse.persistence:org.eclipse.persistence.jpa.jpql:+'
//   compile 'org.eclipse.persistence:org.eclipse.persistence.nosql:+'
//   compile 'org.eclipse.persistence:org.eclipse.persistence.oracle.nosql:+'
//   compile 'org.eclipse.persistence:org.eclipse.persistence.oracleddlparser:+'
//   compile 'org.apache.commons:commons-collections4:4.2'

   testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
}

// Default artifact naming.
group = 'com.redpillanalytics'

repositories {
   jcenter()
   maven {
      url "https://plugins.gradle.org/m2/"
   }
   maven {
      url releaseUrl
      authentication {
         awsIm(AwsImAuthentication)
      }
   }
   maven {
      url snapshotUrl
      authentication {
         awsIm(AwsImAuthentication)
      }
   }
}

// Options for all tests
tasks.withType(Test) {
   ignoreFailures = true
   testLogging.showStandardStreams = true
   systemProperty 'projectDir', temporaryDir
   systemProperty 'odiPassword', odiPassword
   systemProperty 'masterPassword', masterPassword
   systemProperty 'masterUrl', masterUrl
}

testSets {
   onlineExportTest
   onlineImportTest
}

//customize ShadowJar
jar.enabled = false

shadowJar {
   classifier = ''
   zip64 = true
}

task relocateShadowJar(type: ConfigureShadowRelocation) {
   target = tasks.shadowJar
}

tasks.build.dependsOn tasks.shadowJar
tasks.shadowJar.dependsOn tasks.relocateShadowJar

task('cleanJunit', type: Delete) {
   delete getTestResultsDir()
}

onlineExportTest.mustRunAfter onlineImportTest

ext.bucket = 's3://documentation.redpillanalytics.com'
ext.bucketPath = 'checkmate-odi'

task publishDocs {

   description = 'Upload Groovydocs to s3.'
   group = 'documentation'

   doLast {
      exec {
         executable 'aws'
         args 's3', 'sync', groovydoc.destinationDir.getPath(), "${bucket}/${bucketPath}/${version}/"
      }
      exec {
         executable 'aws'
         args 's3', 'sync', groovydoc.destinationDir.getPath(), "${bucket}/${bucketPath}/latest/"
      }
   }

   dependsOn groovydoc
}

tasks.publishPlugins.dependsOn publishDocs