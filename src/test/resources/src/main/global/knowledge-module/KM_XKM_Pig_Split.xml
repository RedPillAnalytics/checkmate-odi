<?xml version="1.0" encoding="ISO-8859-1"?>
<SunopsisExport>
<Admin RepositoryVersion="05.02.02.08" OdiVersion="12.2.1" IsLegacyIdCompatible="false" IsExportWithParents="true" />
<Encryption algorithm="AES" keyLength="128" exportKeyHash="iKBzzL7juWhYgzkCqD1c2kv0ZkGWzAFOnzNtOXJ0YJ8=" keyVect="xTDfV8D5vA3Ys5gizWCNag==" exportKeySalt="0e004de1-fcd5-49f0-8df6-c3df858583bb" containsCipherText="false"/>
<SmartExportList materializeShortcut="false" >
   <Include><![CDATA[SnpTrt#126]]></Include>
</SmartExportList>
<Object class="com.sunopsis.dwg.dbobj.SnpTrt">
		<Field name="CleanupOnError" type="java.lang.String">null</Field>
	<Field name="CompType" type="java.lang.String"><![CDATA[SPLITTER]]></Field>
	<Field name="DelegateClass" type="java.lang.String"><![CDATA[XKM_Pig_Split]]></Field>
	<Field name="DelegateScript" type="java.lang.String"><![CDATA[
  
  	public class XKM_Pig_Split extends PigKM {
		
		private MapConnectorPoint connector;
        private GeneratorContext generatorContext;
        private Mapping mapping;
		
		public void setBinding(Binding binding) {
		 	super.setBinding(binding);
            Map variables = binding.getVariables();
            if (variables.containsKey("connector")) {
              connector =  binding.getVariable("connector");
            }
		 	if (variables.containsKey("generatorContext")) {
              generatorContext =  (GeneratorContext)binding.getVariable("generatorContext");
            }
            
            mapping = component.getComponentOwner();
            
		 }
	
		PigScript SELECT(PigScript pigScript) {
		
            Map<MapPhysicalNode, PigScript> splitScripts = (Map<MapPhysicalNode, PigScript>)generatorContext.getObject("mapping.splitter.scripts");
            
            if (splitScripts == null) {         
                splitScripts = getSplitScript(pigScript);
                generatorContext.putObject("mapping.splitter.scripts", splitScripts);
            }
            
            return splitScripts.get(physicalNode);
		}
        
        Map<MapPhysicalNode, PigScript> getSplitScript(PigScript pigScript) {     
            
            MapPhysicalDesign physicalDesign = physicalNode.getPhysicalDesign();
            List<MapPhysicalNode> orderedTargetNodes = new ArrayList<MapPhysicalNode>();
            
            
            for (ContextualComponent targetContextualComp: MappingUtils.getDefaultLoadOrder(mapping)) {
                IMapComponent targetComp = targetContextualComp.getComponent();
                orderedTargetNodes.add(physicalDesign.findNode(targetComp));
                
            }
            
            Map<MapPhysicalNode, Set<String>> targetNamesMap = new HashMap<MapPhysicalNode, Set<String>>();
            Map<Integer, Set<MapPhysicalNode>> loadOrderToNodesMap = new HashMap<Integer, Set<MapPhysicalNode>>();
            for (MapConnectorPoint outputCP: component.getOutputConnectorPoints()) {
                MapPhysicalNode splitNode = physicalDesign.findNode(outputCP);
                
                int maxOrder = 0;
                Set<String> targetNames = new HashSet<String>();
                
                for (MapPhysicalNode targetNode: splitNode.getAllDownstreamNodes()) {
                     if (!targetNode.isTargetNode() || targetNode.isAPNode()) {
                          continue;
                     }
                     
                     int targetNodeOrder = orderedTargetNodes.indexOf(targetNode);
                     if (targetNodeOrder > maxOrder) {
                          maxOrder = targetNodeOrder;
                     }
                     targetNames.add(targetNode.getLogicalComponentName());
                }
                
                targetNamesMap.put(splitNode, targetNames);
                
                Set<MapPhysicalNode> nodesOfThisOrder = null;
                if (loadOrderToNodesMap.containsKey(maxOrder)) {
                     nodesOfThisOrder = loadOrderToNodesMap.get(maxOrder);
                } 
                else {
                     nodesOfThisOrder = new LinkedHashSet<MapPhysicalNode>();
                     loadOrderToNodesMap.put(maxOrder, nodesOfThisOrder);
                }
                nodesOfThisOrder.add(splitNode);
            }
            
            
            Map<MapPhysicalNode, PigScript> splitScripts = new LinkedHashMap<MapPhysicalNode, PigScript>();
            List<PigSplitCmd> splitCmds = new ArrayList<PigSplitCmd>();
            PigSplitCmd splitCmd = null;
            List<oracle.odi.domain.mapping.expression.MapExpression> splitConditions = new ArrayList<oracle.odi.domain.mapping.expression.MapExpression>();
            List<String> ifTargetAliases = new ArrayList<String>();
            String owTargetAlias = null;
            
            
            PigScript firstScript = null;
            
            int nodeCount = loadOrderToNodesMap.keySet().size();
            
            for (int i=0; i < nodeCount; i++) {
            
                 if (!loadOrderToNodesMap.containsKey(i)) {
                      continue;
                 }
                 for (MapPhysicalNode splitNode: loadOrderToNodesMap.get(i)) {
                 
                 
                      splitCmd = new PigSplitCmd(physicalNode.getTemplateUtils(), splitNode);
                      
                      PigScript splitScript = new PigScript(physicalNode.getTemplateUtils(), null);
                      splitScript.addChild(splitCmd);
                      splitScript.setSharedInputScript(pigScript);
                 
                      splitScript.setDestinationTargets(targetNamesMap.get(splitNode));
                      splitScripts.put(splitNode, splitScript);
                      splitCmds.add(splitCmd);
                      
                      String splitScriptTargetName = splitScript.getOutputSchema().getName();
                      if (component.isRemainder(splitNode.getLogicalConnectorPoint())) {
                           owTargetAlias = splitScriptTargetName;                           
                      } 
                      else {
                           ifTargetAliases.add(splitScriptTargetName);
                           splitConditions.add(component.getSplitterCondition(splitNode.getLogicalConnectorPoint()));
                      }
                      
                 }
            }
            
            for (PigSplitCmd sCmd : splitCmds) {
               sCmd.setIfTargetAliases(ifTargetAliases);
               sCmd.setOWTargetAlias(owTargetAlias);
               sCmd.setSplitConditions(splitConditions); 
            }
            
            return splitScripts;
        }
        
	}

  ]]></Field>
	<Field name="ExpectedAstClass" type="java.lang.String">null</Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-05-17 22:11:21.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUNOPSIS_INSTALL]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4e2501ef-8bc8-4f33-9db5-82a0e062d34a]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[U]]></Field>
	<Field name="IndExcludeExUnitBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitEnd" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitMain" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapCleanup" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapEnd" type="java.lang.String">null</Field>
	<Field name="IndGenerateLoad" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndIsHidden" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndJrnMethod" type="java.lang.String">null</Field>
	<Field name="IndSuppSetBased" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IntgType" type="java.lang.String"><![CDATA[SELECT]]></Field>
	<Field name="IntVersion" type="com.sunopsis.sql.DbInt"><![CDATA[79]]></Field>
	<Field name="IsConcurrent" type="java.lang.String">null</Field>
	<Field name="IsSeeded" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IBaseCompKm" type="com.sunopsis.sql.DbInt"><![CDATA[104]]></Field>
	<Field name="IFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IProject" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScBaseTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScOrigTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[126]]></Field>
	<Field name="ITxtDelTxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtTrtTxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="KimMultiDserver" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KmDefault" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KmLang" type="java.lang.String"><![CDATA[PIGLATIN]]></Field>
	<Field name="KmSrcLang" type="java.lang.String">null</Field>
	<Field name="KmSrcTechno" type="java.lang.String">null</Field>
	<Field name="KmTechno" type="java.lang.String"><![CDATA[PIG]]></Field>
	<Field name="KmVersion" type="java.lang.String">null</Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-11-05 17:07:51.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LkmType" type="java.lang.String"><![CDATA[N]]></Field>
	<Field name="LChecksum" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LCode" type="java.lang.String">null</Field>
	<Field name="OggJkm" type="java.lang.String">null</Field>
	<Field name="OrdFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ProcType" type="java.lang.String"><![CDATA[S]]></Field>
	<Field name="ProdAstType" type="java.lang.String"><![CDATA[oracle.odi.mapping.generation.PigScript]]></Field>
	<Field name="RepGuid" type="java.lang.String">null</Field>
	<Field name="RepVersion" type="java.lang.String">null</Field>
	<Field name="ScriptPath" type="java.lang.String">null</Field>
	<Field name="ScOrigTrtTag" type="java.lang.String">null</Field>
	<Field name="Subtype" type="java.lang.String"><![CDATA[*]]></Field>
	<Field name="TrtName" type="java.lang.String"><![CDATA[XKM Pig Split]]></Field>
	<Field name="TrtType" type="java.lang.String"><![CDATA[CK]]></Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
	<Field name="VLastDate" type="java.sql.Timestamp">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpReferencedObject">
		<Field name="IObject" type="com.sunopsis.sql.DbInt"><![CDATA[3600]]></Field>
	<Field name="ObjectPKasString" type="java.lang.String"><![CDATA[104]]></Field>
	<Field name="ObjectAKasString" type="java.lang.String"><![CDATA[]]></Field>
	<Field name="Description" type="java.lang.String"><![CDATA[SNP_TRT : PigKM]]></Field>
 <Field name="GlobalId" type="java.lang.String"><![CDATA[5cd8e7b4-da1a-45d1-af98-088369a44c37]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.104]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[5cd8e7b4-da1a-45d1-af98-088369a44c37]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[PigKM]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[5]]></Field>
</Object>
<Object class="com.sunopsis.dwg.DwgExportSummary">
		<Field name="ExpTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="InstObjNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LinkDiagNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MorigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MtxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OrigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OtherObjectsNb" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="PlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="StepNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="TxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeOrigNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeUsedNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="VarPlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="ScenTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OdiVersion" type="java.lang.String"><![CDATA[12.2.1]]></Field>
	<Field name="OriginRepositoryID" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="RepositoryVersion" type="java.lang.String"><![CDATA[05.02.02.08]]></Field>
</Object>
</SunopsisExport>
