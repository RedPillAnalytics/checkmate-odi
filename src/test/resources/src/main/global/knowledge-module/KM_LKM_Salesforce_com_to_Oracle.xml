<?xml version="1.0" encoding="ISO-8859-1"?>
<SunopsisExport>
<Admin RepositoryVersion="05.02.02.08" IsLegacyIdCompatible="false" />
<Encryption algorithm="AES" keyLength="128" exportKeyHash="NBK74kXtwBVmoYfw71cPBbZozrn7jzrQ6UyLvvGaZFY=" keyVect="VIPUAwhA0bI7wT0phW454Q==" exportKeySalt="d2d98abf-2600-451e-8f0d-c8d5b29c1652" containsCipherText="false"/>
<Object class="com.sunopsis.dwg.dbobj.SnpTrt">
		<Field name="CleanupOnError" type="java.lang.String">null</Field>
	<Field name="CompType" type="java.lang.String">null</Field>
	<Field name="DelegateClass" type="java.lang.String">null</Field>
	<Field name="DelegateScript" type="java.lang.String">null</Field>
	<Field name="ExpectedAstClass" type="java.lang.String">null</Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[20fe6e9b-c7ad-415b-bafd-897be44f8e4f]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[U]]></Field>
	<Field name="IndExcludeExUnitBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitEnd" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitMain" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapCleanup" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapEnd" type="java.lang.String">null</Field>
	<Field name="IndGenerateLoad" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndIsHidden" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndJrnMethod" type="java.lang.String"><![CDATA[S]]></Field>
	<Field name="IndSuppSetBased" type="java.lang.String">null</Field>
	<Field name="IntgType" type="java.lang.String">null</Field>
	<Field name="IntVersion" type="com.sunopsis.sql.DbInt"><![CDATA[46]]></Field>
	<Field name="IsConcurrent" type="java.lang.String">null</Field>
	<Field name="IsSeeded" type="java.lang.String">null</Field>
	<Field name="IBaseCompKm" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IProject" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScBaseTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScOrigTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtDelTxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtTrtTxt" type="com.sunopsis.sql.DbInt"><![CDATA[3194]]></Field>
	<Field name="KimMultiDserver" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KmDefault" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KmLang" type="java.lang.String">null</Field>
	<Field name="KmSrcLang" type="java.lang.String">null</Field>
	<Field name="KmSrcTechno" type="java.lang.String"><![CDATA[SALESFORCE]]></Field>
	<Field name="KmTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="KmVersion" type="java.lang.String">null</Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:28:08.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LkmType" type="java.lang.String">null</Field>
	<Field name="LChecksum" type="com.sunopsis.sql.DbInt"><![CDATA[4369]]></Field>
	<Field name="LCode" type="java.lang.String">null</Field>
	<Field name="OggJkm" type="java.lang.String">null</Field>
	<Field name="OrdFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ProcType" type="java.lang.String">null</Field>
	<Field name="ProdAstType" type="java.lang.String">null</Field>
	<Field name="RepGuid" type="java.lang.String">null</Field>
	<Field name="RepVersion" type="java.lang.String">null</Field>
	<Field name="ScriptPath" type="java.lang.String">null</Field>
	<Field name="ScOrigTrtTag" type="java.lang.String">null</Field>
	<Field name="Subtype" type="java.lang.String">null</Field>
	<Field name="TrtName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle]]></Field>
	<Field name="TrtType" type="java.lang.String"><![CDATA[KL]]></Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
	<Field name="VLastDate" type="java.sql.Timestamp">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5147265f-d7b9-420c-8d1e-dab8dd283e7b]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3194]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[***Modified on 11/22/2015 by John Rensberger***
***Updated connection details for SQL Loader to handle special characters in database passwords***

Tasks / Load Data To Staging(SQLLDR)
Modified (line 14) -- \"<@=oraPassword@>\"
Added \" to include double quotes around password

--------------------------------------

Component: LKM Salesforce to Oracle (SFDC Webservice API based)
Author: Bristlecone Inc.
Version: 5.17
Compatability:ODI 11.1.1.6 and above

Updated:
22-June-2016
16-Jan-2016 : added support for ODI 12.2.1.2.6

Description:
- Loading Knowledge Module to retrieve the data from Salesforce.com's standard and custom objects to a Oracle table.
- This knowledge module uses Salesforce.com partner WSDL API to extract data from Salesforce.
- The data file is loaded using Oracle SQLLDR. Check KM option 'DIRECT_DATA_LOAD' to load data directly into staging.

To use this knowledge module and  run the Interface mapping:
1. Create interface design using Salesforce.com models including filters and transformations.
2. Choose LKM Salesforce.com to Oracle as loading knowledge module for the source tables
3. Execute the interface design and follow up the steps in the logs.

Restrictions:
You must have an access to Salesforce.com.
Can be used in Enterprise, Unlimited, or Developer Edition.

Before using this Knowledge Module install:
(Contact your Salesforce.com correspondents to obtain these WSDL/jar files)
Force.com Web Services Connector (WSC) :
  - partner-<version>.jar, e.g. partner-29.jar
  - wsc-<version>.jar, e.g. force-wsc-29.0.0.jar]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Edit Command]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_TRT_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9e926d57-c0ee-43cc-b928-ac8f380e0ea5]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3195]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1007]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[10]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[Query]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[ACTION]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Action to be performed]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2b7bff65-1a68-4365-af77-9684952b3422]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3195]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Operation name to be performed. Query will extract data from specified Salesforce.com object(s).

Default : Query

Supported Values: 
Query: Executes a query against the specified object and returns data that matches the specified criteria.

QueryAll: Retrieves data from specified objects, whether or not they have been deleted.

QueryUpdated: Retrieves the list of individual objects that have been updated (added or changed) within the given timespan for the specified
object.

QueryDeleted: Retrieves the list of individual records that have been deleted within the given timespan for the specified object.

]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[User Exit help]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_UE_HELP]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_USER_EXIT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[13e9dcea-7522-457f-85a1-305b8f9ce579]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3196]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1008]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[20]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[10000]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[LOAD_BATCH_SIZE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Batch size for data extraction ]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d0619c4a-6a9d-4689-990a-68f1b971ba07]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3196]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Batch size for data extraction at a time from Salesforce.com.

Default for BULK Extraction : 10000

Batch sizes should be adjusted based on processing times. Start with 5000 records and adjust the batch size based on processing time. If it takes more than five minutes to process a batch, it may be beneficial to reduce the batch size.

In case of SOAP Extraction the batch size must be limited as below:

Default : 500
Minimum : 200
Maximum : 2000

]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[54f706b5-f73c-4bdf-9a7c-51f636b78bdd]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3197]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1009]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[30]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[USE_BULK_API]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to use Bulk API]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c4b49481-2e22-497d-afde-aa71daa5d00b]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3197]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Select this option to use the Bulk API to query records. The Bulk API is optimized to work asynchronously. It's faster than the default SOAP-based API due to parallel processing and fewer network round-trips. 

Supported values are: 'true' and 'false'
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8cf85f4a-0406-43f1-9655-5c54f204eb5e]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3198]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1010]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[40]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[Parallel]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[CONCURRENCY_MODE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Sets the concurrency mode of job]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[05c913c9-670a-4488-ba97-d07445dbb797]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3198]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[The concurrency mode for the job only applies for the BULK approach. The valid values are

Default : Parallel

* Parallel: Process batches in parallel mode.

* Serial: Process batches in serial mode.
Processing in parallel can cause database contention. When this is severe, the job may fail. If you're experiencing this issue, submit the job with serial concurrency mode. This guarantees that batches are processed one at a time. Note that using this option may significantly increase the processing time for a job.

]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[88c320fb-c1ab-4076-9b6c-7c7c81642e8a]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3199]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1011]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[45]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[COMPRESSION]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to control for compression]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6eb172ed-5a45-4430-91b6-476dcf4b7957]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3199]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Compression enhances the performance and is turned on by default. You may want to disable compression if you need to debug the underlying SOAP messages. To turn off compression, set the option values as 'False'.

Default: True

Applicable only for BULK approach i.e. USE_BULK_API = 'True']]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[78fc9368-2884-46f0-a62e-5b2190818906]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3200]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1012]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[50]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[\csv\<%=odiRef.getPop("POP_NAME")%>.csv]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[CSV_FILE_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[CSV file Name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a59c4b08-e2a5-4f07-8f21-f0661c0ec5de]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3200]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[CSV file name to be be created after extracting data from Salesforce in case of Bulk Extraction.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[152e0755-198b-4876-898e-5a72a49f9973]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3201]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1013]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[60]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[UPLOAD_FROM_BATCH]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Value of Batch]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8e7e4368-3aac-43ec-a291-ce6d353662e2]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3201]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Mention the batch from where user wants the data to be loaded. Applicable only for BULK approach.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[fb56744c-cbf4-4527-b34d-27ce1c457902]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3202]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1014]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[70]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[USE_SALESFORCE_AS_SOURCE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to control data extraction]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[119411f8-8b3f-4dcf-8b32-590f8df07841]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3202]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Flag to control the extraction of the data from the Database,

Default : True

True : Extract data from the database and create the csv file.

False : Does not create the csv file.

Note: to be used only if data file already exist in csv format at the CSV_FILE_LOCATION option.
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[57208fa0-0af7-4296-a4ca-4ecaad1ceb55]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3203]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1015]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[80]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[DELTA_EXTRACTION]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to start delta extraction]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[406b6c68-b71e-41cf-beb7-e8859afe7e82]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3203]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[To process the delta/incremental extraction from Salesforce.com objects, set this option 'True'.

Note: When set to 'True', make sure that the LAST_RUN_OUTPUT_PROPERTY_FILE should have valid path of the property file, where the last run 'Date' and 'Time' are stored.

Default: False]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8d200a03-388d-40e0-8d5f-0ddc69e6130a]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3204]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1016]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[85]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[\properties\<%=odiRef.getPop("POP_NAME")%>.properties]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[LAST_RUN_OUTPUT_PROPERTY_FILE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Properties file path]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ea3f326f-3933-4261-a475-f8e359781313]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3204]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Specify the location, where the property file will be created. The property file used for storing the last run date and time of the interface for incremental upload.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c2d42ece-a659-4122-8769-567ff54c37e9]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3205]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1017]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[90]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[UTF8]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[CHARACTER_SET]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Defines the character set]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1a4e9ce4-7929-4c49-89ee-e11babeca170]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3205]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Define the data character set.

Default: UTF8]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7694bdb6-554e-4072-a8e4-c6ebd51a1711]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3206]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1018]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[95]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[<?=""+(char)8?>]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[DATA_WRAPPING_CHAR]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Special Character to wrap data]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a1c25e14-7fa9-410f-b547-825496da5766]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3206]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Provide single special character to wrap the column data in the CSV file. 

Default : <?=""+(char)8?>

Note: This is only applicable for the SOAP extraction. Avoid using double quote("), because if your data having double quote in between with new line character, your data loading into staging may fail.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0cc24de5-19ff-4041-abb1-7da922a61bc3]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3207]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1019]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[100]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[NONE]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[START_DATE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Provide start date]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1858c82e-910a-49ca-816a-c26256c4128b]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3207]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Specify the start date for extraction of data from the salesforce in case of QueryUpdated and QueryDeleted operation.

The date pattern must be "yyyy-MM-dd hh:mm", eg. 1999-12-24 00:00

Default : NONE]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0bc044b2-ede3-460d-be79-4d43c5672d4c]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3208]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1020]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[NONE]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[END_DATE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Provide end date]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ba82ec63-51e2-451a-9d64-9bf0f5298833]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3208]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Specify the end date for extraction of data from the salesforce in case of QueryUpdated and QueryDeleted operation.

The date pattern must be "yyyy-MM-dd hh:mm", eg. 1999-12-24 00:00

Default : NONE]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2735261a-689b-44be-a056-878fa98dcdfe]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3209]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1021]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[115]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[\log\<%=odiRef.getPop("POP_NAME")%>.genlog]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[LOG_FILE_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Log file Name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5319e69e-70a8-4d19-b46a-673d2bb3a397]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3209]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Code generation log file name.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[cd2e2034-c45b-46f8-bbae-ab6dd26b51ff]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3210]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1022]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[120]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[USE_TRACE_LOG]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to trace log file]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[cb1690f1-fe27-48ac-84f1-ec8df7061405]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3210]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Flag to enable Salesforce.com communication trace logs.

Default: False

Note: The tracing log file will be saved in the path provided in the KM option 'SF_TRACE_LOG'.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2b39cef4-ea66-40f2-a7e6-b93dead5af3b]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3211]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1023]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[130]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[\log\<%=odiRef.getPop("POP_NAME")%>.log]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SFDC_TRACE_LOG]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[SFDC trace log file]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e15261fc-3696-4a22-99a4-0cc306eb884b]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3211]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Salesforce.com  trace log file name. The trace log file wiil be generated only if KM option 'USE_TRACE_LOG' is set to 'True'.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[bacdb42e-3d2d-43ee-9f98-f4d803c69235]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3212]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1024]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[140]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[C:\Bristlecone]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[TEMP_DIR]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Temporary directory]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[735877ca-5953-4eeb-b4f9-9457dcd2a94b]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3212]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Temporary directory where .genlog file, .ctl file, .log file, etc will be created]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7520aefa-1de9-4051-bb99-b6ce109ef1c4]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3213]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1025]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[150]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[PROCESS_ONLY_CSV]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to write data in CSV]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c943921e-ca43-48f7-becc-af447a752939]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3213]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Flag to write Salesforce.com objects data into the CSV file as target.

Default: False]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[73cdf42d-f196-4787-bde7-b05b43771d78]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3214]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1026]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[160]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[CONNECTION_TIMEOUT]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Connection timeout]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[63b22189-2f80-4c45-988b-2f0834d02c72]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3214]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[The number of seconds to wait for a connection during API calls.

Default: 0]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3ba54e33-3191-4614-b9e2-7306d2a0e3ae]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3215]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1027]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[170]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SFDC_READ_TIMEOUT]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Read timeout]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[61cea6b8-795a-40bf-a16a-39f10b7c5704]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3215]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Specify how many seconds, the ODI waits to receive a response back from the server before returning an error for the request.

Default: 0]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[84072e37-117a-4f2c-8e85-d3ef6528e3eb]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3216]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1028]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[180]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SFDC_MAX_REQUEST_SIZE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Size of the message sent]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6f80581b-5cfc-46d5-ad0c-00b58aef8a20]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3216]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[The size of the message sent to Salesforce.com.

Default: 0]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[00e6a254-f701-4c5b-9182-bc89ccd12e0a]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3217]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1029]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[190]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SFDC_MAX_RESPONSE_SIZE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Size of the message received]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0cb7b3bf-dce7-432f-a1b8-340d079a6822]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3217]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[The size of the message received from Salesforce.com.

Default: 0]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[06f1ea63-5b89-4308-8289-1637aaa8e895]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3218]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1030]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[200]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[DELETE_TEMPORARY_OBJECTS]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Delete temporary files]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5926f7c9-e71b-41b6-9cb8-a2c36e9f1a8b]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3218]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Cleans the data and other temporary files.

Default: True]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[bdfce617-ffc1-41e8-a2a1-574ae30aebdc]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3219]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1031]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[210]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[DIRECT_DATA_LOAD]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Uploads data directly to staging]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8c9c0555-33e7-447b-8a4b-a2e965d3a053]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3219]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Flag to control the direct source data insertion to the staging area without creation of CSV file.

Note: Applicable only for SOAP approach, not for Bulk load

Default : False]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9f5d8213-b6f8-42b9-a51a-30bb5d332d14]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3220]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1032]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[220]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[MAX_ALLOWED_ERRORS]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Number of maximum allowed errors]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7405736e-e9d8-4c06-88e4-99a5db4d5d4e]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3220]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[When the number of discarded records is equal to MAX_ALLOWED_ERRORS the load process will stop.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a157321b-9680-4d85-a512-e28c25c0718a]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3221]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1033]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[230]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[MAX_ROW_COUNT]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Maximum rows to extract]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[740814e0-4f0a-47d5-b8a7-3fde09d24d30]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3221]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[To extract maximum number of rows from Salesforce.com.
By default <Blank> that means will load all records.
User can pass numeric value e.g. 100, will load only 100 records.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[248c938a-5885-409a-b7f7-6292ffb9f93a]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[3222]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1034]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[250]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[330]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[USER_TIMEZONE_DIFFERENCE_WITH_GMT_IN_MINUTES]]></Field>
	<Field name="UeSdesc" type="java.lang.String">null</Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f5dfdf1a-438e-4406-aca8-aba42117ea83]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3222]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Specify the value in minutes of the difference in the timezone of the user machine with respect to GMT.

For eg. If the user machine is in IST timezone then difference in minutes would be 330 minutes.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SALESFORCE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3223]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c05e2bfb-44ae-4dc8-b95a-54c86ebccbce]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1452]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:19:46.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[70]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Work Table]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4edb1dca-ea8f-47e9-ad09-16d133dfc113]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3223]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[create table <%=odiRef.getTable("L", "COLL_NAME", "W")%>
(
	<%=odiRef.getColList("", "[CX_COL_NAME]\t[DEST_WRI_DT] " + odiRef.getInfo("DEST_DDL_NULL"), ",\n\t", "","")%>
)]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Target Technology]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[DEF_I_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_LINE_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3224]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e7dbb14a-abf6-4220-a849-5fd6fafe46ca]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1453]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:19:47.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[80]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Initialize Source Connection Properties]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[182e91f9-3e84-4275-9c9b-84bc3a5d2ddf]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3224]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<@
            String sfuName =  "<%=odiRef.getInfo("SRC_USER_NAME")%>";
            logger.log(OdiSfdcLogger.FINEST,"Salesforce user name : "+sfuName);
 
            String sfPassword = odiRef.getInfo("SRC_PASS");

            String endpoint = "<%=odiRef.getInfo("SRC_DSERV_NAME")%>";
            logger.log(OdiSfdcLogger.FINEST,"Salesforce connection endpoint : "+ endpoint);

                     int index = endpoint.indexOf(((char)47+"u"+(char)47));	
	if (index == -1) {
		throw (new RuntimeException("Invalid Endpoint Url ..."));
	}
            	index += 3;
            
            String apiver = endpoint.substring(index, (index + 2));
            logger.log(OdiSfdcLogger.FINEST,"Salesforce API Version : "+ apiver);

            boolean isTraceLog = ("<%= odiRef.getOption("USE_TRACE_LOG")%>").equals("0")?false:true;
            logger.log(OdiSfdcLogger.FINEST,"Salesforce trace log : "+isTraceLog);

            String sfTraceLogFileName = "<%=odiRef.getOption("SFDC_TRACE_LOG")%>";
            logger.log(OdiSfdcLogger.FINEST, "Salesforce trace log file name : " + sfTraceLogFileName);            

           String sfconnectionTimeout = "<%= odiRef.getOption("CONNECTION_TIMEOUT")%>";
            logger.log(OdiSfdcLogger.FINEST,"Salesforce connection timeout : "+sfconnectionTimeout);
	     
            String sfmaxreqsize = "<%= odiRef.getOption("SFDC_MAX_REQUEST_SIZE")%>";
            logger.log(OdiSfdcLogger.FINEST,"Salesforce max request size : "+sfmaxreqsize );

            String sfmaxrespsize = "<%= odiRef.getOption("SFDC_MAX_RESPONSE_SIZE")%>";
            logger.log(OdiSfdcLogger.FINEST,"Salesforce max response size : "+sfmaxrespsize );

            String sfreadtimeout = "<%= odiRef.getOption("SFDC_READ_TIMEOUT")%>";
            logger.log(OdiSfdcLogger.FINEST,"Salesforce read timeout : "+sfreadtimeout );

            boolean sfcompression = ("<%= odiRef.getOption("COMPRESSION")%>").equals("0")?false:true;
            logger.log(OdiSfdcLogger.FINEST,"Salesforce sfcompression : "+sfcompression );

            manager.setSf_userName(sfuName);
            manager.setSf_password(sfPassword);
            manager.setSf_authEndPoint(endpoint);
            manager.setSf_apiVersion(apiver);
            manager.setSf_traceLogFileName(sfTraceLogFileName);
            manager.setSf_traceLog(isTraceLog);
            manager.setSf_maxRequestSize(sfmaxreqsize);
            manager.setSf_maxResponseSize(sfmaxrespsize);
            manager.setSf_readTimeout(sfreadtimeout);
            manager.setSf_connectionTimeout(sfconnectionTimeout);
            manager.setLoadType(connectionType);          
            manager.setSf_compression(sfcompression); 
            
            manager.login();            

            odiref = manager.getSfSoapCallInstance();//Soap Connection
              logger.log(OdiSfdcLogger.FINEST,"manager.getBulkConnection() : "+manager.getBulkConnection() );
            odiSfdcRef.setConnection(manager.getBulkConnection());//Bulk Connection

@>
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Source Technology]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[COL_I_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_LINE_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3225]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7c368975-ba59-42a6-b5f6-08a8f7523a4a]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1454]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:19:47.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[90]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Initialize Target Connection Properties]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d9e5f353-7781-48aa-b179-d3fbbb67756d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3225]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<@
String jdbcDriver = "<%=odiRef.getInfo("DEST_JAVA_DRIVER")%>";
String jdbcUrl = "<%=odiRef.getInfo("DEST_JAVA_URL")%>";
String orclUser = "<%=odiRef.getInfo("DEST_USER_NAME")%>";
@>

<@ String orclTargetPwd = odiRef.getInfo("DEST_PASS"); @> 

<@
            String oraDriverName =  "<%=odiRef.getInfo("DEST_JAVA_DRIVER")%>";

            String orauName =  "<%=odiRef.getInfo("DEST_USER_NAME")%>";

            String oraPassword = odiRef.getInfo("DEST_PASS");

            String oraUrl = "<%=odiRef.getInfo("DEST_JAVA_URL")%>";

            manager.setOra_driver(oraDriverName);
            manager.setOra_userName(orauName);
            manager.setOra_password(oraPassword);
            manager.setOra_dburl(oraUrl);

            odiref.setResourceConManager(manager);//SOAP

            csvtoOracle = odiSfdcRef.setOrcConnection(manager.getOracleConnection());//BULK
@>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3226]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9fce2a89-0893-4e9b-a594-aadf7b22da92]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1455]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:19:48.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[100]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Generate SOQL Query]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[03ce3ed9-2dac-44d0-9aa8-3b081a1143fc]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3226]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<@
staginSchemaName =  "<%=odiRef.getInfo("DEST_DEFW_SCHEMA")%>";
ora_tableName ="<%=odiRef.getTable("L", "COLL_NAME", "W")%>";
lineSOQL = "";
sf_columnNames = "<%=odiRef.getColList("", "[EXPRESSION]".toUpperCase(), ",", "","")%>";
ora_columnNames = "<%=odiRef.getColList("", "[CX_COL_NAME]-[DEST_WRI_DT] ", "~~","","")%>"; 
logger.log(OdiSfdcLogger.FINEST, "+++++++++Oracle Column with Datatype list: "+ora_columnNames);

//Setting and parsing interface filter
odiref.setFilter("<%=odiRef.getFilterList("","([EXPRESSION])","AND","")%>");
odiref.setAction(action);
odiref.setSfFromDate(fromDate);
odiref.setSfEndDate(toDate);            
boolean whereflag = false;
String maxRowCount =  "<%=odiRef.getOption("MAX_ROW_COUNT")%>";

if (odiSfdcRef.getFilter().equals("") ) {
	lineSOQL = "select "+ sf_columnNames+ " from " + "<%=odiRef.getFrom()%>";
}else {
    whereflag = true;
	lineSOQL = "select "+sf_columnNames + " from " + "<%=odiRef.getFrom()%>" + " where " + "<%=odiRef.getFilterList("","([EXPRESSION])","AND","")%>";
}

if(!maxRowCount.trim().equalsIgnoreCase("")){
	lineSOQL += " LIMIT "+maxRowCount;
}

String tabName = "<%=odiRef.getFrom()%>".split(" ")[0].trim();
String idList = odiref.getIDList(tabName);
if (!(idList == null || idList.equals(""))) {
	lineSOQL += (whereflag) ? " AND Id IN (" + idList + ")" : " where Id IN (" + idList + ")";
}

logger.log(OdiSfdcLogger.FINEST, "+++++++++SF Query: "+lineSOQL);
String tablealias = "<%=odiRef.getSrcTablesList("", "[POP_TAB_ALIAS]", "", "")%>";
String prefixe = "<%=odiRef.getSrcTablesList("", "[POP_TAB_ALIAS]", "", "")%>"+".";
String tableName = "<%=odiRef.getSrcTablesList("", "[RES_NAME]", "", "")%>";
String dbBeanIdName = action+tableName;

//lineSOQL = lineSOQL.replace(prefixe, "");
//lineSOQL = lineSOQL.replace(tablealias, "");
System.out.println("lineSOQL from ODI: "+lineSOQL);
SOQLBulkQuery = odiSfdcRef.parseSOQLQuery(lineSOQL);
//OracleQueryHeader = lineSOQL.substring(lineSOQL.indexOf("select")+7, lineSOQL.indexOf("from")).trim();
OracleQueryHeader =  "<%=odiRef.getColList("", "[CX_COL_NAME]", ",","","")%>";
odiSfdcRef.setOracleTableHeader(OracleQueryHeader);
logger.log(OdiSfdcLogger.FINEST, "OracleQueryHeader: "+OracleQueryHeader);
String mappedCols = "<%=odiRef.getColList("", "[CX_COL_NAME]~~[DEST_DT]", ",", "", "")%>";
//added newly
String mappedColumnNames = <%=odiRef.getQuotedString(odiRef.getColList("", "[EXPRESSION]~[COL_NAME]", ",", "").replaceAll(""+(char)34, ""+(char)158))%>;
odiSfdcRef.setTargetColumnType(mappedCols);
sf_columnNames = sf_columnNames.replace(prefixe,"");
@>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3227]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[193d5268-37eb-4b27-afaf-93df835b67a3]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1456]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:19:48.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[160]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Set Parameters]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e197ddc9-aa02-4295-94f9-467309be0d7d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3227]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<@
String csvFilePath = tempPathOnAgent + "<%= odiRef.getOption("CSV_FILE_NAME")%>";
String columnQuote =  (soap?"<%= odiRef.getOption("DATA_WRAPPING_CHAR")%>":(""+(char) 34));
if(soap){
	odiref.setSf_loadBatchSize(loadBatchSize);
    	odiref.setCSVFileLocation(csvFilePath);
    	odiref.setSf_tableColumnHeader(sf_columnNames);	
    	odiref.setOra_tableColumnHeader(ora_columnNames);
    	//new line
	odiref.setMaxAllowedErrors(maxAllowedErrors);
    	odiref.setExtractFromSalesforce(extractSFData);
	odiref.setDirectDataDownload(useCSVFlag);
    	odiref.setCharacterSet(characterSet);
    	odiref.setExecuteLastRun(isLastRun); 
	odiref.setStagingSchemaName(staginSchemaName);
	odiref.setTableName(ora_tableName);
	odiref.setAction(action);
	odiref.setSf_dataWrappingChar(columnQuote);
	odiref.setSFSOQL(lineSOQL);
}else {  
	odiSfdcRef.setCsvFilePath(csvFilePath);
    	odiSfdcRef.setSfObjectName(tableName);
    	odiSfdcRef.setCharacterSet(characterSet);
    	odiSfdcRef.setLastRunOutput(isLastRun);
    	odiSfdcRef.setSOQLBulkQuery(SOQLBulkQuery);
	csvtoOracle.setLoadBatchSize(loadBatchSize);
	csvtoOracle.setUploadFromBatch(loadfrombatch);
	csvtoOracle.setStagingSchemaName(staginSchemaName);
	csvtoOracle.setTargetTableName(ora_tableName);
	odiSfdcRef.setMode(mode);
}
@>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SALESFORCE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3228]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e85c9d08-1ea0-46a8-bbef-d90a834b8325]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1457]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:19:49.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[210]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Extract Data]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[652fd6f4-10f5-49f5-aab9-71d696db2f08]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3228]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<@
//SOAP API
if(soap){
	if(extractSFData){
		odiref.performAction(action); //SOAP API    
	}
} else{
	String extract = "<%=odiRef.getOption("USE_SALESFORCE_AS_SOURCE")%>";
	if (extract.equals("1")) 
	{
		logger.log(OdiSfdcLogger.FINEST,"Before Calling Extraction"+System.currentTimeMillis());
		status = odiSfdcRef.extractData(action);
		new ODISFPropertyDataCreater(logger).updatePropetiesFile(); 
		logger.log(OdiSfdcLogger.FINEST,"After Calling Extraction"+System.currentTimeMillis());
	}
}
@>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[FILE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3229]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[64f742fa-5993-4ca9-be91-5ff31cce8ae1]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1458]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:19:49.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[220]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Generate Loader Script]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8bc58ba8-6f0f-44c1-9063-fc9521b0d242]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3229]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<%
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class sqlldrColFormat {
    // This HashMap contains search key: <alias>.<col_name> and value: <source data type>
    static HashMap srcColDataTypes = new HashMap();

    public static String quoteReplacement(String s) {
    // quoteReplacement like in Java 1.6
    // This is needed, as BSh version only supports Java 1.5
        if ((s.indexOf((char)92) == -1) && (s.indexOf('$') == -1))
            return s;
        StringBuffer sb = new StringBuffer();
        for (int i=0; i<s.length(); i++) {
            char c = s.charAt(i);
            if (c == (char)92) {
                sb.append((char)92); sb.append((char)92);
            } else if (c == '$') {
                sb.append((char)92); sb.append('$');
            } else {
                sb.append(c);
            }
        }
        return sb.toString();
    }

    public static String getPartiallyQuotedString( String in )  
    // Searches for "<Start Quoted>...<End Quoted>" in order to replace these strings
    // by odiRef.getQuotedString(...) of the string. This is required to pass [METADATA] 
    // from first % iteration to second % iteration. Otherwise invalid Java code is generated.
    { 
        // Compile regular expression
        Pattern pattern = Pattern.compile("<Start Quoted>(?:.)*?<End Quoted>", Pattern.DOTALL);
        Matcher matcher = pattern.matcher(in);

        // Replace all occurrences of pattern in input
        StringBuffer buf = new StringBuffer();
        boolean found = false;
        while ((found = matcher.find())) {
            // Get the match result
            String replaceStr = matcher.group();
            // Remove <?=odiRef.getObjectName ....?>
            replaceStr = replaceStr.replaceAll("<?(?:.)*?\?>","");
            // Insert replacement
            // Don't use appendReplacement, we do not want specail chars to be replaced
            matcher.appendReplacement(buf, "");
            buf.append( odiRef.getQuotedString ( replaceStr  ));
        }
        matcher.appendTail(buf);

        // Get result
        return buf.toString();
    }

    public static void addSrcTableMetadata( String popTabAlias, metadata )  
    // Extract column names and their datatype from metadata
    {
        String[] a = metadata.split("SNP"+(char)92+"$CRDWG_COL");
        int i;
        for (i=0;i<a.length;i++) { 
	String[] colInfo = a[i].split("SNP"+(char)92+"$CR"); 
	if (colInfo.length > 2 && colInfo[1].startsWith("COL_NAME")) { 
	  String colName = colInfo[1].substring(9);
	  String dataType = colInfo[2].substring(10);
	  srcColDataTypes.put( popTabAlias+"."+colName, dataType );
	}; 
        };
    }

    public static String ABAPDataType( String expr) 
    // Returns the ABAP data type of the column used in expr.
    // expr may only contain reference to a source single column
    // If no column is refereenced, an empty string will be returned.
    {
        // Go over all source columns
        Iterator iter = srcColDataTypes.keySet().iterator();
        while (iter.hasNext()) {
          String curCol = (String)iter.next();
          Pattern pattern = Pattern.compile((char)92+"b"+(char)92+"Q"+curCol+(char)92+"E"+(char)92+"b");
          Matcher matcher = pattern.matcher(expr);
          if (matcher.find()) { return srcColDataTypes.get(curCol); };
        };
        return "";
    }

    public static String get( String colName, srcDataType, destDataType, scale, expr) 
    // Returns format description for sqlldr
    {
       if (destDataType.startsWith("TIMESTAMP")) {
            return (char) 34 + "DECODE(:" + colName + ",'null',NULL,TO_TIMESTAMP(:" + colName + "," + (char) 39 + "YYYY-MM-DD" + (char) 92 + (char) 34 + "T" + (char) 92 + (char) 34 + "HH24:MI:SS.ff" + (char) 92 + (char) 34 + "Z" + (char) 92 + (char) 34 + (char) 39 + ") )" + (char) 34 ;
        } else if ("DATE".equals(destDataType)) {
            return " DATE  " + (char) 34 + "YYYY-MM-DD" + (char) 34 + " NULLIF " + colName + " = " + (char) 34 + "null" + (char) 34;
        } else if ("NUMBER".equals(destDataType) || "FLOAT".equals(destDataType) || "REAL".equals(destDataType) || "BINARY_DOUBLE".equals(destDataType) || "BINARY_FLOAT".equals(destDataType)) {
            String fractionFormat = "";
			String signFormat = "";
            if (!scale.equals("0") && !scale.equals("")) {
                fractionFormat = "D999999999999999999999999";
				return "  " + (char) 34 + "TO_NUMBER(DECODE(:" + colName + ",'',NULL,'null',NULL,TO_NUMBER(:"+colName+")), '99999999999999999999999999999999999999" + fractionFormat + signFormat+ "', 'NLS_NUMERIC_CHARACTERS=''.,''') " + (char)34;
            }else{
				return "  " + (char) 34 + "TO_NUMBER(DECODE(:" + colName + ",'',NULL,'null',NULL,:"+colName+"))" + (char)34;
			}
        } else if ("CHAR".equals(destDataType)) {
            return "  " + (char) 34 + "CASE WHEN :" + colName + "='true' then 'T' ELSE 'F' END" + (char) 34;
        } else if ("CLOB".equals(destDataType)){
          return "CHAR(4000)"; 
        } else {
           return (char) 34 + "REPLACE(:"+colName+",'<br>',chr(10))" + (char) 34 ;
        }
    }

}
%>

<%=sqlldrColFormat.getPartiallyQuotedString(
    odiRef.getSrcTablesList("<"+"%", " sqlldrColFormat.addSrcTableMetadata(\u0022[POP_TAB_ALIAS]\u0022, <Start Quoted>[METADATA]<End Quoted>); ", "", "%"+">")
) %>

<% if(odiRef.getUserExit("DIRECT_DATA_LOAD").equals("0")){%>
OdiOutFile "-File=<@=ctlFileName@>"
OPTIONS ( 
	ERRORS=<%=odiRef.getUserExit("MAX_ALLOWED_ERRORS")%>,
	SKIP=1
)
LOAD DATA
CHARACTERSET '<@=characterSet@>'
INFILE '<@=dataFileName@>' "str '\n'"
BADFILE  '<@=badFileName@>' 
DISCARDFILE '<@=dscFileName@>' 
CONTINUEIF LAST != '<@=columnQuote@>'
INTO TABLE  <%=odiRef.getTable("L", "COLL_NAME", "W")%>
FIELDS TERMINATED BY "," OPTIONALLY ENCLOSED BY '<@=columnQuote@>'
TRAILING NULLCOLS
(
	<%=odiRef.getColList("", "[CX_COL_NAME]\t" + "<"+"%=sqlldrColFormat.get(\u0022[CX_COL_NAME]\u0022, \u0022[SOURCE_DT]\u0022, \u0022[DEST_DT]\u0022, \u0022[SCALE]\u0022, \u0022[EXPRESSION]\u0022 ) %"+">" , ",\n\t", "","")%>
)
<%}%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3230]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3700cd7c-0cd8-403d-a54b-35a79b3c50fa]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1459]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:19:50.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[10]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Java Classes ]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b93583fa-2878-4b63-8065-6ccbd45be8c4]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3230]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<@
//********Start of OdiSfdcLogger class**************
import java.io.File;
import java.io.FileOutputStream;
import java.io.PrintStream;

/**
 * ODI Salesforce.com Logger Class
 * @author Anzarul.Haque
 */
public class OdiSfdcLogger {

	PrintStream out;
	/*
	 * Log Levels
	 */
	public static final int DEBUG = 0;//Highest Value of the Log- Maximum Trace
	public static final int ERROR = 1;
	public static final int FINE = 2;
	public static final int FINER = 3;
	public static final int FINEST = 4;//Lowest Value of the Log- Minimum Trace
	Date logDateTime = new Date();

	/*
	 * Default Log Level
	 */
	private int intDefaultlog = -1;


	/**
	 * Creates Logger Instance and set initial Log Level.
	 * For Production Release, default log level will be FINEST.
	 * Change the log level to DEBUG if you need more detail trace.
	 * 
	 * @param level
	 * @param logFile
	 * @throws Exception
	 */
	public OdiSfdcLogger(int level, String logFile) throws Exception {
		intDefaultlog = level;
		if (intDefaultlog > FINEST || intDefaultlog < DEBUG)
			intDefaultlog = DEBUG;
		
	    String logFileName = "";
		if(logFile == null)
			logFileName = createLogFile();
		else{
			createLogFile(logFile);
			logFileName = logFile;
		}
		
		try {
			//Set the log file name in Java's System output stream
			if(logFileName != null || !(logFileName.trim().equals(""))){
				out = new PrintStream(new FileOutputStream(logFileName));
				System.setOut(out);
				System.setErr(out);
			}
			System.out.println("##############################################################");
			System.out.println("############### ODI Salesforce.com LKM Log file ##############");
			System.out.println("##############################################################");
		}catch(Exception ex) {
			ex.printStackTrace();
			System.out.println("Error in creating log file : " + logFileName + "-" + ex.getMessage());
		}
	}
	
	private void createLogFile(String logFile) throws Exception {
		String path = logFile.substring(0, logFile.lastIndexOf(System.getProperty("file.separator"))+1);
		File file = new File(path);
		if(!file.exists())
			file.mkdir();
		file = new File(logFile);
		if(!file.exists())
			file.createNewFile();
	}
	/**
	 * Create log file
	 * @return
	 * @throws Exception
	 */
	private String createLogFile() throws Exception {
		String logPath = "";
		try{
			String path = System.getProperty("user.home")+ 
			              System.getProperty("file.separator")+ 
			              "ODI_SF_Log";
			File file = new File(path);
			if(!file.exists())
				file.mkdir();
			String fileName = file.getCanonicalPath()
			                  + System.getProperty("file.separator")
			                  + "ODI_Salesforce_IKM.genlog";
			file = new File(fileName);
			if(!file.exists())
				file.createNewFile();
			logPath = file.getCanonicalPath();
			System.out.println("## Log File Path="+ file.getCanonicalPath());
		}catch(Exception ex){
			System.out.println("Error: "+ ex.toString());
		}
		return logPath;
	}
	/**
	 * For Log Message as per the Level given by the user
	 * @param msg
	 * @param level
	 */
	public void log(int level, String msg) {
		if (level > FINEST || level < DEBUG)
			return;
		if (level >= intDefaultlog) {
			logDateTime.setTime(System.currentTimeMillis());
            System.out.println(logDateTime + " : # " + msg);
		}
		return;
	}
	
	public void log(String msg){
		log(DEBUG, msg);
	}
	
	public void log(String msg, String className, int level){
		msg = "["+ className+ "] "+ msg;
		log(level, msg);
	}
	
	public void close(){
		out.close();
		out = null;
	}
}//end of OdiSfdcLogger


import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

//import com.sforce.async.BulkConnection;
import com.sforce.ws.ConnectionException;

//******Start of OdiSfdcRef class***********
/**
 * This class is a API class which supports methods to constructs SOQL syntax
 * expressions to generate Select Statement and filter condition.
 * 
 * This class uses ODI interface definition information using their API to build
 * selected columns, selected objects, and filter conditions.
 * 
 * The api's provided in this class are used as substitution api's to
 * dynamically generate SOQL Query for an interface design.
 * 
 */
public class OdiSfdcRef {
	/**
	 * NewLine char "\n" i.e. (char)10 gets changed to (char)92 and (char)110
	 * i.e. character 'n' by the Java bean shell Put an extra "\" to escape "\"
	 */
	private final String bsNewLine = "" + (char) 92 + (char) 92 + (char) 110;// \\n

	/**
	 * Note: only "\n" i.e. (char)10 doesn't work. To over sure put '\r' i.e.
	 * (char)13
	 */
	private final String jvNewLine = "" + (char) 13 + (char) 10;// \r\n

	// ASCII Codes
	private final String DOUBLE_QUOTE = "" + (char) 34; // "
	private final String START_BRACKET = "" + (char) 92 + (char) 40; // left
																		// bracket
																		// \(
	private final String END_BRACKET = "" + (char) 92 + (char) 41; // right
																	// bracket
																	// \)

	// logger object
	private OdiSfdcLogger logger = null;

	// Interface filter variable
	private String filter = "";
	public ArrayList oracleQuery;
	public static HashMap targetColType;
	public static String OracleQueryHeader;

	private String sfUser = "";
	private String sfPassword = "";
	private String sfEndPoint = "";
	private String orclUserName = "";
	private String orclPassword = "";
	private String jdbcUrl = "";
	private String jdbcDriver = "";
	private String sfTraceLogFileName = "";
	private String isTraceLog = "";
	private String objectName = "";

	private com.sforce.async.ConcurrencyMode mode;

	private String SOQLBulkQuery = "";
	private String csvFilePath = "";
	private SFBulkConnection connection = null;
	private Connection orcConnection;
	private boolean isLastRunOutput = false;
	OdiResourceConnectionManager odiResourceConnectionManager;
	OdiCommonUtil util;
	ODISFPropertyDataCreater odisfPropertyDataCreater;
	CSVtoOracle csvtooracle;
	ExceptionLogger exceptionlogger;
	
	private String characterSet = null;
	
	public String getCharacterSet() {
        if (null == characterSet) {
            return "UTF8";
        }
        return characterSet;
    }

    public void setCharacterSet(String characterSet) {
        this.characterSet = characterSet;
    }

	// Table alias name
	private String aliasName = "";

	/**
	 * Parameterize Constructor
	 * 
	 * @param logger
	 */
	public OdiSfdcRef(OdiSfdcLogger logger) {
		this.logger = logger;
		odiResourceConnectionManager = new OdiResourceConnectionManager(logger);
		odisfPropertyDataCreater = new ODISFPropertyDataCreater(logger);
		util = odiResourceConnectionManager.getOdiCommonUtil();
		exceptionlogger = new ExceptionLogger(logger);
	}

	/**
	 * @param connection
	 *            the connection to set
	 */
	public void setConnection(SFBulkConnection connection) {
		this.connection = connection;
	}

	/**
	 * @return the filter
	 */
	public ArrayList getQuery() {
		return oracleQuery;
	}

	/**
	 * @param filter
	 *            the filter to set
	 */
	public void setQuery(List csvMetaData) {
		ArrayList oracleQuery = parseCSVRecord(csvMetaData);
		if (oracleQuery != null)
			this.oracleQuery = oracleQuery;
	}

	/**
	 * @param set
	 *            the OracleTableHeader
	 */

	public void setOracleTableHeader(String odiSOQLQuery) {
		System.out.println("odiSOQLQuery" + odiSOQLQuery);
		this.OracleQueryHeader = odiSOQLQuery;

	}

	public String getOracleTableHeader() {
		return OracleQueryHeader;
	}

	public HashMap getTargetColumnType() {
		return targetColType;
	}

	/**
	 * @param filter
	 *            the filter to set
	 */
	public void setTargetColumnType(String query) {

		HashMap ColType = new HashMap();
		String[] columnName = query.split(",");
		for (int i = 0; i < columnName.length; i++) {
			String[] colValue = columnName[i].split("~~");
			System.out.println("colValue[0], colValue[1] :" + colValue[0] + ":"
					+ colValue[1]);
			ColType.put(colValue[0], colValue[1]);
		}
		this.targetColType = ColType;
	}

	/**
	 * @return the filter
	 */
	public String getFilter() {
		return filter;
	}

	/**
	 * @param filter
	 *            the filter to set
	 */
	public void setFilter(String filterStr) {
		String filterString = parseFilter(filterStr);
		if (filterString != null)
			this.filter = filterString;
	}

	/**
	 * @return the aliasName
	 */
	public String getAliasName() {
		return aliasName;
	}

	/**
	 * @param aliasName
	 *            the aliasName to set
	 */
	public void setAliasName(String aliasName) {
		this.aliasName = aliasName;
	}

	/**
	 * @return the sfUser
	 */
	public String getSfUser() {
		return sfUser;
	}

	/**
	 * @param sfUser
	 *            the sfUser to set
	 */
	public void setSfUser(String sfUser) {
		if (!sfUser.equals(null) || sfUser.equals(""))
			this.sfUser = sfUser;
		else {
			logger.log(logger.DEBUG, "Error in initilializing sfUser: ");
		}
	}

	/**
	 * @return the sfPassword
	 */
	public String getSfPassword() {
		return sfPassword;
	}

	/**
	 * @param sfPassword
	 *            the sfPassword to set
	 */
	public void setSfPassword(String sfPassword) {
		if (!sfPassword.equals(null) || sfPassword.equals(""))
			this.sfPassword = sfPassword;
		else {
			logger.log(logger.DEBUG, "Error in initilializing sfPassword: "
					+ sfPassword.toString());
		}
	}

	/**
	 * @return the sfEndPoint
	 */
	public String getSfEndPoint() {
		return sfEndPoint;
	}

	/**
	 * @param sfEndPoint
	 *            the sfEndPoint to set
	 */
	public void setSfEndPoint(String sfEndPoint) {
		if (!sfEndPoint.equals(null) || sfEndPoint.equals(""))
			this.sfEndPoint = sfEndPoint;
		else {
			logger.log(logger.DEBUG, "Error in initilializing sfEndPoint: "
					+ sfEndPoint.toString());
		}
	}

	/**
	 * @return the sfTraceLogFileName
	 */
	public String getSfTraceLogFileName() {
		return sfTraceLogFileName;
	}

	/**
	 * @param sfTraceLogFileName
	 *            the sfTraceLogFileName to set
	 */
	public void setSfTraceLogFileName(String sfTraceLogFileName) {
		if (!sfTraceLogFileName.equals(null) || sfTraceLogFileName.equals(""))
			this.sfTraceLogFileName = sfTraceLogFileName;
		else {
			logger.log(logger.DEBUG, "Error in initilializing isTraceLog: "
					+ sfTraceLogFileName.toString());
		}
	}

	/**
	 * @return the isTraceLog
	 */
	public String getIsTraceLog() {
		return isTraceLog;
	}

	/**
	 * @param isTraceLog
	 *            the isTraceLog to set
	 */
	public void setIsTraceLog(String isTraceLog) {

		if (!isTraceLog.equals(null) || isTraceLog.equals(""))
			this.isTraceLog = isTraceLog;
		else {
			logger.log(logger.DEBUG, "Error in initilializing isTraceLog: "
					+ isTraceLog.toString());
		}
	}

	/**
	 * @param orcConnection
	 *            the orcConnection to set
	 */
	public CSVtoOracle setOrcConnection(Connection orcConnection) {
		this.orcConnection = orcConnection;
		csvtooracle = new CSVtoOracle(logger);
		return csvtooracle;
	}

	/**
	 * @return the orclUserName
	 */
	public String getOrclUserName() {
		return orclUserName;
	}

	/**
	 * @param orclUserName
	 *            the orclUserName to set
	 */
	public void setOrclUserName(String orclUserName) {
		if (!orclUserName.equals(null) || orclUserName.equals(""))
			this.orclUserName = orclUserName;
		else {
			logger.log(logger.DEBUG, "Error in initilializing orclPassword: "
					+ orclUserName.toString());
		}
	}

	/**
	 * @return the orclPassword
	 */
	public String getOrclPassword() {
		return orclPassword;
	}

	/**
	 * @param orclPassword
	 *            the orclPassword to set
	 */
	public void setOrclPassword(String orclPassword) {
		if (!orclPassword.equals(null) || orclPassword.equals(""))
			this.orclPassword = orclPassword;
		else {
			logger.log(logger.DEBUG, "Error in initilializing orclPassword: "
					+ orclPassword.toString());
		}
	}

	/**
	 * @return the jdbcUrl
	 */
	public String getJdbcUrl() {
		return jdbcUrl;
	}

	/**
	 * @param jdbcUrl
	 *            the jdbcUrl to set
	 */
	public void setJdbcUrl(String jdbcUrl) {
		if (!jdbcUrl.equals(null) || jdbcUrl.equals(""))
			this.jdbcUrl = jdbcUrl;
		else {
			logger.log(logger.DEBUG, "Error in initilializing jdbcURL"
					+ jdbcUrl.toString());
		}
	}

	/**
	 * @return the jdbcDriver
	 */
	public String getJdbcDriver() {
		return jdbcDriver;
	}

	/**
	 * @param jdbcDriver
	 *            the jdbcDriver to set
	 */
	public void setJdbcDriver(String jdbcDriver) {
		this.jdbcDriver = jdbcDriver;
	}

	/**
	 * @return the tableName
	 */
	public String getSfObjectName() {
		return objectName;
	}

	/**
	 * @param mode the mode to set
	 */
	public void setMode(com.sforce.async.ConcurrencyMode mode) {
		this.mode = mode;
	}

	/**
	 * @param tableName
	 *            the tableName to set
	 */
	public void setSfObjectName(String objectName) {
		this.objectName = objectName;
	}

	/**
	 * @return the sOQLBulkQuery
	 */
	public String getSOQLBulkQuery() {
		return SOQLBulkQuery;
	}

	/**
	 * @param sOQLBulkQuery
	 *            the sOQLBulkQuery to set
	 */
	public void setSOQLBulkQuery(String sOQLBulkQuery) {
		if (isLastRunOutput == false)
			SOQLBulkQuery = sOQLBulkQuery;
		else
			SOQLBulkQuery = util.retainLastRunQuery(sOQLBulkQuery,
					odisfPropertyDataCreater);
	}

	/**
	 * @param isLastRunOutput
	 *            the isLastRunOutput to set
	 */
	public void setLastRunOutput(boolean isLastRunOutput) {
		this.isLastRunOutput = isLastRunOutput;
	}

	/**
	 * @return the csvFilePath
	 */
	public String getCsvFilePath() {
		return csvFilePath;
	}

	/**
	 * @param csvFilePath
	 *            the csvFilePath to set
	 */
	public void setCsvFilePath(String csvFilePath) {
		this.csvFilePath = csvFilePath;
	}

	/**
	 * Method to parse interface filter expression to generate SFDC SOQL query
	 * 
	 * @param String
	 * @return String
	 */
	private String parseFilter(String filterExpression) {

		String fExp = filterExpression.replace(bsNewLine, jvNewLine);// remove
																		// new
																		// line
																		// from
																		// the
																		// expression
		// fExp = fExp.replaceFirst("And " + START_BRACKET, "");//remove first
		// "And (" from expression

		String prefix = getAliasName() + ".";
		logger.log(OdiSfdcLogger.FINEST, "prefixe: " + prefix);

		fExp = fExp.replace(prefix, "");// remove alias name plus dot (.)

		// fExp = fExp.replaceAll(START_BRACKET, "");//remove left parenthesis
		// fExp = fExp.replaceAll(END_BRACKET, " ");//remove right parenthesis
		logger.log(OdiSfdcLogger.FINEST, "Parsed Filter String: " + fExp);
		return fExp.trim();
	}// end of parseFilter() filter

	/**
	 * @return the SOQL are per Salesforce.com standards
	 */

	public String parseSOQLQuery(String parsedSOQLQuery) {
		logger.log(logger.DEBUG, "parsedSOQLQuery: Before Parsing"
				+ parsedSOQLQuery);
		String pattern = "([C])([0-9]|([0-9][0-9])|([0-9][0-9][0-9]))([\\_])";
		System.out.println("pattern" + pattern);
		System.out.println(parsedSOQLQuery.replaceAll(pattern, ""));
		String newSOQLQuery = parsedSOQLQuery.replaceAll(pattern, "");
		logger.log(logger.DEBUG, "parsedSOQLQuery: After Parsing"
				+ parsedSOQLQuery);
		return newSOQLQuery;

	}

	private ArrayList parseCSVRecord(List metaDataContent) {
		HashMap targetColType = getTargetColumnType();
		System.out.println("targetColType" + targetColType);
		ArrayList csvRecordSet = new ArrayList();
		SimpleDateFormat sdf = new SimpleDateFormat(
				"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
		for (int rowPos = 0; rowPos < metaDataContent.size(); rowPos++) {
			StringBuffer csvRow = new StringBuffer();
			System.out.println("csvRow" + csvRow);
			csvRecordSet.add(csvRow);
			System.out.println("csvRecordSet" + csvRecordSet.get(rowPos));
			csvRow.delete(0, csvRow.length());
			String OracleHeader = getOracleTableHeader();
			System.out.println("OracleHeader" + OracleHeader);
			String[] headerColumn = OracleHeader.split(",");
			String[] dataInColumn = (String[]) metaDataContent.get(rowPos);
			for (int columnPos1 = 0; columnPos1 < dataInColumn.length; columnPos1++) {
				System.out.println("headerColumn[columnPos1]"
						+ headerColumn[columnPos1]);
				try {
					String ColType = (String) targetColType
							.get(headerColumn[columnPos1]);
					if (columnPos1 < dataInColumn.length - 1) {
						// System.out.println("dataInColumn: "+"columnPos"+columnPos1+"rowPos"+rowPos+dataInColumn[columnPos1]);
						if (rowPos == 0)
							csvRow.append(dataInColumn[columnPos1] + ",");
						else {
							String temptableData = "";
							if (ColType.equalsIgnoreCase("NUMBER")
									|| ColType.equalsIgnoreCase("INT")
									|| ColType.equalsIgnoreCase("TIMESTAMP")) {
								temptableData = dataInColumn[columnPos1];
								if (temptableData.trim().equals("")) {

									temptableData = "NULL";

								}
								if (ColType.equalsIgnoreCase("TIMESTAMP")
										&& !temptableData
												.equalsIgnoreCase("NULL")) {
									// Timestamp Handle
									String data = dataInColumn[columnPos1]
											.trim();

									temptableData = "TO_DATE('" + data
											+ "','YYYY-MM-DD')";
									if (data.length() > 10) {
										temptableData = "TO_TIMESTAMP('"
												+ new java.sql.Timestamp(sdf
														.parse(data).getTime())
												+ "','YYYY-MM-DD HH24:MI:SS.ff'"
												+ ")";
									}

									// csvRow.append(temptableData);
									// Timestamp Handle
								}
								csvRow.append(temptableData + ",");								
							} else if (ColType.equalsIgnoreCase("CHAR")) {
								temptableData = "'F',";
								if (dataInColumn[columnPos1].trim()
										.equalsIgnoreCase("true")) {
									temptableData = "'T',";
								}
								csvRow.append(temptableData);
							} else {
								temptableData = dataInColumn[columnPos1];
								temptableData = temptableData.replaceAll("'",
										"''");
								csvRow.append("'" + temptableData + "',");
							}
						}
					} else {
						if (rowPos == 0)
							csvRow.append(dataInColumn[columnPos1]);
						else {
							String temptableData = "";
							if (ColType.equalsIgnoreCase("NUMBER")
									|| ColType.equalsIgnoreCase("INT")
									|| ColType.equalsIgnoreCase("TIMESTAMP")) {
								temptableData = dataInColumn[columnPos1];
								if (temptableData.trim().equals("")) {
									temptableData = "NULL";
								}
								if (ColType.equalsIgnoreCase("TIMESTAMP")
										&& !temptableData
												.equalsIgnoreCase("NULL")) {
									// Timestamp Handle
									String data = dataInColumn[columnPos1]
											.trim();

									temptableData = "TO_DATE('" + data
											+ "','YYYY-MM-DD')";
									if (data.length() > 10) {
										temptableData = "TO_TIMESTAMP('"
												+ new java.sql.Timestamp(sdf
														.parse(data).getTime())
												+ "','YYYY-MM-DD HH24:MI:SS.ff'"
												+ ")";
									}

									// csvRow.append(temptableData);
									// Timestamp Handle
								}
								//csvRow.append(temptableData + ",");
								csvRow.append(temptableData);
							} else if (ColType.equalsIgnoreCase("CHAR")) {
								temptableData = "'F'";
								if (dataInColumn[columnPos1].trim()
										.equalsIgnoreCase("true")) {
									temptableData = "'T'";
								}
								csvRow.append(temptableData);
							} else {
								temptableData = dataInColumn[columnPos1];
								temptableData = temptableData.replaceAll("'",
										"''");
								csvRow.append("'" + temptableData + "'");
							}
						}
					}
				} catch (Exception ex) {
					System.out.println(headerColumn[columnPos1]);
					System.out.println(ex.getMessage());
				}

			}

		}
		return csvRecordSet;

	}

	public boolean extractData(String action) {
		Date date = new Date();
try
{
		boolean status = false;
		logger.log(logger.DEBUG, "Before getting Object for connectinfo: "
				+ System.currentTimeMillis());
		logger.log(logger.DEBUG, "Before getting Object for BulkJobProcessor: "
				+ System.currentTimeMillis());
logger.log(logger.DEBUG, "After getting Object for BulkJobProcessor:connection:"+connection+"logger:"+logger);
		BulkJobProcessor bulkjobprocessor = new BulkJobProcessor(connection,
				logger);
		logger.log(logger.DEBUG, "After getting Object for BulkJobProcessor: "
				+ System.currentTimeMillis());
		logger.log("SOQLBulkQuery: " + SOQLBulkQuery);
		logger.log("mode: " + mode);
		logger.log(logger.DEBUG,
				"Before Calling doBulkQuery methiod of BulkJobProcessor: "
						+ System.currentTimeMillis());
		if(action.equalsIgnoreCase("query") || action.equalsIgnoreCase("queryupdated"))
		status = bulkjobprocessor.doBulkQuery(objectName,mode, SOQLBulkQuery,
				csvFilePath,getCharacterSet()); // to get data from SF and load into CSV file
		else
			throw new RuntimeException("Bulk Mode only support action : Query and QueryUpdated");
		logger.log(logger.DEBUG,
				"After Calling doBulkQuery methiod of BulkJobProcessor: "
						+ System.currentTimeMillis());
		return status;
}
catch (Exception e)
{
	e.printStackTrace();
	exceptionlogger.logAndThrowError(e);
}

	}

	public boolean loadDatatoStaging() {
		boolean loadStatus = false;
		try {
			System.out.println("OracleQueryHeader:: Before Calling Read CSV"
					+ OracleQueryHeader);
			ArrayList Query4Oracle = csvtooracle.readCSVData(OracleQueryHeader,
					csvFilePath,characterSet);
			try {
				loadStatus = csvtooracle.insertDataToOracle(orcConnection,
						Query4Oracle);
			} catch (SQLException e) {
				logger.log("SOQLBulkQuery: " + e.getMessage());
				e.printStackTrace();
				exceptionlogger.logAndThrowError(e);
				
			}
		} catch (IOException e) {
			logger.log("SOQLBulkQuery: " + e.getMessage());
			e.printStackTrace();
			exceptionlogger.logAndThrowError(e);
		}
		catch (Exception ex)
		{
			exceptionlogger.logAndThrowError(ex);
		}
		return loadStatus;
	}

}// End of OdiSfdcRef class

//Start of BulkConnectionInfo.java
//This class is used to get BulkConnection Object.

import java.io.FileNotFoundException;

import com.sforce.async.AsyncApiException;
//import com.sforce.async.BulkConnection;
import com.sforce.soap.partner.bcone.PartnerConnection;
import com.sforce.ws.ConnectionException;
import com.sforce.ws.ConnectorConfig;

public class BulkConnectionInfo {

    OdiSfdcLogger logger;
	public BulkConnectionInfo(OdiSfdcLogger logger)
	{
		this.logger = logger;
	} 
	 static com.sforce.soap.partner.bcone.PartnerConnection parterConnection;
	    //com.sforce.soap.metadata.MetadataConnection metadataConnection;
	 com.sforce.ws.ConnectorConfig partnerConfig;
	/**
	 * Logging in to Salesforce and set session Id
	 * @throws ConnectionException 
	 */
	public SFBulkConnection login(String userName, String pwd, String authEndPoint, String sfTraceLogFileName, String isTraceLog) throws ConnectionException {
		//@SuppressWarnings("unused")
		SFBulkConnection connection = null;
			partnerConfig = createConnectionConfig(authEndPoint, userName, pwd);
			parterConnection = com.sforce.soap.partner.bcone.Connector.newConnection(partnerConfig);
			
			ConnectorConfig config = new ConnectorConfig();
			config.setSessionId(partnerConfig.getSessionId());
			// The endpoint for the Bulk API service is the same as for the normal
			// SOAP uri until the /Soap/ part. From here it's '/async/versionNumber'
			String soapEndpoint = partnerConfig.getServiceEndpoint();
			logger.log(logger.DEBUG,"soapEndpoint"+soapEndpoint+"\n"+partnerConfig.getAuthEndpoint());
			String apiVersion = "26.0";
			String restEndpoint = soapEndpoint.substring(0, soapEndpoint.indexOf("Soap/"))
					+ "async/" + apiVersion;
			logger.log(logger.DEBUG,"restEndpoint"+restEndpoint);
			config.setRestEndpoint(restEndpoint);
			// This should only be false when doing debugging.
			config.setCompression(true);
			// Set this to true to see HTTP requests and responses on stdout
			config.setTraceMessage(false);
			
			try {
				connection = new SFBulkConnection(config);
			//	return connection;
				
			} catch (AsyncApiException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			// save the partner's session id into the metadata configuration then connect
		//	metadataConfig.setSessionId(parterConnection.getSessionHeader().getSessionId());
			//metadataConnection = com.sforce.soap.metadata.Connector.newConnection(metadataConfig);
			return connection;
	}//end of login() method
	
	/**
	 * Create connection configuration
	 * @param endPoint
	 * @param userName
	 * @param password
	 * @return
	 * @throws ConnectionException
	 */
	private com.sforce.ws.ConnectorConfig createConnectionConfig(String endPoint, String userName, 
			String password) throws com.sforce.ws.ConnectionException {

		com.sforce.ws.ConnectorConfig connectionConfig = new com.sforce.ws.ConnectorConfig();
		if ((endPoint != null) && (userName != null) && (password != null)) {
		  logger.log(logger.DEBUG,"userName :>>"+userName + "password"+password+"endPoint"+endPoint);
			connectionConfig.setServiceEndpoint(endPoint);
		    connectionConfig.setAuthEndpoint(endPoint);
		    connectionConfig.setUsername(userName);
		    connectionConfig.setPassword(password);
		    return connectionConfig;
		}else
			throw new RuntimeException("Either endpoint or user name or password is empty!");
	}//end of createConnectionConfig() method

}

//End of BulkConnectionInfo.java

//Start of BulkJobProcessor.java
//This class fetches data from Salesforce.com and writes it back to Oracle.

import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;
import com.sforce.async.AsyncApiException;
import com.sforce.async.BatchInfo;
import com.sforce.async.BatchStateEnum;
//import com.sforce.async.BulkConnection;
import com.sforce.async.ConcurrencyMode;
import com.sforce.async.ContentType;
import com.sforce.async.JobInfo;
import com.sforce.async.OperationEnum;
import com.sforce.async.QueryResultList;

public class BulkJobProcessor {
	private SFBulkConnection bulkConnection;
	private OdiSfdcLogger logger;
	File file;
	OutputStream out;
	public BulkJobProcessor(SFBulkConnection bulkConnection, OdiSfdcLogger logger) {
		this.bulkConnection = bulkConnection;
		this.logger = logger;
	}
	public boolean doBulkQuery(String ObjectName,com.sforce.async.ConcurrencyMode mode, String soqlBulkQuery,String fileName, String characterSet) throws IOException, RuntimeException {
	logger.log(logger.DEBUG,"soqlBulkQuery: "+soqlBulkQuery);
	logger.log(logger.DEBUG,"Inside duBulkQuery: mode: "+mode);
		boolean status = false;
		if ( bulkConnection == null)
			return false;
		try {
			JobInfo job = new JobInfo();
			job.setObject(ObjectName);
			job.setOperation(OperationEnum.query);
//			com.sforce.async.ConcurrencyMode mode = com.sforce.async.ConcurrencyMode.Parallel;
//			job.setConcurrencyMode(ConcurrencyMode.Parallel);
			job.setConcurrencyMode(mode);
			job.setContentType(ContentType.CSV);
			job = bulkConnection.createJob(job);
			logger.log(logger.DEBUG,"job: "+job);
			if(job.getId() != null)
			job = bulkConnection.getJobStatus(job.getId());
		//	String query = "SELECT Name, Id, AccountNumber FROM Account";
			long start = System.currentTimeMillis();
			BatchInfo batchInfo = null;
			ByteArrayInputStream bout = new ByteArrayInputStream(soqlBulkQuery.getBytes(characterSet));
			batchInfo = bulkConnection.createBatchFromStream(job, bout);
			String[] queryResults = null;
			file = new File(fileName);
			logger.log(logger.DEBUG,"file: "+file+" fileName: "+fileName);
			out = new FileOutputStream(file);
			for(int i=0; i<10000; i++) {
				batchInfo = bulkConnection.getBatchInfo(job.getId(), batchInfo.getId());
				if (batchInfo.getState() == BatchStateEnum.Completed) {
					QueryResultList list = bulkConnection.getQueryResultList(job.getId(), batchInfo.getId());
					logger.log(logger.DEBUG,"list::\n"+list);
					queryResults = list.getResult();
					logger.log(logger.DEBUG,"-------------- Completed ----------" + batchInfo+" No of queryResults: "+queryResults.length);
					break;
				} else if (batchInfo.getState() == BatchStateEnum.Failed) {
					logger.log(logger.DEBUG,"-------------- failed ----------" + batchInfo);
					break;
				} else {
					logger.log(logger.DEBUG,"-------------- waiting ----------" + batchInfo);
					Thread.sleep(i==0 ? 30 * 1000 : 30 * 1000); //30 sec
				}
				
			}
			logger.log(logger.DEBUG,"queryResults"+queryResults.length+"::::\n"+queryResults[0]);
			if (queryResults != null) {
				
				for (String resultId : queryResults) {
					InputStream inputStream = bulkConnection.getQueryResultStream(job.getId(), batchInfo.getId(), resultId);
					try{
					writeToCSVFile(inputStream,fileName);
					}
					catch (Exception e)
					{
						logger.log(logger.DEBUG,"Error in Writting file" + e.getMessage());
						throw new RuntimeException(e.getMessage());
					}
					logger.log(logger.DEBUG,"resultId"+resultId);
					logger.log(logger.DEBUG,"queryresultstream"+bulkConnection.getQueryResultStream(job.getId(), batchInfo.getId(), resultId));
					logger.log(logger.DEBUG,"File Written Succesfully");
					status = true;
				}
			}
		} catch (AsyncApiException aae) {
			aae.printStackTrace();
			throw new RuntimeException(aae.getMessage());
		} catch (InterruptedException ie) {
			ie.printStackTrace();
			throw new RuntimeException(ie.getMessage());
		}
		finally
		{
			out.close();
		}
		return status;
	}
	private void writeToCSVFile(InputStream inputStream,String filePath) {
		try {
			int read = 0;
			byte[] bytes = new byte[1024];
		 
			while ((read = inputStream.read(bytes)) != -1) {
				out.write(bytes, 0, read);
			//	out.write(10);
			}
			inputStream.close();
			out.flush(); 
			logger.log(logger.DEBUG,"New file created!");
		    } catch (IOException e) {
			logger.log(logger.DEBUG,"ErrorMsg in wrtting csv file"+e.getMessage());
			throw new RuntimeException("ErrorMsg in wrtting csv file"+e.getMessage());
		    }
		  }
	
	public String ConvertInputStreamToString(InputStream is) throws IOException {
		  //  InputStream is = new FileInputStream("C:/file.txt");
		    StringBuffer buffer = new StringBuffer();
		    byte[] b = new byte[4096];
		    for (int n; (n = is.read(b)) != -1;) {
		      buffer.append(new String(b, 0, n));
		    }
		    String str = buffer.toString();
		    System.out.println(str);
			return str;
		}
}

//End of BulkJobProcessor.java


// Start of OdiCSVReader.Java
//This class is responsible for Reading data from a CSV file and store it as inputstream
import java.io.*;
import java.util.ArrayList;
import java.util.List;

public class OdiCSVReader
{

    private BufferedReader br;
    private boolean hasNext;
    private char separator;
    private char quotechar;
    private int skipLines;
    private boolean linesSkiped;
    public static final char DEFAULT_SEPARATOR = (char)44;
    public static final char DEFAULT_QUOTE_CHARACTER = (char)34;
    public static final int DEFAULT_SKIP_LINES = (char)0;
	
	private FileInputStream inputStream;
    private InputStreamReader streamReader;

	public OdiCSVReader(String csvFilePath, String characterSet){
        try {
            hasNext = true;
            inputStream = new FileInputStream(csvFilePath);
        streamReader = new InputStreamReader(inputStream, characterSet);
        br = new BufferedReader(streamReader);
            separator = ',';
            quotechar = '"';
            skipLines = 0;
        } catch (Exception ex) {
        }
    }
	
    public OdiCSVReader(Reader reader)
    {
        this(reader, ',');
    }

    public OdiCSVReader(Reader reader, char c)
    {
        this(reader, c, '"');
    }

    public OdiCSVReader(Reader reader, char c, char c1)
    {
        this(reader, c, c1, 0);
    }

    public OdiCSVReader(Reader reader, char c, char c1, int i)
    {
        hasNext = true;
        br = new BufferedReader(reader);
        separator = c;
        quotechar = c1;
        skipLines = i;
    }

    public List readAll()
        throws IOException
    {
        ArrayList arraylist = new ArrayList();
        do
        {
            if(!hasNext)
            {
                break;
            }
            String[] as = readNext();
            if(as != null)
            {
                arraylist.add(as);
            }
        } while(true);
        return arraylist;
    }

    public String[] readNext()
        throws IOException
    {
        String s = getNextLine();
        return hasNext ? parseLine(s) : null;
    }

    private String getNextLine()
        throws IOException
    {
        if(!linesSkiped)
        {
            for(int i = 0; i < skipLines; i++)
            {
                br.readLine();
            }

            linesSkiped = true;
        }
        String s = br.readLine();
        if(s == null)
        {
            hasNext = false;
        }
        return hasNext ? s : null;
    }

    private String[] parseLine(String s)
        throws IOException
    {
        if(s == null)
        {
            return null;
        }
        ArrayList arraylist = new ArrayList();
        StringBuffer stringbuffer = new StringBuffer();
        boolean flag = false;
        do
        {
            if(flag)
            {
                stringbuffer.append("\n");
                s = getNextLine();
                if(s == null)
                {
                    break;
                }
            }
            for(int i = 0; i < s.length(); i++)
            {
                char c = s.charAt(i);
                if(c == quotechar)
                {
                    if(flag && s.length() > i + 1 && s.charAt(i + 1) == quotechar)
                    {
                        stringbuffer.append(s.charAt(i + 1));
                        i++;
                        continue;
                    }
                    flag = !flag;
                    if(i > 2 && s.charAt(i - 1) != separator && s.length() > i + 1 && s.charAt(i + 1) != separator)
                    {
                        stringbuffer.append(c);
                    }
                    continue;
                }
                if(c == separator && !flag)
                {
                    arraylist.add(stringbuffer.toString());
                    stringbuffer = new StringBuffer();
                } else
                {
                    stringbuffer.append(c);
                }
            }

        } while(flag);
        arraylist.add(stringbuffer.toString());
        return (String[])(String[])arraylist.toArray(new String[0]);
    }

    public void close()
        throws IOException
    {
        br.close();
        streamReader.close();
        inputStream.close();
    }
}


// End of OdiCSVReader.Java

//Start of CSVtoOracle.java
//This class is responsible for Getting CSV File data to Oracle Database

import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.io.FileOutputStream;
import java.sql.Timestamp;
import java.util.Date;
import java.util.Properties;

public class CSVtoOracle {
	static OdiSfdcLogger logger;
	static OdiSfdcRef sfdcRef;
	private String header;
	Connection OrcConnection;
	private String fetchBatchSize = "10000";
	private String uploadFromBatchNumber = "1";
	private String targetTableName = "";
	private String stagingSchemaName = "";
	
	
	/**
	 * @param targetTableName the targetTableName to set
	 */
	public void setTargetTableName(String targetTableName) {
		logger.log(logger.DEBUG, "targetTableName :"+targetTableName);
		this.targetTableName = targetTableName;
	}

	/**
	 * @param uploadFromBatch the uploadFromBatch to set
	 */
	public void setUploadFromBatch(String uploadFromBatchNumber) {
		this.uploadFromBatchNumber = uploadFromBatchNumber;
	}
	
	/**
	* Get the target staging schema Name
	*/
	public String getStagingSchemaName() {
        return stagingSchemaName;
    }
	
	/**
	* Set the target staging schema Name
	*/
    public void setStagingSchemaName(String stagingSchemaName) {
        this.stagingSchemaName = stagingSchemaName;
    }

	/**
	 * @param loadBatchSize the loadBatchSize to set
	 */
	public void setLoadBatchSize(String fetchBatchSize) {
		
		
		this.fetchBatchSize = fetchBatchSize;
	}

	public CSVtoOracle(OdiSfdcLogger logger)
	{
		this.logger = logger;
	}
	
	public ArrayList readCSVData(String header,String fileName,String characterSet) throws IOException {
		this.header = header;
		sfdcRef = new OdiSfdcRef(logger);
	//	logger.log(logger.DEBUG,"\n**** readAllExample ****");
		String[] row = null;
	//	String csvFilename = "c:\\temp\\testfile001.csv";
	    String csvFilename = fileName;
		StringBuffer sf = new StringBuffer();
		//OdiCSVReader csvReader = new OdiCSVReader(new FileReader(csvFilename));
		OdiCSVReader csvReader = new OdiCSVReader(csvFilename,characterSet);
		List content = csvReader.readAll();
		System.out.println("List content : "+ content);
		sfdcRef.setQuery(content);
		csvReader.close();
		logger.log(logger.DEBUG,"QueryFinal"+sfdcRef.getQuery());
		ArrayList Query4Oracle = generateQuery(sfdcRef.getQuery(), header);
		return Query4Oracle;

	}
	
	public ArrayList generateQuery(ArrayList QueryContent, String header)
	{
		ArrayList OracleQuery = new ArrayList();
		logger.log(logger.DEBUG, "targetTableName Inside generate Query:"+targetTableName);
		for(int i=1;i<QueryContent.size();i++)
		{
			QueryContent.set(0, header);
			String x = "Insert into " + stagingSchemaName + "." + SFSOAPConstants.DOUBLE_QUOTE+targetTableName+SFSOAPConstants.DOUBLE_QUOTE+"("+QueryContent.get(0)+") values ("+QueryContent.get(i)+")";
			logger.log(logger.DEBUG,"Query"+x);
			OracleQuery.add(x);
		}
		return OracleQuery;
		
	}
	
	public boolean insertDataToOracle(Connection conn,ArrayList OracleQuery) throws SQLException, IOException
	{
		boolean loadStatus = false;
		this.OrcConnection = conn;
		int loadBatchSize = Integer.parseInt(fetchBatchSize);
		int uploadFromBatch = Integer.parseInt(uploadFromBatchNumber);
		try {
			/*Class.forName(jdbcDriver);
			   conn = DriverManager.getConnection(jdbcUrl,orclUser,orclPwd);*/
			   //   Class.forName("com.microsoft.jdbc.sqlserver.SQLServerDriver");
			      logger.log(logger.DEBUG,"jdbc driver succesfully loaded");
			      logger.log(logger.DEBUG,"Succesfully got connection");
			  //    con = java.sql.DriverManager.getConnection(getConnectionUrl(),userName,password);
			      Statement statement = OrcConnection.createStatement();
			      
			      // sample test program for sending query into batches
				  if(loadBatchSize > OracleQuery.size())
					  loadBatchSize = OracleQuery.size();
			      int start = (loadBatchSize * (uploadFromBatch-1));
			      int end = ((loadBatchSize * (uploadFromBatch-1))+ loadBatchSize);
			      System.out.println("start"+start+"end"+end+"loadBatchSize"+loadBatchSize);
			      while(start < OracleQuery.size())
			      {
			       for( int i = start; i< end; i++)
			       {
			    	   logger.log(logger.DEBUG,"OracleQuery.get(i)"+OracleQuery.get(i));
				    	 statement.addBatch((String) OracleQuery.get(i));  
			       }
				   
			    	   try{
			    	   int[] results = statement.executeBatch();
			    	   OrcConnection.commit();
			    	   loadStatus = true;
			    	   logger.log(logger.DEBUG,"Batch Loaded Succesfully"+"Batch Number"+ (start/loadBatchSize+1));
			    	   logger.log(logger.DEBUG,"Number of Rows Inserted Succesfully"+ results.length);
				       new ODISFPropertyDataCreater(logger).updatePropetiesFile();
					   System.out.println(new ODISFPropertyDataCreater(logger).getLastUploadedDate());
				       start = start+loadBatchSize;
				       if(end+loadBatchSize > OracleQuery.size())
				    	   end = OracleQuery.size();
				       else
				       end = end+loadBatchSize;
			           }
			           catch (Exception e)
			           {
			        	   logger.log(logger.DEBUG,"Error encountered in executing batch"+e.getMessage());
						   throw new RuntimeException(e);
			           }
			       
			      }
			      // end of test program
			      
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
		 return loadStatus; 
	}
	
	/*private void updatePropetiesFile() {
		Properties prop = new Properties();
 	Date date= new Date();
//	 String propertiesFilePath = "C:\\TEMP\\Config.properties";
	 System.out.println(new Timestamp(date.getTime()));
	 String timeStamp = new Timestamp(date.getTime()).toString();
	 System.out.println("timeStamp"+timeStamp);
 	try {
 		//set the properties value
 		prop.setProperty("LAST_MODIFIED_DATE", timeStamp);
 		//save properties to folder
 		FileOutputStream fOutputStream = new FileOutputStream(propertiesFilePath);
	    		prop.store(fOutputStream, null);

 	} catch (IOException ex) {
 		ex.printStackTrace();
     }
		
	}*/
}
//End of CSVtoOracle.java

/*SOAP API*/

//start of SFSOAPConstants class
public class SFSOAPConstants {
    /**
     * NewLine char "\n" i.e. (char)10 gets changed to (char)92 and (char)110 i.e. character 'n'
     * by the Java bean shell Put an extra "\" to escape "\"
     */
    static final String bsNewLine = "" + (char) 92 + (char) 92 + (char) 110;// \\n
    /**
     * Note: only "\n" i.e. (char)10 doesn't work. To over sure put '\r' i.e. (char)13
     */
    static final String jvNewLine = "" + (char) 13 + (char) 10;// \r\n
    
    
    //ASCII Codes
    static final String DOUBLE_QUOTE = "" + (char) 34; // "
    static final String START_BRACKET = "" + (char) 92 + (char) 40; //left bracket \(
    static final String END_BRACKET = "" + (char) 92 + (char) 41; // right bracket \)
    static final String START_3RD_BRACKET = "" + (char) 92 + (char) 91; //left bracket \[
    static final String END_3RD_BRACKET = "" + (char) 92 + (char) 93; // right bracket \]
    static final String BACKSLASH = "" + (char) 92; // right bracket \
    static final String NEWLINE = "" + (char) 10; // right bracket \
    static final String DOT = BACKSLASH + (char) 46; // .
    static final String TILD = "" + (char) 126; // ~
    static final String BLANKSPACE = "" + (char) 32; // <space>
    static final String PLUSSIGN = "" + (char) 43; // +
    static final String COMMMA = "" + (char) 44; // ,
    static final String MODULESIGN = "" + (char) 37; // %
    static final String SINGLE_QUOTE = "" + (char) 39; // '
    static final String DOUBLE_SINGLE_QUOTE = "" + (char) 39+""+(char)39; // '
    static final String BOUNDARY = "" + (char) 92+(char)98; // \\b 
    
    
     //common statement for the insert statement
    static final String INSERT_QUERY = " INSERT INTO " + DOUBLE_QUOTE + MODULESIGN+"s" + DOUBLE_QUOTE + "("+MODULESIGN+"s) values("+MODULESIGN+"s)";//INSERT INTO %s (%s) values(%s)
    //Used to remove the column patterns  
    static final String COLUMN_NAME_PATTERN = "" + (char) 67 + (char) 40 + (char) 92 + (char) 100 + (char) 43 + (char) 41 + (char) 95;//C(\\d+)_
//     static final String COLUMN_DATATYPE_PATTERN = ""+ (char) 40+ (char) 92+ (char) 100+ (char) 43+ (char) 41;// (\\d)
     static final String COLUMN_DATATYPE_PATTERN = "(\\d+)";     
	 public static String DATA_WRAPPING_CHARACTER = "" + (char) 94;
	 public static String SFDC_NEW_LINE = "" + (char) 60 + "br" + (char) 62;//= <br>;
}//End of SFSOAPConstants class

//Start of SFPartnerConnection class
import com.sforce.soap.partner.bcone.PartnerConnection;
import com.sforce.ws.ConnectionException;
import com.sforce.ws.ConnectorConfig;
import java.util.Calendar;

/**
 *
 * @author Anup.Singh
 */
public class SFPartnerConnection extends PartnerConnection {

    OdiResourceConnectionManager manager;

    public SFPartnerConnection(ConnectorConfig config, OdiResourceConnectionManager manager) throws ConnectionException {
        super(config);
        this.manager = manager;
    }

    public com.sforce.soap.partner.bcone.QueryResult query(java.lang.String queryString) throws com.sforce.ws.ConnectionException {
        manager.checkSFLoginRequired();
        return super.query(queryString);
    }

    public com.sforce.soap.partner.bcone.QueryResult queryMore(java.lang.String queryLocator) throws com.sforce.ws.ConnectionException {
        manager.checkSFLoginRequired();
        return super.queryMore(queryLocator);
    }

    public com.sforce.soap.partner.bcone.QueryResult queryAll(java.lang.String queryLocator) throws com.sforce.ws.ConnectionException {
        manager.checkSFLoginRequired();
        return super.queryAll(queryLocator);
    }

    public com.sforce.soap.partner.bcone.GetUpdatedResult getUpdated(java.lang.String queryString, Calendar c1, Calendar c2) throws com.sforce.ws.ConnectionException {
        manager.checkSFLoginRequired();
        return super.getUpdated(queryString, c1, c2);
    }

    public com.sforce.soap.partner.bcone.GetDeletedResult getDeleted(java.lang.String queryString, Calendar c1, Calendar c2) throws com.sforce.ws.ConnectionException {
        manager.checkSFLoginRequired();
        return super.getDeleted(queryString, c1, c2);
    }
}
//End of SFPartnerConnection class

//Start of SFBulkConnection class
import com.sforce.async.AsyncApiException;
import com.sforce.async.BulkConnection;
import com.sforce.async.JobInfo;
import com.sforce.ws.ConnectorConfig;

/**
 *
 * @author Anup.Singh
 */
public class SFBulkConnection extends BulkConnection {

    OdiResourceConnectionManager manager;

    public SFBulkConnection(ConnectorConfig config, OdiResourceConnectionManager manager) throws AsyncApiException {
        super(config);
        this.manager = manager;
    }

    public JobInfo createJob(String object, String operation) throws AsyncApiException {
        manager.checkSFLoginRequired();
        return super.createJob(object, operation);
    }
}
//End of SFBulkConnection class
//Start of ExceptionLogger class
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

/**
 *
 * @author Anup.Singh
 */
public class ExceptionLogger {

    private StringBuffer exceptionBuffer = new StringBuffer();
    private OdiSfdcLogger logger;
    private String errorCode;
    private String errorMessage;

    public ExceptionLogger(OdiSfdcLogger logger) {
        this.logger = logger;
    }

    public void logAndThrowError(Exception exception) {
        if (exception instanceof NullPointerException) {
            errorCode = "Null Pointer Exception";
            errorMessage = "Field Value is NUll";
            throwErrorMessages();
            return;
        }
        Class exClass = exception.getClass();
		//this.logger.log(OdiSfdcLogger.ERROR, "Exception Class Package : " + exception.getClass().getPackage().getName());
        //this.logger.log(OdiSfdcLogger.ERROR, "Exception Class Name : " + exception.getClass().getName());
        while (true) {
            if (exception.getClass().getPackage().getName().equalsIgnoreCase("bsh")) {
                this.logger.log(OdiSfdcLogger.FINEST, "Inside the bsh condition ");
                exception = exception.getTarget();
                this.logger.log(OdiSfdcLogger.FINEST, exception.toString());
                exClass = exception.getClass();
                this.logger.log(OdiSfdcLogger.FINEST, exClass.getName());
            } else {
                break;
            }
        }  
        Method meth = fetchDesiredMethod(exClass, "getExceptionCode");
        if (meth == null) {
            meth = fetchDesiredMethod(exClass, "getCause");
        }
        try {
            errorCode = String.valueOf(meth.invoke(exception, null));
            if(errorCode.equalsIgnoreCase("null")){
                errorCode = exception.getClass().getSimpleName();
            }
        } catch (IllegalAccessException iae) {
        } catch (IllegalArgumentException iae) {
        } catch (InvocationTargetException ite) {
        } catch (NullPointerException npe) {
        }
        meth = fetchDesiredMethod(exClass, "getExceptionMessage");
        if (meth == null) {
            meth = fetchDesiredMethod(exClass, "getMessage");
        }
        try {
            errorMessage = String.valueOf(meth.invoke(exception, null));
        } catch (IllegalAccessException iae) {
        } catch (IllegalArgumentException iae) {
        } catch (InvocationTargetException ite) {
        } catch (NullPointerException npe) {
        }
        if (errorCode == null || errorCode.equalsIgnoreCase("")) {
            errorCode = "UnexpectedErrorFault";
        }
        if (errorMessage == null || errorMessage.equalsIgnoreCase("")) {
            errorMessage = "Unexpected Error Occured";
        }
        throwErrorMessages();
    }

    private Method fetchDesiredMethod(Class c, String reqMeth) {
        Method mth = null;
        try {
            if (c != null) {
                mth = c.getDeclaredMethod(reqMeth, null);
            }
        } catch (NoSuchMethodException ne) {
//            System.out.println(ne.getMessage());
        }
        if (mth == null) {
            if (c != null) {
                mth = fetchDesiredMethod(c.getSuperclass(), reqMeth);
            }
        }
        return mth;
    }

    private void throwErrorMessages() {
        exceptionBuffer.delete(0, exceptionBuffer.length());
        exceptionBuffer.append("Exception Code : " + errorCode);
        this.logger.log(OdiSfdcLogger.ERROR, "Exception Code : " + errorCode);
        exceptionBuffer.append(SFSOAPConstants.NEWLINE + "Exception Cause : " + errorMessage);
        this.logger.log(OdiSfdcLogger.ERROR, "Exception Cause : " + errorMessage);
        throw new RuntimeException(exceptionBuffer.toString());
    }
}
//End of ExceptionLogger class

// Start of OdiSfSOAPConnectionManager class
import com.sforce.async.AsyncApiException;
//import com.sforce.async.BulkConnection;
import com.sforce.soap.partner.bcone.AllOrNoneHeader_element;
import com.sforce.soap.partner.bcone.AllowFieldTruncationHeader_element;
import com.sforce.soap.partner.bcone.AssignmentRuleHeader_element;
import com.sforce.ws.ConnectionException;
import java.io.FileNotFoundException;

/**
 *
 * @author Anup.Singh
 */
 public class OdiSfSOAPConnectionManager {

    private SFPartnerConnection parterConnection;
    private com.sforce.ws.ConnectorConfig connectorConfig;
    private OdiSfdcLogger logger;
    private SFBulkConnection bulkConnection;
    private OdiResourceConnectionManager manager;
    private ConnectorConfig bulkConfig;

    public SFBulkConnection getBulkConnection() {
        return bulkConnection;
    }

    public SFPartnerConnection getParterConnection() {
        return parterConnection;
    }

    public OdiSfSOAPConnectionManager(OdiSfdcLogger logger, OdiResourceConnectionManager manager) {
        this.logger = logger;
        this.manager = manager;
    }

    /**
     * Logging in to Salesforce and set session Id
     * @param userName
     * @param pwd
     * @param authEndPoint
     * @param sfTraceLogFileName
     * @param isTraceLog 
     */
    public void login(String userName, String pwd, String authEndPoint, String apiVersion, String sfTraceLogFileName, boolean isTraceLog, boolean compression, String connectionTimeout, String maxResponseSize, String maxRequestSize, String readTimeout, boolean allOrNoneHeader, boolean allowFieldTruncation, String assignmentRuleHeader, int type, boolean isReCheck) throws ConnectionException, AsyncApiException, FileNotFoundException {
//        logger.log(OdiSfdcLogger.FINEST, "+++++++++OdiSfdcSOAPConnectionManager.login()++++++++++++");

        int _connectionTimeout = 0, _maxResponseSize = 0, _maxRequestSize = 0, _readTimeout = 0;
        if (!connectionTimeout.trim().isEmpty()) {
            try {
                _connectionTimeout = Integer.parseInt(connectionTimeout);
            } catch (NumberFormatException e) {
                _connectionTimeout = 0;
            }
        }
        if (!maxResponseSize.trim().isEmpty()) {
            try {
                _maxResponseSize = Integer.parseInt(maxResponseSize);
            } catch (NumberFormatException e) {
                _maxResponseSize = 0;
            }
        }
        if (!maxRequestSize.trim().isEmpty()) {
            try {
                _maxRequestSize = Integer.parseInt(maxRequestSize);
            } catch (NumberFormatException e) {
                _maxRequestSize = 0;
            }
        }
        if (!readTimeout.trim().isEmpty()) {
            try {
                _readTimeout = Integer.parseInt(readTimeout);
            } catch (NumberFormatException e) {
                _readTimeout = 0;
            }
        }
        connectorConfig = createConnectionConfig(authEndPoint, userName, pwd, isTraceLog, compression, sfTraceLogFileName, _connectionTimeout, _maxResponseSize, _maxRequestSize, _readTimeout);
        parterConnection = new SFPartnerConnection(connectorConfig, manager);

        switch (type) {
            case 2: {
                // The endpoint for the Bulk API service is the same as for the normal
                // SOAP uri until the /Soap/ part. From here it's '/async/versionNumber'
                bulkConfig = new ConnectorConfig();
                String soapEndpoint = connectorConfig.getServiceEndpoint();
                // Set this to true to see HTTP requests and responses on stdout
                bulkConfig.setTraceMessage(connectorConfig.isTraceMessage());
                // This should only be false when doing debugging.
                bulkConfig.setCompression(connectorConfig.isCompression());
//                String restEndpoint = soapEndpoint.replaceAll(SFSOAPConstants.BOUNDARY + "Soap" + SFSOAPConstants.BOUNDARY, "async");
                String restEndpoint = soapEndpoint.substring(0, soapEndpoint.indexOf("Soap/")) + "async/" + apiVersion+"/";
				bulkConfig.setRestEndpoint(restEndpoint);
                bulkConfig.setSessionId(connectorConfig.getSessionId());
                bulkConnection = new SFBulkConnection(bulkConfig, manager);
            }
            ;
            break;
        }
        if (allOrNoneHeader) {
            AllOrNoneHeader_element allowOrNoneHeader_element = new AllOrNoneHeader_element();
            allowOrNoneHeader_element.setAllOrNone(allowFieldTruncation);
            parterConnection.__setAllOrNoneHeader(allowOrNoneHeader_element);
        }
        if (allowFieldTruncation) {
            AllowFieldTruncationHeader_element fieldTruncationHeader_element = new AllowFieldTruncationHeader_element();
            fieldTruncationHeader_element.setAllowFieldTruncation(allowFieldTruncation);
            parterConnection.__setAllowFieldTruncationHeader(fieldTruncationHeader_element);
        }
        if (!(null == assignmentRuleHeader || assignmentRuleHeader.trim().equals(""))) {
            AssignmentRuleHeader_element assignmentRuleHeader_element = new AssignmentRuleHeader_element();
            assignmentRuleHeader_element.setAssignmentRuleId(assignmentRuleHeader);
            parterConnection.__setAssignmentRuleHeader(assignmentRuleHeader_element);
        }

        if (!isReCheck) {
//            // save the partner's session id into the metadata configuration then connect
//            metadataConfig.setSessionId(parterConnection.getSessionHeader().getSessionId());
//            //metadataConnection = com.sforce.soap.metadata.Connector.newConnection(metadataConfig);
            logger.log(OdiSfdcLogger.FINEST, "Logging in to salsesforce.com ......");
            logger.log(OdiSfdcLogger.FINEST, "Connection to Salesforce.com succesfully created...");
            logger.log(OdiSfdcLogger.FINEST, "Getting Connection Details");
            logger.log(OdiSfdcLogger.FINEST, "Session Id: " + connectorConfig.getSessionId());
            logger.log(OdiSfdcLogger.FINEST, "User Id: " + parterConnection.getUserInfo().getUserId());
            logger.log(OdiSfdcLogger.FINEST, "User's Full Name: " + parterConnection.getUserInfo().getUserFullName());
            logger.log(OdiSfdcLogger.FINEST, "Auth End Point: " + connectorConfig.getAuthEndpoint());
            logger.log(OdiSfdcLogger.FINEST, "Service End Point: " + connectorConfig.getServiceEndpoint());
            if (type == 2) {
                logger.log(OdiSfdcLogger.FINEST, "Rest End Point: " + bulkConfig.getRestEndpoint());
            }
        }
    }//end of login() method

    /**
     * Create connection configuration
     * @param endPoint
     * @param userName
     * @param password
     * @return
     * @throws ConnectionException
     */
    private com.sforce.ws.ConnectorConfig createConnectionConfig(String endPoint, String userName, String password, boolean traceMessage, boolean compression, String sfTraceLogFileName, int connectionTimeout, int maxResponseSize, int maxRequestSize, int readTimeout) throws com.sforce.ws.ConnectionException, java.io.FileNotFoundException {
        validateAuthenticationParameters(endPoint, userName, password);
        com.sforce.ws.ConnectorConfig connectionConfig = new com.sforce.ws.ConnectorConfig();
        connectionConfig.setServiceEndpoint(endPoint);
        connectionConfig.setAuthEndpoint(endPoint);
        connectionConfig.setUsername(userName);
        connectionConfig.setPassword(password);
        if (connectionTimeout != 0) {
            connectionConfig.setConnectionTimeout(connectionTimeout);
        }
        if (maxRequestSize != 0) {
            connectionConfig.setMaxRequestSize(maxRequestSize);
        }
        if (maxResponseSize != 0) {
            connectionConfig.setMaxResponseSize(maxResponseSize);
        }
        if (readTimeout != 0) {
            connectionConfig.setReadTimeout(readTimeout);
        }
        if (null != sfTraceLogFileName && traceMessage) {
            connectionConfig.setTraceFile(sfTraceLogFileName);
        }

        // Set this to true to see HTTP requests and responses on stdout
        connectionConfig.setTraceMessage(traceMessage);
        // This should only be false when doing debugging.
        connectionConfig.setCompression(compression);

//            connectionConfig.setPrettyPrintXml(true);

        return connectionConfig;
    }//end of createConnectionConfig() method

    public boolean validateAuthenticationParameters(String endPoint, String userName, String password) {
        boolean flag = false;
        logger.log(OdiSfdcLogger.FINEST, "Validating Authentication Parameters ...");
        if (null == userName || userName.trim().isEmpty()) {
            logger.log(OdiSfdcLogger.ERROR, "Salesforce.com Connection User Name is Empty: ");
            throw new RuntimeException("Salesforce.com Connection User Name is Empty: ");
        }
        if (null == password || password.trim().isEmpty()) {
            logger.log(OdiSfdcLogger.ERROR, "Salesforce.com Connection Password is Empty: ");
            throw new RuntimeException("Salesforce.com Connection Password is Empty: ");
        }
        if (null == endPoint || endPoint.trim().isEmpty()) {
            logger.log(OdiSfdcLogger.ERROR, "Salesforce.com Connection Url is Empty: ");
            throw new RuntimeException("Salesforce.com Connection Url is Empty: ");
        }
        flag = true;
        logger.log(OdiSfdcLogger.FINEST, "Authentication Parameters are valid ...");

        return flag;
    }
}
// End of OdiSfSOAPConnectionManager class

//Start of OdiOracleConnectionManager class
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

/**
 *
 * @author Anup.Singh
 */
public class OdiOracleConnectionManager {

    String ora_UserName = null;
    String ora_Password = null;
    String ora_CharacterSet = null;
    String ora_ConnectionURL = null;
    String ora_Driver = "oracle.jdbc.OracleDriver";
    private Connection oraConnection = null;
    private OdiSfdcLogger logger;

    public String getOra_CharacterSet() {
        return ora_CharacterSet;
    }

    public void setOra_CharacterSet(String ora_CharacterSet) {
        this.ora_CharacterSet = ora_CharacterSet;
    }

    public String getOra_ConnectionURL() {
        return ora_ConnectionURL;
    }

    public void setOra_ConnectionURL(String ora_ConnectionURL) {
        this.ora_ConnectionURL = ora_ConnectionURL;
    }

    public String getOra_Driver() {
        return ora_Driver;
    }

    public void setOra_Driver(String ora_Driver) {
        this.ora_Driver = ora_Driver;
    }

    public String getOra_Password() {
        return ora_Password;
    }

    public void setOra_Password(String ora_Password) {
        this.ora_Password = ora_Password;
    }

    public String getOra_UserName() {
        return ora_UserName;
    }

    public void setOra_UserName(String ora_UserName) {
        this.ora_UserName = ora_UserName;
    }

    public OdiOracleConnectionManager(OdiSfdcLogger logger) {
        this.logger = logger;
        logger.log(OdiSfdcLogger.FINEST, "**************Odi Oracle Connection Manager invoked ***************");
    }

    public Connection getConnection() throws ClassNotFoundException, SQLException {
        if (validateAuthenticationParameters()) {
            logger.log(OdiSfdcLogger.FINEST, "Creating Oracle connection ...");
            if (oraConnection == null) {
                Class.forName(ora_Driver);
                oraConnection = DriverManager.getConnection(ora_ConnectionURL, ora_UserName, ora_Password);
                oraConnection.setAutoCommit(false);
//                logger.log(OdiSfdcLogger.FINEST, "+++++++++Oracle client info :" + oraConnection.getClientInfo("user"));
                logger.log(OdiSfdcLogger.FINEST, "Connection to Oracle successfully created ...");
            }
        }
        return oraConnection;
    }

    public boolean validateAuthenticationParameters() {
        boolean flag = false;
        logger.log(OdiSfdcLogger.FINEST, "Validating Oracle Authentication Parameters ...");
        if (null == ora_UserName || ora_UserName.trim().isEmpty()) {
            logger.log(OdiSfdcLogger.ERROR, "Oracle Connection User Name is Empty: ");
            throw new RuntimeException("Oracle Connection User Name is Empty: ");
        }
        if (null == ora_Password || ora_Password.trim().isEmpty()) {
            logger.log(OdiSfdcLogger.ERROR, "Oracle Connection Password is Empty: ");
            throw new RuntimeException("Oracle Connection Password is Empty: ");
        }
        if (null == ora_ConnectionURL || ora_ConnectionURL.trim().isEmpty()) {
            logger.log(OdiSfdcLogger.ERROR, "Oracle Connection Url is Empty: ");
            throw new RuntimeException("Oracle Connection Url is Empty: ");
        }
        flag = true;
        logger.log(OdiSfdcLogger.FINEST, "Authentication Parameters are valid ...");

        return flag;
    }
}
//End of OdiOracleConnectionManager class

//Start of OdiSfSOAPCSVDesigner class
import com.sforce.soap.partner.sobject.bcone.SObject;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedHashMap;

/**
 *
 * @author Anup.Singh
 */
public class OdiSfSOAPCSVDesigner {

    private OdiSfdcLogger logger;
	private File file;
    private Writer writer;
    private OutputStreamWriter outputStream;
    private FileOutputStream fileWriter;
    private String dataContainer = "";
    private ExceptionLogger exLogger;

    public OdiSfSOAPCSVDesigner(OdiSfdcLogger logger) {
        this.logger = logger;
        exLogger = new ExceptionLogger(logger);
    }

    private void prepareFileWriter(String filepath, String characterSet) throws FileNotFoundException, UnsupportedEncodingException {
        logger.log(OdiSfdcLogger.FINEST, "Creating stream to create CSV file ...");
        if (null == writer) {
            if (filepath == null || filepath.length() == 0) {
                throw new FileNotFoundException("File path missing");
            }
            logger.log(OdiSfdcLogger.FINEST, "CSV file path : " + filepath);
            file = new File(filepath);
//                f.deleteOnExit();
//                writer = new FileWriter(filepath);
            fileWriter = new FileOutputStream(file);
            outputStream = new OutputStreamWriter(fileWriter, characterSet);
            writer = new BufferedWriter(outputStream);
        }
        logger.log(OdiSfdcLogger.FINEST, "Stream to create CSV file is successful ...");
    }

    /**
     * writes the sf fetched records into a CSV file
     * @param filepath
     * @param columnHeader
     * @param csvRecordSet
     * @return 
     */
    public void writeCSVFile(ArrayList columnHeader, ArrayList csvRecordSet, LinkedHashMap columnName_Type) throws IOException, ParseException {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
        java.sql.Timestamp sfDateValue = null;
        String parsedColumnName = "";
        logger.log(OdiSfdcLogger.FINEST, "CSV file writing process initiated ...");
        SObject sfRecord = null;
        int columnCount = (columnHeader.size() - 1);

        Iterator it = null;
        int recordSize = (csvRecordSet.size());
        logger.log(OdiSfdcLogger.FINEST, "No. of Records to be written : " + recordSize);
        StringBuilder buffer = new StringBuilder();
        String columnType = "";
        for (int i = 0; i < recordSize; i++) {
            sfRecord = (SObject) csvRecordSet.get(i);
            it = columnName_Type.entrySet().iterator();
            for (int x = 0; x < columnCount; x++) {
                parsedColumnName = columnHeader.get(x).toString().trim();
                parsedColumnName = parsedColumnName.replaceAll(SFSOAPConstants.SINGLE_QUOTE, (SFSOAPConstants.SINGLE_QUOTE + "" + SFSOAPConstants.SINGLE_QUOTE));                
				parsedColumnName = parsedColumnName.trim();
                dataContainer = (sfRecord.getField(parsedColumnName) + "").trim();
				dataContainer = dataContainer.replaceAll(SFSOAPConstants.DOUBLE_QUOTE, (SFSOAPConstants.DOUBLE_QUOTE + "" + SFSOAPConstants.DOUBLE_QUOTE));
				//logger.log(OdiSfdcLogger.FINEST, "Data : " + dataContainer);
                columnType = (((java.util.Map.Entry) it.next()).getValue() + "").trim();
                if (columnType.equalsIgnoreCase("TIMESTAMP")) {
                    if (!(dataContainer == null || dataContainer.equalsIgnoreCase("null"))) {
                        if (dataContainer.length() <= 10) {
                            dataContainer += "T00:00:00.000Z";
                        }
                        sfDateValue = new java.sql.Timestamp(sdf.parse(dataContainer).getTime());
                        dataContainer = sfDateValue.toString();
                    }
                } else if (columnType.equalsIgnoreCase("NUMBER")) {
                    if (!(dataContainer == null || dataContainer.equalsIgnoreCase("null"))) {
                        java.math.BigDecimal bdeci = new java.math.BigDecimal(dataContainer);
                        dataContainer = bdeci.toBigInteger().toString();
                    }
                }

                if (dataContainer.equalsIgnoreCase("null")) {
                    dataContainer = SFSOAPConstants.DATA_WRAPPING_CHARACTER+ SFSOAPConstants.DATA_WRAPPING_CHARACTER;
                    buffer.append(dataContainer);
                } else {
                    dataContainer = SFSOAPConstants.DATA_WRAPPING_CHARACTER + dataContainer + SFSOAPConstants.DATA_WRAPPING_CHARACTER;
                    dataContainer += ",";
                    buffer.append(dataContainer);
                }
            }
            dataContainer = sfRecord.getField(columnHeader.get(columnCount).toString().trim()) + "";
            columnType = (((java.util.Map.Entry) it.next()).getValue() + "").trim();
            if (columnType.equalsIgnoreCase("TIMESTAMP")) {
                if (!(dataContainer == null || dataContainer.equalsIgnoreCase("null"))) {
                    if (dataContainer.length() <= 10) {
                        dataContainer += "T00:00:00.000Z";
                    }
                    sfDateValue = new java.sql.Timestamp(sdf.parse(dataContainer).getTime());
                    dataContainer = sfDateValue.toString();
                }
            } else if (columnType.equalsIgnoreCase("NUMBER")) {
                if (!(dataContainer == null || dataContainer.equalsIgnoreCase("null"))) {
                    java.math.BigDecimal bdeci = new java.math.BigDecimal(dataContainer);
                    dataContainer = bdeci.toBigInteger().toString();
                }
            }
            if (dataContainer.equalsIgnoreCase("null")) {
                dataContainer = SFSOAPConstants.DATA_WRAPPING_CHARACTER+ SFSOAPConstants.DATA_WRAPPING_CHARACTER+",";
                buffer.append(dataContainer);
            } else {
                dataContainer = SFSOAPConstants.DATA_WRAPPING_CHARACTER + dataContainer + SFSOAPConstants.DATA_WRAPPING_CHARACTER;
                buffer.append(dataContainer);
            }
            buffer.append(SFSOAPConstants.NEWLINE);
        }
        logger.log(OdiSfdcLogger.FINEST, "Writing Salesforce.com Data to CSV File ...");
        writer.append(buffer.toString());
        logger.log(OdiSfdcLogger.FINEST, "No. of Records written (" + recordSize + ") successfully ...");
    }//end of writeCSVFile

    /**
     * Writes the column header in the csv files
     * @param filepath
     * @param columnHeader
     * @return 
     */
    public void createCSVFileHeader(String filepath, ArrayList columnHeader, String characterSet, String dataWrapChar) throws IOException {

        logger.log(OdiSfdcLogger.FINEST, "Initiating CSV file creation process ...");
        prepareFileWriter(filepath, characterSet);
        dataContainer = columnHeader.toString();
        dataContainer = dataContainer.replaceAll(SFSOAPConstants.START_3RD_BRACKET, "");
        dataContainer = dataContainer.replaceAll(SFSOAPConstants.END_3RD_BRACKET, "");
//        dataContainer = dataContainer.replaceAll(",", (SFSOAPConstants.DOUBLE_QUOTE + "," + SFSOAPConstants.DOUBLE_QUOTE));
        dataContainer = dataContainer.replaceAll(",", (dataWrapChar + "," + dataWrapChar));
//        dataContainer = SFSOAPConstants.DOUBLE_QUOTE + dataContainer + SFSOAPConstants.DOUBLE_QUOTE;
        dataContainer = dataWrapChar + dataContainer + dataWrapChar;
        logger.log(OdiSfdcLogger.FINEST, "Writing Column Headers in the CSV file ...");
        writer.append(dataContainer);
        writer.append(SFSOAPConstants.NEWLINE);
        logger.log(OdiSfdcLogger.FINEST, "Column Headers written to CSV file ...");
    }

    /**
     * 
     * @throws IOException 
     */
    public void finalizeCSVWrite() throws IOException {
        writer.flush();
        writer.close();
        outputStream.close();
        fileWriter.close();
    }

    /**
     * 
     * @param filePath
     * @param charSet
     * @param columnHeader
     * @param badDataRecords
     * @param logger
     * @throws IOException 
     */
    public static void writeBadDataFile(String filePath, String charSet, ArrayList columnHeader, ArrayList badDataRecords, OdiSfdcLogger logger, String dataWrapChar) throws IOException {
        OdiSfSOAPCSVDesigner designer = new OdiSfSOAPCSVDesigner(logger);
		filePath = filePath.replaceAll("CSV", "BAD");
        filePath = filePath.substring(0, filePath.lastIndexOf(".")) + ".bad";
        designer.createCSVFileHeader(filePath, columnHeader, charSet, dataWrapChar);
        designer.writeBadData(badDataRecords);
    }

    /**
     * 
     * @param filePath
     * @param columnHeader
     * @param badDataRecords
     * @throws IOException 
     */
    public void writeBadDataFile(String filePath, ArrayList columnHeader, ArrayList badDataRecords, String dataWrapChar) throws IOException {
        filePath = filePath.substring(0, filePath.lastIndexOf("\\.")) + "_BAD.CSV";
        file = new File(filePath);
        fileWriter = new FileOutputStream(file);
        outputStream = new OutputStreamWriter(fileWriter, characterSet);
        writer = new BufferedWriter(outputStream);
        createCSVFileHeader(filePath, columnHeader, characterSet, dataWrapChar);
        writeBadData(badDataRecords);
    }

    /**
     * 
     * @param badDataRecords
     * @throws IOException 
     */
    public void writeBadData(ArrayList badDataRecords) throws IOException {
        Iterator rowIterator = badDataRecords.iterator();
        StringBuilder builder = new StringBuilder();

        while (rowIterator.hasNext()) {
            builder.append(rowIterator.next().toString());
            builder.append(SFSOAPConstants.NEWLINE);
        }
        writer.append(builder.toString());
        finalizeCSVWrite();
    }

    /**
     * writes the sf fetched records into a CSV file
     * @param filepath
     * @param columnHeader
     * @param csvRecordSet
     * @return 
     */
    public void writeCSVData(ArrayList columnHeader, ArrayList csvRecordSet, LinkedHashMap columnName_Type) throws IOException, ParseException {
        String parsedColumnName = "";
        logger.log(OdiSfdcLogger.FINEST, "CSV file writing process initiated ...");
        SObject sfRecord = null;
        int columnCount = (columnHeader.size());
        
        int recordSize = (csvRecordSet.size());
        logger.log(OdiSfdcLogger.FINEST, "No. of Records to be written : " + recordSize);
        StringBuilder buffer = new StringBuilder();
        for (int i = 0; i < recordSize; i++) {
            sfRecord = (SObject) csvRecordSet.get(i);
            for (int x = 0; x < columnCount; x++) {
                parsedColumnName = columnHeader.get(x).toString().trim();
                parsedColumnName = parsedColumnName.replaceAll(SFSOAPConstants.SINGLE_QUOTE, (SFSOAPConstants.SINGLE_QUOTE + "" + SFSOAPConstants.SINGLE_QUOTE));
                parsedColumnName = parsedColumnName.trim();
                dataContainer = (sfRecord.getField(parsedColumnName) + "").trim();
				/**
                 * added to handle the new line for the data
                 * SFDC returns <br> as a new line
                 * the below line replaces the <br> to actual new line in the data
                 */
                dataContainer = dataContainer.replaceAll(SFSOAPConstants.SFDC_NEW_LINE, SFSOAPConstants.jvNewLine);
								
                dataContainer = dataContainer.replaceAll(SFSOAPConstants.DOUBLE_QUOTE, (SFSOAPConstants.DOUBLE_QUOTE + "" + SFSOAPConstants.DOUBLE_QUOTE));

                if (dataContainer.equalsIgnoreCase("null")) {
                    dataContainer = SFSOAPConstants.DATA_WRAPPING_CHARACTER+ SFSOAPConstants.DATA_WRAPPING_CHARACTER+",";
                    buffer.append(dataContainer);
                } else {
                    dataContainer = SFSOAPConstants.DATA_WRAPPING_CHARACTER + dataContainer + SFSOAPConstants.DATA_WRAPPING_CHARACTER;
                    dataContainer += ",";
                    buffer.append(dataContainer);
                }

            }
            buffer.deleteCharAt((buffer.length() - 1));
            buffer.append(SFSOAPConstants.NEWLINE);
        }
        logger.log(OdiSfdcLogger.FINEST, "Writing Salesforce.com Data to CSV File ...");
        writer.append(buffer.toString());
        logger.log(OdiSfdcLogger.FINEST, "No. of Records written (" + recordSize + ") successfully ...");
    }//end of writeCSVData
}
//End of OdiSfSOAPCSVDesigner class

//Start of OdiResourceConnectionManager class
//import com.sforce.async.BulkConnection;
import java.sql.Connection;

/**
 *
 * @author Anup.Singh
 */
public class OdiResourceConnectionManager {

    //Instance of the Logger class
    private OdiSfdcLogger logger = null;
    private String sf_userName;
    private String sf_password;
    private String sf_authEndPoint;
    private String sf_apiVersion;
    private String sf_traceLogFileName;
    private String sf_connectionTimeout = "";
    private String sf_maxRequestSize = "";
    private String sf_maxResponseSize = "";
    private String sf_readTimeout = "";
    private String sf_assignmentRuleHeader;
    private String ora_userName;
    private String ora_password;
    private String ora_dburl;
    private String ora_driver;
    private String securityToken;
    private boolean sf_traceLog;
    private boolean sf_compression;
    private boolean sf_allOrNoneHeader;
    private boolean sf_allowFieldTruncation;
    private OdiResourceConnectionManager odiResManager;
    private OdiSfSOAPConnectionManager odisfSOAPCM;
    private int loadType;
    private OdiCommonUtil odiCommonUtil;
    private OdiOracleConnectionManager odioraConManager;
    private OdiSfSOAPCall odiSOAPcall;
    private Connection oracleConnection;
    private StringBuffer exceptionBuffer = new StringBuffer();
    private ExceptionLogger exLogger;

    public String getSf_apiVersion() {
        return sf_apiVersion;
    }

    public void setSf_apiVersion(String sf_apiVersion) {
        this.sf_apiVersion = sf_apiVersion;
    }

    public ExceptionLogger getExLogger() {
        if (exLogger == null) {
            exLogger = new ExceptionLogger(logger);
        }
        return exLogger;
    }

    public boolean isSf_allowFieldTruncation() {
        return sf_allowFieldTruncation;
    }

    public void setSf_allowFieldTruncation(boolean sf_allowFieldTruncation) {
        this.sf_allowFieldTruncation = sf_allowFieldTruncation;
    }

    public boolean isSf_allowOrNoneHeader() {
        return sf_allOrNoneHeader;
    }

    public void setSf_allowOrNoneHeader(boolean sf_allowOrNoneHeader) {
        this.sf_allOrNoneHeader = sf_allowOrNoneHeader;
    }

    public String getSf_assignmentRuleHeader() {
        return sf_assignmentRuleHeader;
    }

    public void setSf_assignmentRuleHeader(String sf_assignmentRuleHeader) {
        this.sf_assignmentRuleHeader = sf_assignmentRuleHeader;
    }

    public String getOra_dburl() {
        return ora_dburl;
    }

    public void setOra_dburl(String ora_dburl) {
        this.ora_dburl = ora_dburl;
    }

    public String getOra_password() {
        return ora_password;
    }

    public void setOra_password(String ora_password) {
        this.ora_password = ora_password;
    }

    public String getOra_userName() {
        return ora_userName;
    }

    public void setOra_userName(String ora_userName) {
        this.ora_userName = ora_userName;
    }

    public String getSf_password() {
        return sf_password;
    }

    public void setSf_password(String sf_password) {
        this.sf_password = sf_password;
    }

    public String getSf_userName() {
        return sf_userName;
    }

    public void setSf_userName(String sf_userName) {
        this.sf_userName = sf_userName;
    }

    public OdiCommonUtil getOdiCommonUtil() {
        if (odiCommonUtil != null) {
            return odiCommonUtil;
        }
        return odiCommonUtil = new OdiCommonUtil(logger);
    }

    public boolean isSf_compression() {
        return sf_compression;
    }

    public void setSf_compression(boolean sf_compression) {
        this.sf_compression = sf_compression;
    }

    public int getLoadType() {
        return loadType;
    }

    public void setLoadType(int loadType) {
        this.loadType = loadType;
    }

    public String getOra_driver() {
        return ora_driver;
    }

    public void setOra_driver(String ora_driver) {
        this.ora_driver = ora_driver;
    }

    public String getSf_maxResponseSize() {
        return sf_maxResponseSize;
    }

    public void setSf_maxResponseSize(String sf_maxResponseSize) {
        this.sf_maxResponseSize = sf_maxResponseSize;
    }

    public String getSf_connectionTimeout() {
        return sf_connectionTimeout;
    }

    public void setSf_connectionTimeout(String sf_connectionTimeout) {
        this.sf_connectionTimeout = sf_connectionTimeout;
    }

    public String getSf_maxRequestSize() {
        return sf_maxRequestSize;
    }

    public void setSf_maxRequestSize(String sf_maxRequestSize) {
        this.sf_maxRequestSize = sf_maxRequestSize;
    }

    public String getSf_readTimeout() {
        return sf_readTimeout;
    }

    public void setSf_readTimeout(String sf_readTimeout) {
        this.sf_readTimeout = sf_readTimeout;
    }

    public String getSf_authEndPoint() {
        return sf_authEndPoint;
    }

    public void setSf_authEndPoint(String sf_authEndPoint) {
        this.sf_authEndPoint = sf_authEndPoint;
    }

    public boolean isSf_traceLog() {
        return sf_traceLog;
    }

    public void setSf_traceLog(boolean sf_traceLog) {
        this.sf_traceLog = sf_traceLog;
    }

    public String getSf_traceLogFileName() {
        return sf_traceLogFileName;
    }

    public void setSf_traceLogFileName(String sf_traceLogFileName) {
        this.sf_traceLogFileName = sf_traceLogFileName;
    }

    public OdiSfSOAPConnectionManager getOdisfSOAPCM() {
        return odisfSOAPCM;
    }

    /**
     * Contructor for fetching the OdiResourceConnectionManager class
     * @param logger
     * @return 
     */
    public OdiResourceConnectionManager getOdiResourceConnectionManager(OdiSfdcLogger logger) {
        logger.log(OdiSfdcLogger.FINEST, "******* ODI Resource Connection Manager **********");
        if (null != odiResManager) {
            return odiResManager;
        }
        odiResManager = new OdiResourceConnectionManager(logger);
        exLogger = new ExceptionLogger(logger);
        return odiResManager;
    }

    public String getSecurityToken() {
        return securityToken;
    }

    public void setSecurityToken(String securityToken) {
        this.securityToken = securityToken;
    }

    private OdiResourceConnectionManager() {
    }

    /**
     * public constructor with logger initialization
     * @param logger 
     */
    public OdiResourceConnectionManager(OdiSfdcLogger logger) {
        this.logger = logger;
        exLogger = new ExceptionLogger(logger);
        this.logger.log(OdiSfdcLogger.FINEST, "******* ODI Resource Connection Manager **********");
    }

    /**
     * Login to SalesForce with provided previlages and returns the OdiSfSOAPConnectionManager object
     * @param userName
     * @param pwd
     * @param authEndPoint
     * @param sfTraceLogFileName
     * @param traceLog
     * @return 
     */
    public void login(String userName, String pwd, String authEndPoint, String apiVersion, String sfTraceLogFileName, boolean traceLog, boolean compression, String connectionTimeout, String maxResponseSize, String maxRequestSize, String readTimeout, boolean allowOrNoneHeader, boolean allowFieldTruncation, String assignmentRuleHeader, boolean isReLogin) {
        this.sf_userName = userName;
        this.sf_password = pwd;
        this.sf_authEndPoint = authEndPoint;
        this.sf_apiVersion = apiVersion;
        this.sf_traceLogFileName = sfTraceLogFileName;
        this.sf_traceLog = traceLog;
        this.sf_compression = compression;
        this.sf_connectionTimeout = connectionTimeout;
        this.sf_maxResponseSize = maxResponseSize;
        this.sf_maxRequestSize = maxRequestSize;
        this.sf_readTimeout = readTimeout;
        this.sf_allOrNoneHeader = allowOrNoneHeader;
        this.sf_allowFieldTruncation = allowFieldTruncation;
        this.sf_assignmentRuleHeader = assignmentRuleHeader;
        if (null == odisfSOAPCM) {
            odisfSOAPCM = new OdiSfSOAPConnectionManager(logger, this);
        }
        try {
            odisfSOAPCM.login(sf_userName, sf_password, sf_authEndPoint, sf_apiVersion, sf_traceLogFileName, sf_traceLog, sf_compression, sf_connectionTimeout, sf_maxResponseSize, sf_maxRequestSize, sf_readTimeout, sf_allOrNoneHeader, sf_allowFieldTruncation, sf_assignmentRuleHeader, loadType, isReLogin);
        } catch (Exception exception) {
            logger.log(OdiSfdcLogger.FINEST, "+++++++++Exception Occured in Salesforce Login");
            exLogger.logAndThrowError(exception);
        }
    }

    public void login() {
        if (null == odisfSOAPCM) {
            odisfSOAPCM = new OdiSfSOAPConnectionManager(logger, this);
        }
        try {
            odisfSOAPCM.login(sf_userName, sf_password, sf_authEndPoint, sf_apiVersion, sf_traceLogFileName, sf_traceLog, sf_compression, sf_connectionTimeout, sf_maxResponseSize, sf_maxRequestSize, sf_readTimeout, sf_allOrNoneHeader, sf_allowFieldTruncation, sf_assignmentRuleHeader, loadType, false);
        } catch (Exception exception) {
            logger.log(OdiSfdcLogger.FINEST, "+++++++++Exception Occured in Salesforce Login");
            exLogger.logAndThrowError(exception);
        }
    }

    /**
     * return the initialized SOAPCall object.
     * @return 
     */
    public OdiSfSOAPCall getSfSoapCallInstance() {
        if (null != odiSOAPcall) {
            return odiSOAPcall;
        }
        odiSOAPcall = new OdiSfSOAPCall(logger, odisfSOAPCM.getParterConnection(), this);
        return odiSOAPcall;
    }

    public SFBulkConnection getBulkConnection() {
        if (null != odisfSOAPCM) {
            login();
        }
        return odisfSOAPCM.getBulkConnection();
    }

    public Connection getOracleConnection() {
        try {
            if (null == oracleConnection) {
                logger.log(OdiSfdcLogger.FINEST, "Initiating Oracle Connection process ...");
                if (null == odioraConManager) {
                    odioraConManager = new OdiOracleConnectionManager(logger);
                }
                odioraConManager.setOra_Driver(ora_driver);
                odioraConManager.setOra_UserName(ora_userName);
                odioraConManager.setOra_Password(ora_password);
                odioraConManager.setOra_ConnectionURL(ora_dburl);
                oracleConnection = odioraConManager.getConnection();
            }
        } catch (Exception exception) {
            logger.log(OdiSfdcLogger.ERROR, "Oracle Connection Error ");
            exLogger.logAndThrowError(exception);
        }
        return oracleConnection;
    }

    public void checkSFLoginRequired() {
        logger.log(OdiSfdcLogger.FINEST, "Checking for active session ...");
        login(sf_userName, sf_password, sf_authEndPoint, sf_apiVersion, sf_traceLogFileName, sf_traceLog, sf_compression, sf_connectionTimeout, sf_maxResponseSize, sf_maxRequestSize, sf_readTimeout, sf_allOrNoneHeader, sf_allowFieldTruncation, sf_assignmentRuleHeader, true);
        logger.log(OdiSfdcLogger.FINEST, "Active session restored ...");
    }
}
//End of OdiResourceConnectionManager class

//Start of ODISFPropertyDataCreater class
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;

/**
 *
 * @author Anup.Singh
 */
public class ODISFPropertyDataCreater {

    private SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
    private Properties prop = new Properties();
    private String propertiesFilePath = null;
    private ExceptionLogger exLogger;
    private OdiSfdcLogger logger;

    public ODISFPropertyDataCreater(OdiSfdcLogger logger) {
        this.logger = logger;
        this.exLogger = new ExceptionLogger(logger);
    }

    public void updatePropetiesFile() throws IOException {
	 Date date = new Date();
  //     String odi_session_start_time = "<%=odiRef.getSession("SESS_BEG")%>";
//	      Date odi_date = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.S").parse(odi_session_start_time);
	    
//	      String timeStamp = sdf.format(new Timestamp(odi_date.getTime()-(<%=odiRef.getOption("USER_TIMEZONE_DIFFERENCE_WITH_GMT_IN_MINUTES")%> * 60000)));
	    //  System.out.println("ODI_DATE::"+timeStamp);      
      propertiesFilePath = "<%=odiRef.getOption("TEMP_DIR")%><%=odiRef.getOption("LAST_RUN_OUTPUT_PROPERTY_FILE")%>";
//      propertiesFilePath = "C:\\DOCUME~1\\ANUP~1.SIN\\LOCALS~1\\Temp\\OdiSalesforce_LKM.properties";
//      String timeStamp = sdf.format(new Timestamp(date.getTime()));
      String timeStamp = sdf.format(new Timestamp(date.getTime()-(<%=odiRef.getOption("USER_TIMEZONE_DIFFERENCE_WITH_GMT_IN_MINUTES")%> * 60000)));
	  logger.log(OdiSfdcLogger.DEBUG, "+++++++++timeStamp"+date);
	   logger.log(OdiSfdcLogger.DEBUG, "+++++++++timeStamp"+timeStamp);

        try {
            //set the properties value
            prop.setProperty("LAST_MODIFIED_DATE", timeStamp);
            //save properties to folder
            FileOutputStream fOutputStream = new FileOutputStream(propertiesFilePath);
            prop.store(fOutputStream, null);

        } catch (FileNotFoundException fnfe) {
            logger.log(OdiSfdcLogger.ERROR, "+++++++++Error in Updating Property File");
            logger.log(OdiSfdcLogger.ERROR, "+++++++++" + fnfe.getCause());
            logger.log(OdiSfdcLogger.ERROR, "+++++++++" + fnfe.getMessage());
            logger.log(OdiSfdcLogger.ERROR, "+++++++++" + fnfe.getLocalizedMessage());
            logger.log(OdiSfdcLogger.ERROR, "+++++++++" + fnfe);
//            IOException iex = new IOException("Property File Not Found.",fnfe);
            throw fnfe;//exLogger.logAndThrowError(ex);
        } catch (IOException ex) {
            logger.log(OdiSfdcLogger.ERROR, "+++++++++Error in Updating Property File");
            logger.log(OdiSfdcLogger.ERROR, "+++++++++" + ex.getCause());
            logger.log(OdiSfdcLogger.ERROR, "+++++++++" + ex.getMessage());
            logger.log(OdiSfdcLogger.ERROR, "+++++++++" + ex.getLocalizedMessage());
            IOException iex = new IOException("Property File Not Found.");
            throw iex;//exLogger.logAndThrowError(ex);
        }
    }

    public String getLastUploadedDate() throws IOException {
        String date = "";
        try {
            propertiesFilePath = "<%=odiRef.getOption("TEMP_DIR")%><%=odiRef.getOption("LAST_RUN_OUTPUT_PROPERTY_FILE")%>";
//            propertiesFilePath = "";
            FileInputStream fInputStream = new FileInputStream(propertiesFilePath);
            prop.load(fInputStream);
            date = prop.getProperty("LAST_MODIFIED_DATE");
        } catch (IOException ex) {
            logger.log(OdiSfdcLogger.ERROR, "+++++++++Error in Fetching Last Uploaded Date from property file");
            throw ex;//exLogger.logAndThrowError(ex);
        }
        return date;
    }
}
//End of ODISFPropertyDataCreater class


@>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SALESFORCE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3231]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c559edaa-a4de-4149-a732-8e30ed892e38]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1460]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:19:51.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[60]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Drop Work Table]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[67079799-5352-4116-b849-8d05d0bf4f3d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3231]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[drop table <%=odiRef.getTable("L", "COLL_NAME", "W")%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3232]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[bde261f8-adbe-4e6b-98c0-372d0cc8bc50]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1461]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:19:51.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[230]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Load Data To Staging]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[169a6f8f-1300-4e3e-aa12-50da816e2947]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3232]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<@
{
if(soap){	
	if(!processCSV){
		odiref.performStagingExtraction();     //SOAP API   
	}
}

//commented as direct data load is not supported in BULK mode
/*else{
	loadStatus = odiSfdcRef.loadDatatoStaging();
	logger.log("status of loading"+loadStatus);
}*/
}
@>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3233]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[JYTHON]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9933c200-6216-4848-a91c-2251a96a6b82]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1462]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:19:51.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[240]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Load Data To Staging(SQLLDR)]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[60236389-3744-4d41-8e76-bd7811792865]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3233]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<@
if(!processCSV && !useCSVFlag){
@>
import subprocess
import os
import re

outfile = r"""<@=outFileName@>"""
logfile = r"""<@=sqlldrLogFile@>"""
ctlfile = r"""<@=ctlFileName@>"""

try:
	outfileHandle = open( outfile, 'w' )
	loadcmd = r"""sqlldr <%=odiRef.getInfo("DEST_USER_NAME")%>/\"<@=oraPassword@>\"@<%=odiRef.getInfo("DEST_DSERV_NAME")%>  control="%s" log="%s" """ % (ctlfile, logfile)
	p = subprocess.Popen(loadcmd, shell=True, stdout=outfileHandle.fileno(), stderr=outfileHandle.fileno() )
    	p.communicate()
    	rc = p.returncode
    	outfileHandle.close()
    
finally:
    if outfileHandle <> None:
        outfileHandle.close()


# Init Vars
nbIns = 0
nbRej = 0
nbNull = 0
strprt = ""
maxAllowedError = r"""<%=odiRef.getOption("MAX_ALLOWED_ERRORS")%>"""

c = 0
flag = 0

# Open log file
f = open(logfile, "r")
try:
	lines = f.readlines()
	for line in lines:
		if line.rstrip().upper().endswith(r"""<%=odiRef.getTable("L", "COLL_NAME", "W")%>:""".upper()):
			flag = 1
			c = 0
		if flag == 1:
			if c > 0 and c <= 4:
				if c == 1 :
					nbIns = int(re.findall("\d+", line)[0])
				elif c == 2:
					nbRej = int(re.findall("\d+", line)[0])
				elif c == 4:
					nbNull = int(re.findall("\d+", line)[0])
					break
		c+=1
	strprt = "\n\tIns:\t%s\n\tReject:\t%s\n\tNullField:\t%s" % (nbIns, nbRej, nbNull)
finally:
	f.close()

# if some rows has been rejected due to invalide data, check KM option MAX_ALLOWED_ERROR
if rc == 2:
	if nbRej > int(maxAllowedError):
		raise "\nThe rejected rows processed by SQLLDR are more than Maximum Allowed Error"
		break

<@
}
@>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3234]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4c13fbcd-ab55-4682-ab3d-fad62cb80d74]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1463]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:19:52.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[250]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Store Last Run Output Date]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[434fb195-19ee-4a93-885c-3953e794dcfe]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3234]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<@
if(soap){
	if(!processCSV){
		odiref.writePropertyFile();     //SOAP API
	}
}
@>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SALESFORCE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3235]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[JYTHON]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[247caff1-2e70-40fc-8050-c060e87d2aff]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1464]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:19:52.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[MC]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[260]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Delete Tempory Files]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c7612723-7fe4-44f7-82a0-20d0a8081975]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3235]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[import os
import re

#Delete local control file
try:
  os.remove(r"""<@=ctlFileName@> """.rstrip() )
finally:
  pass

<@
if(!processCSV){
@>
#Delete local csv file
try:
  os.remove(r"""<@=dataFileName@> """.rstrip() )
finally:
  pass

<@}@>

]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3236]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f9ad20de-05ae-4e35-b778-9388f5a06b3a]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1465]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:19:52.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[MC]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[270]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Release Resources]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3745d435-8b92-4770-8750-310c8e98f6db]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3236]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<@
//De-allocate memory

encryptionUtil = null;
salesforcePwd = null;
encryptedPassword = null;

lineSOQL = null;
tablealias = null;
prefixe = null;
tableName = null;
targetTable = null;
fstream = null;
out = null;

mappedCols = null;
colNameDataTypeList = null;
insertColStr = null;
insertValueStr = null;
updateColStr = null;
columnName = null;
sqlParamList = null;
colNameDataTypePair = null;
it = null;
entry = null;

            logfilePath = null;           
            logger = null;
            manager = null;
            action = null;

            sfuName = null;
            sfPassword = null;
            endpoint = null;                        
            sfmanager = null;
            odiref = null;

            orauName =null;
            oraPassword = null;
            oraUrl = null;

            lineSOQL = null;

            sf_columnNames = null;
            ora_columnNames = null;
            ora_tableName = null;

             tablealias = null;
             prefixe = null;
             tableName = null;
@>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3237]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3f1a5a57-4fd3-4b4e-a639-aadd381ec295]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1466]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:19:52.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[40]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Initialize]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4ce0eaef-cf8d-4a8c-ab8a-0235c6aea27e]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3237]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<@
//Key: BRI-AP-YAL-ODIKG-HL

//Initializing logger

tempPathOnAgent = "<%=odiRef.getOption("TEMP_DIR")%>";
logFile = tempPathOnAgent + "<%=odiRef.getOption("LOG_FILE_NAME")%>";
logger = new OdiSfdcLogger(OdiSfdcLogger.DEBUG, logFile);
logger.log(OdiSfdcLogger.FINEST, "Log file created successfully........");

String action = "<%=odiRef.getOption("ACTION")%>";
boolean soap = ("<%=odiRef.getOption("USE_BULK_API")%>".trim().equals("0")?true:false);
int  connectionType = (soap?1:2);
String loadBatchSize = "<%=odiRef.getOption("LOAD_BATCH_SIZE")%>";
String loadfrombatch = "<%=odiRef.getOption("UPLOAD_FROM_BATCH")%>";
boolean isLastRun = ("<%=odiRef.getOption("DELTA_EXTRACTION")%>".trim().equalsIgnoreCase("1")?true:false);
boolean processCSV = ("<%=odiRef.getOption("PROCESS_ONLY_CSV")%>".trim().equalsIgnoreCase("1")?true:false);
com.sforce.async.ConcurrencyMode mode =com.sforce.async.ConcurrencyMode.<%=odiRef.getOption("CONCURRENCY_MODE")%>;
logger.log(OdiSfdcLogger.FINEST, "Log file created successfully....mode value...."+mode);

//new line
boolean extractSFData =  ("<%=odiRef.getOption("USE_SALESFORCE_AS_SOURCE")%>".trim().equalsIgnoreCase("1")?true:false);
boolean useCSVFlag =  ("<%=odiRef.getOption("DIRECT_DATA_LOAD")%>".trim().equalsIgnoreCase("0")?false:true);
String characterSet = "<%=odiRef.getOption("CHARACTER_SET")%>";
String fromDate = "<%=odiRef.getOption("START_DATE")%>";
String toDate = "<%=odiRef.getOption("END_DATE")%>";
String maxAllowedErrors = "<%=odiRef.getOption("MAX_ALLOWED_ERRORS")%>";
String characterSet = "<%=odiRef.getOption("CHARACTER_SET")%>";

//Intialize OdiSfdcRef
odiSfdcRef = new OdiSfdcRef(logger);
//Set Source table Alias name
odiSfdcRef.setAliasName("<%=odiRef.getSrcTablesList("", "[POP_TAB_ALIAS]", "", "")%>");
//Setting and parsing interface filter
odiSfdcRef.setFilter("<%=odiRef.getFilterList("", "[EXPRESSION]", " And ", "")%>");
manager = new OdiResourceConnectionManager(logger); //SOAP API

//Setting variables for SQLLDR file paths
tempBaseFileName = logFile.split(".genlog")[0];
dataFileName = tempPathOnAgent + "<%=odiRef.getOption("CSV_FILE_NAME")%>";
ctlFileName = tempBaseFileName + "_CTL.ctl";
badFileName = tempBaseFileName + "_BAD.bad";
dscFileName = tempBaseFileName + "_DSC.dsc";
outFileName = tempBaseFileName + "_OUT.out";
sqlldrLogFile = tempBaseFileName + "_LOG.log";
@>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3238]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7263a49e-8b92-4799-b509-75bd085bc8e4]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1467]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:19:53.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[4]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[20]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Support Classes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f1009047-8cfc-48e0-b48d-51f354968a50]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3238]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<@
//Start of OdiSfSOAPCall class
import com.sforce.soap.partner.bcone.DeletedRecord;
import com.sforce.soap.partner.bcone.GetDeletedResult;
import com.sforce.soap.partner.bcone.GetUpdatedResult;
import com.sforce.soap.partner.bcone.QueryResult;
import com.sforce.soap.partner.sobject.bcone.SObject;
import com.sforce.soap.partner.sobject.bcone.SObject.*;
import com.sforce.soap.enterprise.sobject.*;

import java.io.IOException;
import java.math.BigDecimal;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.Hashtable;
import java.util.LinkedHashMap;

import java.util.Date;
import java.util.regex.*;

public class OdiSfSOAPCall {

    private OdiSfdcLogger logger;
    //create a class scope reference to the service object
    private SFPartnerConnection connection;
    private OdiSfSOAPCSVDesigner csvDesigner;
    private ArrayList sfHeaderList = new ArrayList();
    private String SFSOQL = "";
    private String ora_tableColumnHeader = "";
    private String ora_tableColumnData = "";
    private String sf_tableColumnHeader = "";
    private String CSVFileLocation = "";
    private String BATCH_INSERT_QUERY = "";
	private String stagingSchemaName = "";
    private String tableName = "";
    private String sf_loadBatchSize = "";
    private OdiResourceConnectionManager resourceConManager;
    private int INITIAL_BATCHSIZE = 500;
    //Interface filter variable
    private String filter = "";
    //Table alias name
    private String aliasName = "";
    private String characterSet = null;
    private String action = null;
    private int totalRowProcessed = 0;
    private int totalRowRejected = 0;
    private int totalRowInserted = 0;
    private int numberOFrowsExtracted = 0;
    private Connection oracleConnection = null;
    private Statement insertStatement = null;
    private LinkedHashMap columnName_Type = new LinkedHashMap();
    private ODISFPropertyDataCreater propertCreator;
    private boolean executeLastRun;
    private boolean extractFromSalesforce;
    private boolean directDataDownload;
    private int csvRecordSize = 0;
    OdiCommonUtil util;
    StringBuffer exceptionBuffer = new StringBuffer();
    ExceptionLogger exLogger;
    StringBuffer insertSQLQuery;
    Hashtable typeTable;
    private String UPDATEQUERY = "";
    private String DELETEQUERY = "";
    private String sfFromDate;
    private String sfEndDate;
    private Calendar fromDate;
    private Calendar toDate;
    private SimpleDateFormat calendarDateFormat = new SimpleDateFormat("yyyy-MM-dd hh:mm");
    private ArrayList completeSfcdRecordSet = new ArrayList();
    private ArrayList sqlInsertList = new ArrayList();
    private ArrayList badDataList = new ArrayList();
    private int maxAllowedErrors = 0;
	private String sf_dataWrappingChar = "";

    public String getSf_dataWrappingChar() {
        return sf_dataWrappingChar;
    }

    public void setSf_dataWrappingChar(String sf_columnQuote) {
        if (sf_columnQuote == null || sf_columnQuote.isEmpty()) {
            exLogger.logAndThrowError(new RuntimeException("Please provide the DATA_WRAPPING_CHAR option ..."));
        }
        this.sf_dataWrappingChar = sf_columnQuote;
        SFSOAPConstants.DATA_WRAPPING_CHARACTER = this.sf_dataWrappingChar;
    }
	
    public int getMaxAllowedErrors() {
        return maxAllowedErrors;
    }

    public void setMaxAllowedErrors(String maxAllowedErrors) {
        try {
            this.maxAllowedErrors = Integer.parseInt(maxAllowedErrors);
        } catch (Exception ex) {
            exLogger.logAndThrowError(ex);
        }
    }

    public boolean isDirectDataDownload() {
        return directDataDownload;
    }

    public void setDirectDataDownload(boolean useCSVFlag) {
        this.directDataDownload = useCSVFlag;
    }

    public String getSfEndDate() {
        return sfEndDate;
    }

    public void setSfEndDate(String sfEndDate) {
        this.sfEndDate = sfEndDate;
        try {
            if (!sfEndDate.equalsIgnoreCase("NONE")) {
                toDate = Calendar.getInstance();
                toDate.setTime(calendarDateFormat.parse(sfEndDate));
            }
        } catch (Exception ex) {
            logger.log(OdiSfdcLogger.FINEST, "Invalid DATE Format, the correct date format is yyyy-MM-dd hh:mm, eg. 1999-12-24 00:00....");
            exLogger.logAndThrowError(ex);
        }
    }

    public String getSfFromDate() {
        return sfFromDate;
    }

    public void setSfFromDate(String sfFromDate) {
        this.sfFromDate = sfFromDate;
        try {
            if (!sfFromDate.equalsIgnoreCase("NONE")) {
                fromDate = Calendar.getInstance();
                fromDate.setTime(calendarDateFormat.parse(sfFromDate));
            }
        } catch (Exception ex) {
            logger.log(OdiSfdcLogger.FINEST, "Invalid DATE Format, the correct date format is yyyy-MM-dd hh:mm, eg. 1999-12-24 00:00....");
            exLogger.logAndThrowError(ex);
        }
    }

    public String getAction() {
        return action;
    }

    public void setAction(String action) {
        this.action = action;
    }

    public String getCharacterSet() {
        if (null == characterSet) {
            return "UTF8";
        }
        return characterSet;
    }

    public void setCharacterSet(String characterSet) {
        this.characterSet = characterSet;
    }

    public boolean isExtractFromSalesforce() {
        return extractFromSalesforce;
    }

    public void setExtractFromSalesforce(boolean extractFromSalesforce) {
        this.extractFromSalesforce = extractFromSalesforce;
    }

    public boolean isExecuteLastRun() {
        return executeLastRun;
    }

    public void setExecuteLastRun(boolean executeLastRun) {
        this.executeLastRun = executeLastRun;
    }

    public String getSf_loadBatchSize() {
        return sf_loadBatchSize;
    }

    public void setSf_loadBatchSize(String Sf_loadBatchSize) {
        this.sf_loadBatchSize = Sf_loadBatchSize;
        if (null != this.sf_loadBatchSize && this.sf_loadBatchSize.trim().length() != 0) {
            INITIAL_BATCHSIZE = Integer.parseInt(this.sf_loadBatchSize.trim());
//            if (INITIAL_BATCHSIZE < 200 || INITIAL_BATCHSIZE > 2000) {
//                INITIAL_BATCHSIZE = 500;
//            }
            if (INITIAL_BATCHSIZE > 2000) {
                INITIAL_BATCHSIZE = 500;
            }
        }
        logger.log(OdiSfdcLogger.FINEST, "+++++++++Batch Size : " + INITIAL_BATCHSIZE);
    }

    public int getTotalRowRejected() {
        return totalRowRejected;
    }

    public int getTotalRowProcessed() {
        return totalRowProcessed;
    }

    public void setOra_tableColumnHeader(String ora_tableColumnHeader) {
        this.ora_tableColumnHeader = ora_tableColumnHeader;
        columnName_Type = new LinkedHashMap();
        String[] columnSet = this.ora_tableColumnHeader.split("~~");
		logger.log(OdiSfdcLogger.FINEST, "+++++++++1111columnSet length : " + columnSet.length);
        logger.log(OdiSfdcLogger.FINEST, "+++++++++22222columnSet values : " + Arrays.toString(columnSet));
//        logger.log(OdiSfdcLogger.FINEST, "+++++++++Name Set : " + SFSOAPConstants.COLUMN_DATATYPE_PATTERN);
        for (String val : columnSet) {
            String[] data = val.split("-");
//			logger.log(OdiSfdcLogger.FINEST, "+++++++++AAAAAA data length : " + data.length);
//            logger.log(OdiSfdcLogger.FINEST, "+++++++++BBBBB data values : " + Arrays.toString(data));
            columnName_Type.put(data[0], data[1].replaceAll(SFSOAPConstants.COLUMN_DATATYPE_PATTERN, ""));
//            logger.log(OdiSfdcLogger.FINEST, "+++++++++Name Set : " + data[0]);
//            logger.log(OdiSfdcLogger.FINEST, "+++++++++Type Set : " + data[1].replaceAll(SFSOAPConstants.COLUMN_DATATYPE_PATTERN, ""));
        }
        this.ora_tableColumnHeader = columnName_Type.keySet().toString();
        this.ora_tableColumnHeader = this.ora_tableColumnHeader.replaceAll(SFSOAPConstants.START_3RD_BRACKET, "");
        this.ora_tableColumnHeader = this.ora_tableColumnHeader.replaceAll(SFSOAPConstants.END_3RD_BRACKET, "");

        logger.log(OdiSfdcLogger.FINEST, "+++++++++Name Set : " + columnName_Type.keySet());

    }

    public void setResourceConManager(OdiResourceConnectionManager resourceConManager) {
        this.resourceConManager = resourceConManager;
    }
	
	public String getStagingSchemaName() {
        return stagingSchemaName;
    }

    public void setStagingSchemaName(String stagingSchemaName) {
        this.stagingSchemaName = stagingSchemaName;
    }

    public String getTableName() {
        return tableName;
    }

    public void setTableName(String tableName) {
        this.tableName = tableName;
    }

    public String getCSVFileLocation() {
        return CSVFileLocation;
    }

    public void setCSVFileLocation(String CSVFileLocation) {
        this.CSVFileLocation = CSVFileLocation;
    }

    public String get_Sf_tableColumnHeader() {
        return sf_tableColumnHeader;
    }

    public void setSf_tableColumnHeader(String sf_tableColumnHeader) {
        this.sf_tableColumnHeader = sf_tableColumnHeader;
        String[] headerList = sf_tableColumnHeader.split(",");
        Collections.addAll(sfHeaderList, headerList);
    }

    public String getSFSOQL() {
        return SFSOQL;
    }

    public void setSFSOQL(String SFSOQL) {
        this.SFSOQL = SFSOQL;

    }

    public String getDELETEQUERY() {
        return DELETEQUERY;
    }

    public void setDELETEQUERY(String DELETEQUERY) {
        this.DELETEQUERY = DELETEQUERY;
    }

    public String getUPDATEQUERY() {
        return UPDATEQUERY;
    }

    public void setUPDATEQUERY(String UPDATEQUERY) {
        this.UPDATEQUERY = UPDATEQUERY;
    }

    /**
     * @return the filter
     */
    public String getFilter() {
        return filter;
    }

    /**
     * @param filter the filter to set
     */
    public void setFilter(String filterStr) {
        String filterString = parseFilter(filterStr);
        this.filter = filterString;
    }

    /**
     * @return the aliasName
     */
    public String getAliasName() {
        return aliasName;
    }

    /**
     * @param aliasName the aliasName to set
     */
    public void setAliasName(String aliasName) {
        this.aliasName = aliasName;
    }

    public OdiSfSOAPCall(OdiSfdcLogger logger, SFPartnerConnection connection, OdiResourceConnectionManager resourceConManager) {
        this.logger = logger;
        this.connection = connection;
        csvDesigner = new OdiSfSOAPCSVDesigner(logger);
        this.resourceConManager = resourceConManager;
        util = resourceConManager.getOdiCommonUtil();
        exLogger = resourceConManager.getExLogger();
        propertCreator = new ODISFPropertyDataCreater(logger);
        logger.log(OdiSfdcLogger.FINEST, "+++++++++OdiSfSOAPCall++++++++++++");
    }

    /**
     * Method to parse interface filter expression 
     * to generate SFDC SOQL query
     * @param String
     * @return String
     */
    private String parseFilter(String filterExpression) {
        String fExp = filterExpression.replace(SFSOAPConstants.bsNewLine, SFSOAPConstants.jvNewLine);//remove new line from the expression
        //fExp = fExp.replaceFirst("And " + START_BRACKET, "");//remove first "And (" from expression

        String prefix = getAliasName() + ".";
        logger.log(OdiSfdcLogger.FINEST, "prefixe: " + prefix);

        fExp = fExp.replace(prefix, "");//remove alias name plus dot (.)

        //fExp = fExp.replaceAll(START_BRACKET, "");//remove left parenthesis
        //fExp = fExp.replaceAll(END_BRACKET, " ");//remove right parenthesis
        logger.log(OdiSfdcLogger.FINEST, "Parsed Filter String: " + fExp);
        return fExp.trim();
    }//end of parseFilter() filter

    public void Query() {
        try {
            if (!isExtractFromSalesforce()) {
                logger.log(OdiSfdcLogger.FINEST, "Salesforce data extraction skipped ...");
                return;
            }
            logger.log(OdiSfdcLogger.FINEST, "+++++++++Start of Query++++++++++++");
            boolean isDone = false;
            ArrayList sfObjectList = new ArrayList();
            String selectQuery = parseQuery();
            connection.setQueryOptions(INITIAL_BATCHSIZE);
			logger.log(OdiSfdcLogger.FINEST, "INITIAL_BATCHSIZE ..." +INITIAL_BATCHSIZE);
            QueryResult queryResultSet = null;
            logger.log(OdiSfdcLogger.FINEST, "Submiting generated query to Salesforce.com ...");
            if (getAction().equalsIgnoreCase("QUERY") || getAction().equalsIgnoreCase("QUERYUPDATED")) {
                logger.log(OdiSfdcLogger.FINEST, "Query Submission mode : Query");
                logger.log(OdiSfdcLogger.FINEST, "Query Submission mode : Query"+new Date());
                queryResultSet = connection.query(selectQuery);
                logger.log(OdiSfdcLogger.FINEST, "Query Submission mode : Query"+new Date());
            } else if (getAction().equalsIgnoreCase("QUERYALL") || getAction().equalsIgnoreCase("QUERYDELETED")) {
                logger.log(OdiSfdcLogger.FINEST, "Query Submission mode : QueryAll");
                queryResultSet = connection.queryAll(selectQuery);
            }
            if (queryResultSet != null) {
                logger.log(OdiSfdcLogger.FINEST, "Generated query executed successfully ...");
            }
            if (!isDirectDataDownload()) {
                csvDesigner.createCSVFileHeader(CSVFileLocation, sfHeaderList, getCharacterSet(),sf_dataWrappingChar);
            }

            int counter = 1;
            while (!isDone) {
                sfObjectList.clear();
                SObject[] so = queryResultSet.getRecords();
                logger.log(OdiSfdcLogger.FINEST, "==========================================================================================");
                logger.log(OdiSfdcLogger.FINEST, "Reading salesforce data from batch (" + counter + ") ...");

                logger.log(OdiSfdcLogger.FINEST, "Number of rows fetched from salesforce : " + so.length);
                if (!isDirectDataDownload()) {
//                    csvDesigner.writeCSVFile(sfHeaderList, sfObjectList, columnName_Type);
                    sfObjectList.addAll(Arrays.asList(so));
                    csvDesigner.writeCSVData(sfHeaderList, sfObjectList, columnName_Type);
                } else {
                    completeSfcdRecordSet.addAll(Arrays.asList(so));
                }
                if (queryResultSet.isDone()) {
                    isDone = true;
                    continue;
                }
                counter++;
                queryResultSet = connection.queryMore(queryResultSet.getQueryLocator());
            }
            if (!isDirectDataDownload()) {
                logger.log(OdiSfdcLogger.FINEST, "Finalizing the CSV File creation ...");
                csvDesigner.finalizeCSVWrite();
            }
//            numberOFrowsExtracted = sfObjectList.size();
        } catch (Exception se) {
            logger.log(OdiSfdcLogger.ERROR, "Exception in executing Query Operation ... ");
            exLogger.logAndThrowError(se);
        }
    }    

    public String parseQuery() throws IOException {
        String parsedQuery = "";
        logger.log(OdiSfdcLogger.FINEST, "Parsing the generated Salesforce.com Select query ...");
        logger.log(OdiSfdcLogger.FINEST, "Salesforce.com raw query :" + SFSOQL);
//        logger.log(OdiSfdcLogger.FINEST, "+++++++++Pattern :" + SFSOAPConstants.COLUMN_NAME_PATTERN);

//        parsedQuery = getSFSOQL().replaceAll(SFSOAPConstants.COLUMN_NAME_PATTERN, "");
        parsedQuery = getSFSOQL();
        if (isExecuteLastRun()) {
            logger.log(OdiSfdcLogger.FINEST, "Last Run output selected, so LastModifiedDate clause is appended to the query ...");
            parsedQuery = util.retainLastRunQuery(parsedQuery, propertCreator);
        }
        logger.log(OdiSfdcLogger.FINEST, "Salseforce.com parsed query :" + parsedQuery);
        logger.log(OdiSfdcLogger.FINEST, "Salseforce.com query parsing done successfully ...");
        return parsedQuery;
    }

    public int prepareSQLInsertBatchStatement(ArrayList csvRecordSet, int offset, Statement insertStatement) {
        try {
            logger.log(OdiSfdcLogger.FINEST, "Initiating ceation of batch for SQL insert statements ... ");
            String[] csvColumnDataCollection;
            int csvRecordSetSize = csvRecordSet.size();
            String tempColumnData = "";
            String record = "";
            int limitloop = (offset + INITIAL_BATCHSIZE);
            for (int i = offset; (i < limitloop && i < csvRecordSetSize); i++) {
                csvColumnDataCollection = (String[]) csvRecordSet.get(offset);
                tempColumnData = "";
                record = prepareData(csvColumnDataCollection);

                insertStatement.addBatch(record);
//                logger.log(OdiSfdcLogger.FINEST, "+++++++++Query : " + record);
                totalRowProcessed++;
                offset++;
            }
            logger.log(OdiSfdcLogger.FINEST, "Batch created successfully ...");
        } catch (Exception e) {
            logger.log(OdiSfdcLogger.ERROR, "prepareSQLInsertBatchStatement Error ");
            exLogger.logAndThrowError(e);
        }
        return offset;
    }

    public String prepareInsertDataType(String[] dataList) {
        String tempColumnData = "";
        try {
//            logger.log(OdiSfdcLogger.FINEST, "+++++++++start of prepareInsertDataType()++++++++++++");
            String[] columnNameCollection = ora_tableColumnHeader.split(",");
            int traverseCounter = 0;
            String tableData = "";
            String temptableData = "";
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
            java.sql.Timestamp sfDateValue = null;
            for (String columnName : columnNameCollection) {
                if (columnName_Type.containsKey(columnName.trim())) {
                    String columnType = columnName_Type.get(columnName.trim()) + "";
//                    logger.log(OdiSfdcLogger.FINEST, "+++++++++Column Name : " + columnName + " -- Column Type : " + columnType);
                    columnType = columnType.trim();
                    tableData = dataList[traverseCounter];
                    tableData = tableData.replaceAll("'", "''");
                    temptableData = ",'" + tableData + "'";
                    if (tableData.trim().equalsIgnoreCase("null") || columnType.equalsIgnoreCase("NUMBER") || columnType.equalsIgnoreCase("DOUBLE") || columnType.equalsIgnoreCase("FLOAT") || columnType.equalsIgnoreCase("LONG") || columnType.equalsIgnoreCase("INTEGER") || columnType.equalsIgnoreCase("INT") || columnType.equalsIgnoreCase("DECIMAL")) {
                        temptableData = "," + tableData;
                    }
                    if (columnType.equalsIgnoreCase("CHAR")) {
                        temptableData = ",'F'";
//                        logger.log(OdiSfdcLogger.FINEST, "+++++++++CHAR data : " + temptableData);
                        if (tableData.equalsIgnoreCase("true")) {
                            temptableData = ",'T'";
                        }
                    }
                    if (columnType.equalsIgnoreCase("TIMESTAMP")) {
//                        logger.log(OdiSfdcLogger.FINEST, "+++++++++TIMESTAMP Initial data : " + tableData);
                        temptableData = ",NULL";
                        if (!tableData.trim().equalsIgnoreCase("null")) {
                            temptableData = ",to_date('" + tableData + "','YYYY-MM-DD')";
                            if (tableData.length() > 10) {
                                sfDateValue = new java.sql.Timestamp(sdf.parse(tableData).getTime());
//                            temptableData = ",to_date('" + tableData.substring(0, 10) + "','yyyy-mm-dd')";
                                temptableData = ",to_timestamp('" + sfDateValue + "','YYYY-MM-DD HH24:MI:SS.ff')";
                            }

                        }
//                        logger.log(OdiSfdcLogger.FINEST, "+++++++++TIMESTAMP data : " + temptableData);
                    }
                }
                tempColumnData += temptableData;
                traverseCounter++;
            }
            tempColumnData = tempColumnData.replaceFirst(",", "");
//            logger.log(OdiSfdcLogger.FINEST, "+++++++++column data : " + tempColumnData);
            logger.log(OdiSfdcLogger.FINEST, "+++++++++end of prepareInsertDataType()++++++++++++");
        } catch (Exception e) {
            logger.log(OdiSfdcLogger.ERROR, "prepareInsertDataType Error ");
            exLogger.logAndThrowError(e);
        }
        return tempColumnData;
    }

    public void prepareInsertString() {
        typeTable = new Hashtable();
        try {
            logger.log(OdiSfdcLogger.ERROR, "Preparing Oracle Insert statement template ...");
//            insertSQLQuery = new StringBuffer("INSERT INTO " + stagingSchemaName + "." + SFSOAPConstants.DOUBLE_QUOTE + tableName + SFSOAPConstants.DOUBLE_QUOTE + "(" + ora_tableColumnHeader + ") VALUES(");
            insertSQLQuery = new StringBuffer("INSERT INTO " + stagingSchemaName + "." + SFSOAPConstants.DOUBLE_QUOTE + tableName + SFSOAPConstants.DOUBLE_QUOTE + "(" + ora_tableColumnHeader + ") VALUES(");
            String[] columnNameCollection = ora_tableColumnHeader.split(",");
            int counter = 1;
            for (String columnName : columnNameCollection) {
                if (columnName_Type.containsKey(columnName.trim())) {
                    String columnType = columnName_Type.get(columnName.trim()) + "";
                    columnType = columnType.trim();
                    if (columnType.equalsIgnoreCase("NUMBER")) {
                        typeTable.put(counter, java.sql.Types.NUMERIC);
                    } else if (columnType.equalsIgnoreCase("DOUBLE")) {
                        typeTable.put(counter, java.sql.Types.DOUBLE);
                    } else if (columnType.equalsIgnoreCase("FLOAT")) {
                        typeTable.put(counter, java.sql.Types.FLOAT);
                    } else if (columnType.equalsIgnoreCase("LONG")) {
                        typeTable.put(counter, java.sql.Types.BIGINT);
                    } else if (columnType.equalsIgnoreCase("DECIMAL")) {
                        typeTable.put(counter, java.sql.Types.DECIMAL);
                    } else if (columnType.equalsIgnoreCase("INTEGER") || columnType.equalsIgnoreCase("INT")) {
                        typeTable.put(counter, java.sql.Types.INTEGER);
                    } else if (columnType.equalsIgnoreCase("TIMESTAMP")) {
                        typeTable.put(counter, java.sql.Types.TIMESTAMP);
                    } else if (columnType.equalsIgnoreCase("DATE")) {
                        typeTable.put(counter, java.sql.Types.DATE);
                    }
//                    else if (columnType.equalsIgnoreCase("CLOB")) {
//                        typeTable.put(counter, java.sql.Types.CLOB);
//                    }
                }
                counter++;
            }
            logger.log(OdiSfdcLogger.ERROR, "Oracle Insert statement template created successfully ...");
        } catch (Exception e) {
            exLogger.logAndThrowError(e);
        }
    }

    public String  (String[] dataList) {
        try {
            Hashtable ht = typeTable;
            StringBuffer sf = new StringBuffer();
            String tempData = "";
            String tableData = "";
            String tableinsertData = "";
//            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
            java.sql.Timestamp sfDateValue = new java.sql.Timestamp(new java.util.Date().getTime());
            int size = dataList.length;
            for (int i = 0; i < size; i++) {
                tableData = dataList[i];
                tableData = tableData.trim();
                tableData = tableData.replaceAll("'", "''");
                tableData = tableData.replaceAll(SFSOAPConstants.DOUBLE_QUOTE, "");

                tempData = ",'" + tableData + "'";
                if (tableData.equals("") || tableData.equalsIgnoreCase("null")) {
                    sf.append(",NULL");
                    continue;
                }
                if (!ht.containsKey((i + 1))) {
                    if (tableData.equalsIgnoreCase("false") || tableData.equalsIgnoreCase("true")) {
                        tempData = (tableData.equalsIgnoreCase("false") ? ",'F'" : ",'T'");
                    }
                    sf.append(tempData);
                    continue;
                }

                int colTypeVal = Integer.parseInt(ht.get((i + 1)).toString());
                switch (colTypeVal) {
                    case java.sql.Types.NUMERIC:
                    case java.sql.Types.BIGINT:
                    case java.sql.Types.DECIMAL:
                    case java.sql.Types.DOUBLE:
                    case java.sql.Types.FLOAT:
                    case java.sql.Types.INTEGER:
                        tableData = "," + (tableData);
//                                dataContainer = "," + new BigDecimal(dataContainer);
                        break;
                    case java.sql.Types.TIMESTAMP: {
                        if (tableData.length() <= 10) {
                            tableData += "T00:00:00.000Z";
                        }
                        sfDateValue = new java.sql.Timestamp(sdf.parse(tableData).getTime());
                        tableData = ",to_timestamp('" + sfDateValue.toString() + "','YYYY-MM-DD HH24:MI:SS.ff')";
                    }
                    ;
                    break;
                    case java.sql.Types.DATE:
                        tableData = ",to_date('" + tableData + "','YYYY-MM-DD')";
                        break;
                    default:
                        tableData = ",'" + tableData + "'";
                }
                sf.append(tableData);
            }
            sf.append(")");
            sf.replace(0, 1, "");
            sf.insert(0, insertSQLQuery.toString());
            return sf.toString();
        } catch (Exception e) {
            exLogger.logAndThrowError(e);
        }
        return null;
    }

    public void writePropertyFile() {
        try {
            logger.log(OdiSfdcLogger.FINEST, "Updating Property file ...");
            //stores the last date of transaction in the property file.
            propertCreator.updatePropetiesFile();
            logger.log(OdiSfdcLogger.FINEST, "Property file updation completed ...");
//            logger.log(OdiSfdcLogger.FINEST, "+++++++++Last Uploaded Date : " +propertCreator.getLastUploadedDate());
        } catch (Exception ex) {
            exLogger.logAndThrowError(ex);
        }
    }

    public String getIDList(String tableName) {
        try {
            logger.log(OdiSfdcLogger.FINEST, "Initiating the process to fetch ID list ...");
            logger.log(OdiSfdcLogger.FINEST, "Action : " + action);
            boolean emptyflag = false;
            ArrayList idList = null;
            if (action.equalsIgnoreCase("QUERYUPDATED")) {
                emptyflag = true;
				if (fromDate == null && toDate == null) {
                    throw new RuntimeException("Please provide the START_DATE and END_DATE ...");
                }
                logger.log(OdiSfdcLogger.FINEST, "Process initiated for Querying updated records for object : " + tableName);
                logger.log(OdiSfdcLogger.FINEST, "Start date : " + fromDate.getTime());
                logger.log(OdiSfdcLogger.FINEST, "End date : " + toDate.getTime());
                GetUpdatedResult updatedResultSet = connection.getUpdated(tableName, fromDate, toDate);
                idList = new ArrayList((Arrays.asList(updatedResultSet.getIds())));

            } else if (action.equalsIgnoreCase("QUERYDELETED")) {
                emptyflag = true;
				if (fromDate == null && toDate == null) {
                    throw new RuntimeException("Please provide the START_DATE and END_DATE ...");
                }
                logger.log(OdiSfdcLogger.FINEST, "Process initiated for Querying deleted records for object : " + tableName);
                logger.log(OdiSfdcLogger.FINEST, "Start date : " + fromDate.getTime());
                logger.log(OdiSfdcLogger.FINEST, "End date : " + toDate.getTime());
                GetDeletedResult deletedResultSet = connection.getDeleted(tableName, fromDate, toDate);
                DeletedRecord[] re = deletedResultSet.getDeletedRecords();
                idList = new ArrayList();
                for (DeletedRecord dr : re) {
                    idList.add(dr.getId());
                }
            }
            if ((emptyflag && idList.isEmpty())) {
                logger.log(OdiSfdcLogger.FINEST, "No IDs found in " + tableName + " for action:" + action + " ...");
				idList.add("");
                //throw (new RuntimeException("No IDs found in " + tableName + " for action:" + action + " ..."));
            }
            if (emptyflag) {
                logger.log(OdiSfdcLogger.FINEST, "No of IDs fetched : " + idList.size());
                String inList = (idList.toString());
				inList = inList.replaceAll(" ", "");
                inList = inList.replaceAll(SFSOAPConstants.COMMMA, SFSOAPConstants.SINGLE_QUOTE + SFSOAPConstants.COMMMA + SFSOAPConstants.SINGLE_QUOTE);
                inList = inList.replaceAll(SFSOAPConstants.START_3RD_BRACKET, "");
                inList = inList.replaceAll(SFSOAPConstants.END_3RD_BRACKET, "");
                inList = SFSOAPConstants.SINGLE_QUOTE + inList + SFSOAPConstants.SINGLE_QUOTE;
                return inList;
            }
			
        } catch (Exception ex) {
            logger.log(OdiSfdcLogger.FINEST, "Exception occured in fetching ID list ...");
            exLogger.logAndThrowError(ex);
        }
        return null;
    }
	
	public void performAction(String action) {
        try {
            logger.log(OdiSfdcLogger.FINEST, "=====================================================");
            logger.log(OdiSfdcLogger.FINEST, "Defined Salesforce.com Operation process is initiated ...");

            String sf_action = action.toUpperCase().trim();
            logger.log(OdiSfdcLogger.FINEST, "Salesforce.com Operation requested by the User : " + sf_action);
            if (sf_action.equalsIgnoreCase("QUERY") || sf_action.equalsIgnoreCase("QUERYALL") || sf_action.equalsIgnoreCase("QUERYUPDATED") || sf_action.equalsIgnoreCase("QUERYDELETED")) {
                logger.log(OdiSfdcLogger.FINEST, sf_action + " operation initiated ...");
                Query();
            } else {
                logger.log(OdiSfdcLogger.ERROR, "INVALID ACTION entry, please enter the valid action entries :" + action);
                exLogger.logAndThrowError(new RuntimeException("INVALID Action entry, please check the vaild entries for ACTION"));
            }
        } catch (Exception exception) {
            logger.log(OdiSfdcLogger.ERROR, "Exception occured in performing in Salesforce.com operation ...");
            exLogger.logAndThrowError(exception);
        }
    }

    /**
     * As CSV file creation is made invalid for the case SOAP extractions so, 
     * the method is deprecated but the same can be used by the flag called isDirectDataDownload..
     * @throws SQLException
     * @throws Exception 
     */
    public void insertStagingData() throws SQLException, Exception {
        try {
            logger.log(OdiSfdcLogger.FINEST, "+++++++++Start of insertStagingData()++++++++++++");
            oracleConnection = resourceConManager.getOracleConnection();
            //used to prepare the datatype list
            prepareInsertString();
            insertStatement = oracleConnection.createStatement();

            logger.log(OdiSfdcLogger.FINEST, "Opening CSV File from : " + CSVFileLocation);
            OdiCSVReader csvDataAdapter = new OdiCSVReader(CSVFileLocation, getCharacterSet());
            String columnNames = ora_tableColumnHeader;
            csvDataAdapter.readNext();
            int csvReadOffset = INITIAL_BATCHSIZE;
            int csvReadInitial = 0;

            ArrayList csvRecordSet = new ArrayList();
            String[] arrVal = null;
            boolean loopStatus = true;
            csvRecordSize = 0;
            int batchCount = 0;
            if (numberOFrowsExtracted != 0) {
                int tempBatch = (numberOFrowsExtracted / INITIAL_BATCHSIZE);
                logger.log(OdiSfdcLogger.FINEST, "Number of chunk batches likely to execute : " + (tempBatch == 0 ? 1 : tempBatch));
            }
            java.util.Date d = null;
            while (loopStatus) {
                batchCount++;
                csvRecordSet.clear();
                csvReadInitial = 0;
                d = new Date();
                logger.log(OdiSfdcLogger.FINEST, "=============================================================");
                logger.log(OdiSfdcLogger.FINEST, "Batch No. " + batchCount + " has started, ");
                while ((csvReadInitial < csvReadOffset) && (loopStatus = (arrVal = csvDataAdapter.readNext()) != null)) {
                    csvRecordSet.add(arrVal);
                    csvReadInitial++;
                }
//                ArrayList al = (ArrayList) csvDataAdapter.readAll();
//                csvRecordSet.addAll(al);
                logger.log(OdiSfdcLogger.FINEST, "Time taken to read CSV File : " + ((new Date().getTime() - d.getTime())));

                csvRecordSize = csvRecordSet.size();
                logger.log(OdiSfdcLogger.FINEST, "CSV Record Set Size : " + csvRecordSize);

                d = new Date();
                int offSet = prepareSQLInsertBatchStatement(csvRecordSet, 0, insertStatement);
                logger.log(OdiSfdcLogger.FINEST, "Batch Creation Time : " + ((new Date().getTime() - d.getTime())));
                logger.log(OdiSfdcLogger.FINEST, "Batch Size : " + offSet);

                d = new Date();
                logger.log(OdiSfdcLogger.FINEST, "Batch submitted to Oracle for execution ...");
                insertStatement.executeBatch();
                logger.log(OdiSfdcLogger.FINEST, "Batch executed successfully ...");
                oracleConnection.commit();
                logger.log(OdiSfdcLogger.FINEST, "Batch Processed Time : " + ((new Date().getTime() - d.getTime())));
                totalRowInserted = totalRowProcessed;
                logger.log(OdiSfdcLogger.FINEST, "Batch No. " + batchCount + " has executed successfully!");
                logger.log(OdiSfdcLogger.FINEST, "");
            }
            totalRowRejected = csvRecordSize - totalRowProcessed;
            logger.log(OdiSfdcLogger.FINEST, "+++++++++Total Row Processed : " + totalRowProcessed);
            logger.log(OdiSfdcLogger.FINEST, "+++++++++Total Inserted Rows : " + totalRowInserted);
            logger.log(OdiSfdcLogger.FINEST, "+++++++++Total Rejected Row : " + totalRowRejected);
            logger.log(OdiSfdcLogger.FINEST, "+++++++++end of insertStagingData()++++++++++++");
            insertStatement.close();
            oracleConnection.close();
            csvDataAdapter.close();
            if ((maxAllowedErrors != 0) && (totalRowRejected >= maxAllowedErrors)) {
                throw new RuntimeException("Number of error exceeds limit of the allowed errors ...");
            }
            /*if ((totalRowRejected == totalRowProcessed)) {
                throw new RuntimeException("No records were uploaded ...");
            }*/
        } catch (java.sql.BatchUpdateException bue) {
            totalRowRejected = Math.abs(totalRowInserted - totalRowProcessed);
            logger.log(OdiSfdcLogger.FINEST, "+++++++++Total Row Processed : " + totalRowProcessed);
            logger.log(OdiSfdcLogger.FINEST, "+++++++++Total Inserted Rows : " + totalRowInserted);
            logger.log(OdiSfdcLogger.FINEST, "+++++++++Total Rejected Row : " + csvRecordSize);
            logger.log(OdiSfdcLogger.ERROR, "Batch Update Error: " + bue.getMessage());
            exLogger.logAndThrowError(bue);
        } catch (SQLException se) {
            logger.log(OdiSfdcLogger.ERROR, "insertStagingData() Error ");
            exLogger.logAndThrowError(se);
        } catch (Exception se) {
            logger.log(OdiSfdcLogger.ERROR, "insertStagingData Error ");
            exLogger.logAndThrowError(se);
        } catch (Error e) {
            logger.log(OdiSfdcLogger.ERROR, "insertStagingData Error: " + e.getMessage());
            throw new RuntimeException("Data Import Error: " + e.getMessage());
        } finally {
            insertStatement = null;
            oracleConnection = null;
        }
    }

    /**
     * 
     * @throws SQLException
     * @throws ParseException
     * @throws Exception 
     */
    public void processSObject_and_insertRecords() throws SQLException, ParseException, Exception {
        try {
            ArrayList columnHeader = sfHeaderList;
            ArrayList sObjectRecorSet = completeSfcdRecordSet;

            prepareInsertString();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
            String dataContainer = "";
            java.sql.Timestamp sfDateValue = null;
            String parsedColumnName = "";
            SObject sfRecord = null;
            int columnCount = (columnHeader.size());
            int recordSize = (sObjectRecorSet.size());
            logger.log(OdiSfdcLogger.FINEST, "No. of Records to be uploaded : " + recordSize);
            StringBuilder buffer = new StringBuilder();

            oracleConnection = resourceConManager.getOracleConnection();
            oracleConnection.setAutoCommit(true);
            insertStatement = oracleConnection.createStatement();


            logger.log(OdiSfdcLogger.FINEST, "Parsing Salesforce.com data for Oracle ...");
            for (int i = 0; i < recordSize; i++) {
//            for (int i = 0; i < 1; i++) {
                buffer.delete(0, buffer.length());
                sfRecord = (SObject) sObjectRecorSet.get(i);
                for (int x = 0; x < columnCount; x++) {
                    parsedColumnName = columnHeader.get(x).toString().trim();
//                    parsedColumnName = parsedColumnName.replaceAll(SFSOAPConstants.SINGLE_QUOTE, (SFSOAPConstants.DOUBLE_SINGLE_QUOTE));
//                    parsedColumnName = parsedColumnName.trim();
                    dataContainer = (sfRecord.getField(parsedColumnName) + "").trim();

                    if (dataContainer == null || dataContainer.equalsIgnoreCase("null")) {
                        buffer.append(",NULL");
                        continue;
                    }

                    dataContainer = dataContainer.replaceAll(SFSOAPConstants.SINGLE_QUOTE, (SFSOAPConstants.DOUBLE_SINGLE_QUOTE));
                    dataContainer = dataContainer.trim();

                    if (dataContainer.equalsIgnoreCase("false") || dataContainer.equalsIgnoreCase("true")) {
                        if (x > 10) {
                            dataContainer = (dataContainer.equalsIgnoreCase("false") ? "F'" : "T");
                        } else {
                            dataContainer = (dataContainer.equalsIgnoreCase("false") ? "F" : "T");
                        }
                    }

                    if (!typeTable.containsKey(x + 1)) {
                        dataContainer = ",'" + dataContainer + "'";
                    } else {
                        int colTypeVal = Integer.parseInt(typeTable.get(x + 1).toString());
                        switch (colTypeVal) {
                            case java.sql.Types.NUMERIC:
                            case java.sql.Types.BIGINT:
                            case java.sql.Types.DECIMAL:
                            case java.sql.Types.DOUBLE:
                            case java.sql.Types.FLOAT:
                            case java.sql.Types.INTEGER:
                                dataContainer = "," + (dataContainer);
//                                dataContainer = "," + new BigDecimal(dataContainer);
                                break;
                            case java.sql.Types.TIMESTAMP: {
                                if (dataContainer.length() <= 10) {
                                    dataContainer += "T00:00:00.000Z";
                                }
                                sfDateValue = new java.sql.Timestamp(sdf.parse(dataContainer).getTime());
                                dataContainer = ",to_timestamp('" + sfDateValue.toString() + "','YYYY-MM-DD HH24:MI:SS.ff')";
                            }
                            ;
                            break;
                            case java.sql.Types.DATE:
                                dataContainer = ",to_date('" + dataContainer + "','YYYY-MM-DD')";
                                break;
                            default:
                                dataContainer = ",'" + dataContainer + "'";
                        }

                    }
                    buffer.append(dataContainer);
//                    logger.log(OdiSfdcLogger.FINEST, buffer.toString());
                }
                buffer.append(")");
                buffer.replace(0, 1, "");
                buffer.insert(0, insertSQLQuery.toString());
                sqlInsertList.add(buffer.toString());
                totalRowProcessed++;
            }

            String batchString = "";
            int oracleBatchSize = 0;
            int dataIndex = 0;
            boolean bool = true;
            logger.log(OdiSfdcLogger.FINEST, "Salesforce.com data parsing for Oracle done successfully ...");
            logger.log(OdiSfdcLogger.FINEST, "Submitting Oracle query for execution ...");
            logger.log(OdiSfdcLogger.FINEST, "Oracle query summited successfully for execution ...");
            while (bool) {
                oracleBatchSize = (sqlInsertList.size() > INITIAL_BATCHSIZE) ? INITIAL_BATCHSIZE : sqlInsertList.size();
                logger.log(OdiSfdcLogger.FINEST, "Oracle batch Size : " + oracleBatchSize);
                for (; dataIndex < oracleBatchSize; dataIndex++) {
//                for (; dataIndex < 1; dataIndex++) {
                    batchString = String.valueOf(sqlInsertList.get(dataIndex));
                    insertStatement.addBatch(batchString);
//                    logger.log(OdiSfdcLogger.FINEST, batchString);
                }
//                System.out.println("****************************************************");
                try {
                    insertStatement.executeBatch();
                    for (int x = 0; x < dataIndex; x++) {
                        sqlInsertList.remove(0);
                    }
                    dataIndex = 0;
                    insertStatement.clearBatch();
                    insertStatement.clearWarnings();
                    if (sqlInsertList.size() == 0) {
                        bool = false;
                    }
                } catch (java.sql.BatchUpdateException bue) {
                    totalRowRejected++;

                    dataIndex = bue.getUpdateCounts().length;
                    {
                        String badRecords = sqlInsertList.get((dataIndex)).toString();
                        badRecords = badRecords.replace(insertSQLQuery.toString(), "");
                        badRecords = badRecords.replace("to_timestamp('", "");
                        badRecords = badRecords.replace(",'YYYY-MM-DD HH24:MI:SS.ff')", "");
                        badRecords = badRecords.replace(",'YYYY-MM-DD')", "");
                        badRecords = badRecords.replaceAll(SFSOAPConstants.START_BRACKET + "'", SFSOAPConstants.DOUBLE_QUOTE);
                        badRecords = badRecords.replaceAll("'" + SFSOAPConstants.START_BRACKET, SFSOAPConstants.DOUBLE_QUOTE);
                        badRecords = badRecords.replaceAll("','", SFSOAPConstants.DOUBLE_QUOTE + "," + SFSOAPConstants.DOUBLE_QUOTE);
                        badRecords = badRecords.replaceAll("',", SFSOAPConstants.DOUBLE_QUOTE + ",");
                        badRecords = badRecords.replaceAll(",'", "," + SFSOAPConstants.DOUBLE_QUOTE);
                        badRecords = badRecords.replaceFirst("'", SFSOAPConstants.DOUBLE_QUOTE);
                        badRecords = badRecords.substring(0, (badRecords.length() - 1));

                        badDataList.add(badRecords + "," + SFSOAPConstants.DOUBLE_QUOTE + bue.getMessage() + SFSOAPConstants.DOUBLE_QUOTE);

                    }
                    for (int x = 0; x <= dataIndex; x++) {
                        sqlInsertList.remove(0);
                    }
                    dataIndex = 0;
                    insertStatement.clearBatch();
                    insertStatement.clearWarnings();
                }
            }
            logger.log(OdiSfdcLogger.FINEST, "Oracle Queries executed " + ((totalRowRejected > 0) ? "with some errros ..." : "Successfully ..."));
            totalRowInserted = (totalRowProcessed - totalRowRejected);
            logger.log(OdiSfdcLogger.FINEST, "+++++++++Total Row Processed : " + totalRowProcessed);
            logger.log(OdiSfdcLogger.FINEST, "+++++++++Total Inserted Rows : " + totalRowInserted);
            logger.log(OdiSfdcLogger.FINEST, "+++++++++Total Rejected Row : " + totalRowRejected);
            oracleConnection.commit();
            insertStatement.close();
            oracleConnection.close();
            if (totalRowRejected > 0) {
                columnHeader.add("Error Message");
                OdiSfSOAPCSVDesigner.writeBadDataFile(CSVFileLocation, characterSet, columnHeader, badDataList, logger, sf_dataWrappingChar);
            }
            if ((maxAllowedErrors != 0) && (totalRowRejected >= maxAllowedErrors)) {
                throw new RuntimeException("Number of error exceeds limit of the allowed errors ...");
            }
           // if ((totalRowRejected == totalRowProcessed)) {
             //   throw new RuntimeException("No records were uploaded ...");
            //}
        } catch (SQLException se) {
            logger.log(OdiSfdcLogger.ERROR, "processSObject_and_insertRecords() Error ");
            exLogger.logAndThrowError(se);
        } catch (Exception se) {
            logger.log(OdiSfdcLogger.ERROR, "processSObject_and_insertRecords Error ");
//            se.printStackTrace();
            exLogger.logAndThrowError(se);
        } catch (Error e) {
            logger.log(OdiSfdcLogger.ERROR, "processSObject_and_insertRecords Error: " + e.getMessage());
            throw new RuntimeException("Data Import Error: " + e.getMessage());
        } finally {
            insertStatement.close();
            oracleConnection.close();
            insertStatement = null;
            oracleConnection = null;
        }
    }

    /**
     * Error records are not traceable by the prepared statement 
     * so the method is suppressed and can be used in future.
     * @throws SQLException
     * @throws ParseException
     * @throws Exception 
     */
    public void processSObject_and_insertRecordsEnhanced() throws SQLException, ParseException, Exception {
        try {
            ArrayList columnHeader = sfHeaderList;
            ArrayList sObjectRecorSet = completeSfcdRecordSet;
            StringBuilder badDataBuffer = new StringBuilder("Bad Data Container");

            prepareInsertString();
            SimpleDateFormat sfdcDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
            SimpleDateFormat sfdcDate = new SimpleDateFormat("yyyy-MM-dd");
            String dataContainer = "";
//            java.sql.Timestamp sfDateValue = null;
            String parsedColumnName = "";
            SObject sfRecord = null;
            int columnCount = (columnHeader.size());
            int recordSize = (sObjectRecorSet.size());
            logger.log(OdiSfdcLogger.FINEST, "No. of Records to be uploaded : " + recordSize);
            StringBuilder builder = new StringBuilder();
            for (int x = 0; x < columnCount; x++) {
                builder.append(",?");
            }
            builder.replace(0, 1, "");
            builder.append(")");
            insertSQLQuery.append(builder.toString());

            oracleConnection = resourceConManager.getOracleConnection();
       //     oracleConnection.setAutoCommit(true);
            logger.log(OdiSfdcLogger.FINEST, "Query template : " + insertSQLQuery.toString());
            PreparedStatement pinsertStatement = oracleConnection.prepareStatement(insertSQLQuery.toString());

            logger.log(OdiSfdcLogger.FINEST, "Parsing Salesforce.com data for Oracle ...");
            int dataIndex = 0;
            boolean bool = true;
            logger.log(OdiSfdcLogger.FINEST, "Salesforce.com data parsing for Oracle done successfully ...");
            logger.log(OdiSfdcLogger.FINEST, "Submitting Oracle query for execution ...");
            logger.log(OdiSfdcLogger.FINEST, "Oracle query summited successfully for execution ...");
			totalRowProcessed = recordSize;
                        
                          
            while (bool) {
            
                for (int index = 0; index < sObjectRecorSet.size(); index++) {
                  
                    sfRecord = (SObject) sObjectRecorSet.get(index);
                                                          
                    for (int x = 1; x <= columnCount; x++) {
                        parsedColumnName = columnHeader.get(x - 1).toString().trim();
                                                
                           if (parsedColumnName.contains("__r")){  //custom relationship column
                              dataContainer = (String) (sfRecord.getChild(parsedColumnName.split("__r.")[0]+"__r").getField(parsedColumnName.split("__r.")[1])+"");
                              
                           }
                           
                           else if(parsedColumnName.matches("\w+\.\w+\.\w+")) {  //relationship column in 3level-> contact.account.opportunity
                              String parent = "";
                              String child = "";
                              String field = "";
                              String regex = "(\w+)\.(\w+)\.(\w+)";     
                              Pattern pattern = Pattern.compile(regex);
                              Matcher matcher = pattern.matcher(parsedColumnName);
                              if(matcher.find()) {
                                child = matcher.group(1);
                                parent = matcher.group(2);
                                field = matcher.group(3);
                              }
                               dataContainer = (String)(sfRecord.getChild(child).getChild(parent).getField(field));
                           }
                                                     
                           else if(parsedColumnName.contains(".")) {
                             dataContainer = (String)(sfRecord.getChild(parsedColumnName.split("\.")[0]).getField(parsedColumnName.split("\.")[1]) + "").trim();                              
                            }                          
                                                  
                           else{
                               dataContainer = (sfRecord.getField(parsedColumnName)+"").trim();
                            }
                    //System.out.println("dataContainer+++++++++++++++++++"+dataContainer);                       

                        if (dataContainer == null || dataContainer.equalsIgnoreCase("null")) {
                            pinsertStatement.setNull(x, java.sql.Types.NULL);
                            continue;
                        }

//                        logger.log("Data (" + x + ") : " + dataContainer);
                        if (dataContainer.equalsIgnoreCase("false") || dataContainer.equalsIgnoreCase("true")) {
                            dataContainer = (dataContainer.equalsIgnoreCase("false") ? "F" : "T");
                        }

                        if (!typeTable.containsKey((x))) {
                            //dataContainer = dataContainer.replaceAll(SFSOAPConstants.SINGLE_QUOTE, (SFSOAPConstants.DOUBLE_SINGLE_QUOTE));
                            pinsertStatement.setString(x, dataContainer);
                        } else {
                            int colTypeVal = Integer.parseInt(typeTable.get((x)).toString());
                            if (colTypeVal == java.sql.Types.NUMERIC) {
                                pinsertStatement.setBigDecimal(x, new BigDecimal(dataContainer));
                                continue;
                            } else if (colTypeVal == java.sql.Types.DATE) {
//                                logger.log(OdiSfdcLogger.FINEST, parsedColumnName + ": " + "Date");
                                pinsertStatement.setDate(x, (new java.sql.Date(sfdcDate.parse(dataContainer).getTime())));
                                continue;
                            } else if (colTypeVal == java.sql.Types.TIMESTAMP) {
                                if (dataContainer.length() <= 10) {
                                    dataContainer += "T00:00:00.000Z";
                                }
//                                logger.log(OdiSfdcLogger.FINEST, parsedColumnName + ": " + "Timestamp");
                                pinsertStatement.setTimestamp(x, (new java.sql.Timestamp(sfdcDateTime.parse(dataContainer).getTime())));
                                continue;
                            } else {
                                logger.log(OdiSfdcLogger.FINEST, "Inside setObject ");
                                pinsertStatement.setObject(x, dataContainer, colTypeVal);                                
                            }
                        }
                    }
                    pinsertStatement.addBatch();
                }
                try {
                    pinsertStatement.executeBatch();
//                    logger.log(OdiSfdcLogger.FINEST, "Updated Count : " + String.valueOf(pinsertStatement.getUpdateCount()));

                    bool = false;
                } catch (java.sql.BatchUpdateException bue) {
                    totalRowRejected++;
                    dataIndex = (pinsertStatement.getUpdateCount());
					logger.log(OdiSfdcLogger.FINEST, "Number of updates : " + dataIndex);  
                    sfRecord = (SObject) sObjectRecorSet.get(dataIndex);      
                    badDataBuffer.delete(0, badDataBuffer.length());
                    for (int x = 1; x <= columnCount; x++) {
                        parsedColumnName = columnHeader.get(x - 1).toString().trim();
                        badDataBuffer.append(sf_dataWrappingChar).append(SFSOAPConstants.COMMMA).append(sf_dataWrappingChar);
//                        badDataBuffer.append((sfRecord.getField(parsedColumnName) + "").trim().replace(SFSOAPConstants.DOUBLE_QUOTE, SFSOAPConstants.DOUBLE_QUOTE + SFSOAPConstants.DOUBLE_QUOTE));
                        badDataBuffer.append((sfRecord.getField(parsedColumnName) + "").trim());

                    }
                    badDataBuffer.append(sf_dataWrappingChar).append(SFSOAPConstants.COMMMA).append(sf_dataWrappingChar);
//                    badDataBuffer.append(bue.getMessage().replaceAll(SFSOAPConstants.DOUBLE_QUOTE, SFSOAPConstants.DOUBLE_QUOTE + SFSOAPConstants.DOUBLE_QUOTE));
                    badDataBuffer.append(bue.getMessage());
                    badDataBuffer.append(sf_dataWrappingChar);
                    badDataBuffer.replace(0, 2, "");
                    badDataList.add(badDataBuffer.toString());
                    if (dataIndex >= recordSize) {
                        bool = false;
                    }
					if ((maxAllowedErrors != 0) && (totalRowRejected >= maxAllowedErrors)) {
						bool = false;
					}
					if ((totalRowRejected == totalRowProcessed)) {
						bool = false;
					}
                    pinsertStatement.clearBatch();
                    pinsertStatement.clearWarnings();
					
					for (int remIndex = -1; remIndex < (dataIndex); remIndex++) {
                        sObjectRecorSet.remove(0);
                    }
					sObjectRecorSet.trimToSize();
                    logger.log(OdiSfdcLogger.FINEST, "New Batch Size: " + sObjectRecorSet.size());
                }
            }
            logger.log(OdiSfdcLogger.FINEST, "Oracle Queries executed " + ((totalRowRejected > 0) ? "with some errros ..." : "Successfully ..."));
            totalRowInserted = (totalRowProcessed - totalRowRejected);
            logger.log(OdiSfdcLogger.FINEST, "+++++++++Total Row Processed : " + totalRowProcessed);
            logger.log(OdiSfdcLogger.FINEST, "+++++++++Total Inserted Rows : " + totalRowInserted);
            logger.log(OdiSfdcLogger.FINEST, "+++++++++Total Rejected Row : " + totalRowRejected);
            oracleConnection.commit();
            pinsertStatement.close();
            oracleConnection.close();
            if (totalRowRejected > 0) {
                columnHeader.add("Error Message");
                OdiSfSOAPCSVDesigner.writeBadDataFile(CSVFileLocation, characterSet, columnHeader, badDataList, logger, sf_dataWrappingChar);
            }
			if ((maxAllowedErrors != 0) && (totalRowRejected >= maxAllowedErrors)) {
                throw new RuntimeException("Number of error exceeds limit of the allowed errors ...");
            }
          //  if ((totalRowRejected == totalRowProcessed)) {
            //    throw new RuntimeException("No records were uploaded ...");
            //}
        } catch (SQLException se) {
            logger.log(OdiSfdcLogger.ERROR, "processSObject_and_insertRecords() Error ");
            exLogger.logAndThrowError(se);
        } catch (Exception se) {
            logger.log(OdiSfdcLogger.ERROR, "processSObject_and_insertRecords Error ");
            //se.printStackTrace();
            exLogger.logAndThrowError(se);
        } catch (Error e) {
            logger.log(OdiSfdcLogger.ERROR, "processSObject_and_insertRecords Error: " + e.getMessage());
            throw new RuntimeException("Data Import Error: " + e.getMessage());
        } finally {
//            insertStatement.close();
            oracleConnection.close();
//            insertStatement = null;
            oracleConnection = null;
        }
    }

    public void performStagingExtraction() throws SQLException, Exception {
        try {
            if (isDirectDataDownload()) {
//                processSObject_and_insertRecords();
                processSObject_and_insertRecordsEnhanced();
            } else {
                insertStagingData();
            }
        } catch (Exception e) {
            logger.log(OdiSfdcLogger.ERROR, "performStagingExtraction Error: " + e.getMessage());
            throw new RuntimeException("Data Extract Error: " + e);
        }
    }
}
//End of OdiSfSOAPCall class

//Start of OdiCommonUtil class
/**
 *
 * @author Anup.Singh
 */
import java.io.IOException;

public class OdiCommonUtil {

    OdiSfdcLogger logger;
	private SimpleDateFormat sdf = new SimpleDateFormat(
			"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");


    public OdiCommonUtil(OdiSfdcLogger logger) {
        this.logger = logger;
    }

 public String retainLastRunQuery(String parsedQuery, ODISFPropertyDataCreater propertCreator) throws IOException {
      
	  String lastRunDate = propertCreator.getLastUploadedDate();
	  String odi_session_start_time = "<%=odiRef.getSession("SESS_BEG")%>";
      Date odi_date_end = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.S").parse(odi_session_start_time);
    
      String timeStamp_end = sdf.format(new Timestamp(odi_date_end.getTime()-(<%=odiRef.getOption("USER_TIMEZONE_DIFFERENCE_WITH_GMT_IN_MINUTES")%> * 60000)));
      System.out.println("ODI_DATE END::"+timeStamp_end); 
 
      
      if (parsedQuery.indexOf("where") > 0) {
       //   parsedQuery += " AND LASTMODIFIEDDATE >= " + lastRunDate +" AND LASTMODIFIEDDATE <="+ timeStamp_end;
	    parsedQuery += " AND LASTMODIFIEDDATE >= " + lastRunDate;
      } else {
         // parsedQuery += " where LASTMODIFIEDDATE >= " + lastRunDate+" AND LASTMODIFIEDDATE <="+ timeStamp_end;
		 parsedQuery += " where LASTMODIFIEDDATE >= " + lastRunDate;
      }
      logger.log(OdiSfdcLogger.FINEST, "Last run date : " + lastRunDate +"Sess_start_time: " + timeStamp_end);
      return parsedQuery;
  }
}
//End of OdiCommonUtil class
@>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SALESFORCE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3239]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 17:19:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[339b0f36-5d23-4bc0-9dd6-3618b7654b71]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1468]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[299]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-16 16:19:54.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[MC]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Drop Work Table]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3308c9ad-4d84-4bca-bbfe-3a03ae1132a9]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[3239]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[drop table <%=odiRef.getTable("L", "COLL_NAME", "W")%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[71ce9cc9-fc6b-4570-b377-8ef88debf0ee]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1452]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1011]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[04a1f8d0-5ba4-481c-83ba-2626d6643a5d]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1452]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1025]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[850ba1c7-efe0-4a15-896d-6fb1570c7a30]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1452]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1014]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[0dda23af-497e-4a90-bdea-0ff5795c309c]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1452]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1030]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[4cffc254-dcf1-4d58-8ca2-f8fa66bdb6e5]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1452]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1031]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[2213f663-368c-4778-b48b-b16e5ce3e2d4]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1452]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1022]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[5265c44c-f219-4a40-af12-30d2fd459478]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1452]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1009]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e5b59c6d-aba2-492c-ade1-2cf4cb8e41ff]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1452]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1015]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[bcf05738-1c54-43a9-82e2-6f70c18a2977]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1454]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1030]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[6b744dc1-f0ff-4a6f-8437-c37fe3f01803]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1454]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1015]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d41a35b5-b42a-4afa-805b-04cbea91f311]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1454]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1022]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[6a3731e7-4d63-4642-9393-311d642f34a2]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1454]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1031]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[936456f0-f94c-4ac5-bafe-4457e6ad44af]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1454]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1011]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[77699987-13a9-4900-ac6f-664f22f88c9a]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1454]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1014]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[1ba9ba65-c3f5-40a0-a1c1-18a518a13f4c]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1454]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1025]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d9744801-d713-445b-85f5-5ef26ff03616]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1454]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1009]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ff63a1c8-c5fb-481e-8974-7bf55799b878]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1455]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1009]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[a8f025dc-8efe-4321-a878-59c0d391cd99]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1455]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1025]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[2d7424c7-bea2-4512-bb29-5b81c7ed21e9]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1455]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1014]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ee454a2b-55e5-45c6-8de1-b2a33f9a93e9]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1455]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1015]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[4b1de89e-7fbb-4df9-9bd3-c774b48432c6]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1455]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1011]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[58c4ec44-ae35-43ec-b68f-96aa5e977a8e]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1455]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1022]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[1249aff8-3a2a-4a74-8a16-759981fa186e]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1455]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1030]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d0a1d22c-9abc-44dc-a929-1edc6db03d35]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1455]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1031]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c2a87f47-24b3-43ad-a44b-d29d1907f13b]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1456]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1031]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ae839300-3298-4336-90f0-139d4151ca9f]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1456]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1009]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e6e79eee-25eb-42b7-b879-89ab13e1e65c]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1456]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1025]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[894e4a10-7d7e-42bf-963f-da9bc38f7db7]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1456]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1014]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d2d11db4-4399-4cdf-b811-dc25e98055b5]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1456]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1015]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ec454e4b-75de-4af6-b1ad-e0b6f714341a]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1456]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1011]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c7749980-5c17-479d-adf9-62ca8fac4cb5]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1456]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1022]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[235b11ab-0a13-42c9-8bd0-82db47dfb053]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1456]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1030]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[a271cd0c-e868-428a-9536-04e190f116d8]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1458]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1025]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[7eb15626-22d9-44c9-b4e6-692b5fa16978]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1458]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1030]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[25a3f0dc-7a08-4a89-a53c-8696e5f47f8a]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1458]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1022]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[113ede22-45b8-457b-8730-38723c98c019]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1458]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1014]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[8d9aac92-caee-4a6f-90f6-607f2095d9c0]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1458]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1015]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[922e9ec9-028c-4b7e-80d4-074e126622e5]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1458]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1031]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ad5a5291-4356-4452-9108-e6a2f3321b8a]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1458]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1009]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[f59970aa-ae0d-4fcb-9602-13f5d9bcf318]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1458]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1011]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[6d325aff-4ce3-4aa1-8848-2b9657084b50]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1459]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1025]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[fb7669a4-bde0-473d-a556-04eef16a52a1]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1459]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1030]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[37f2f40a-9e5f-4dd7-ba24-83c3e8ec5ab7]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1459]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1022]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[39313144-39ff-473e-9a51-0f9ecf3b8466]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1459]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1014]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d913cb84-f91e-42c3-996f-5b934e41fbda]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1459]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1015]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[292356f8-e5e1-4ab7-909a-e205ba5da791]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1459]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1009]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[f9d5534c-2222-4e8e-87a2-d67f4a13d5a3]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1459]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1031]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[a02d4fb6-5737-4973-9471-53a25ac5c7ae]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1459]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1011]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ce7b0a77-602d-4c5a-939a-3e5a616a6375]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1461]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1031]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e45c1e6e-6e95-405e-81ab-46df2c3b7a3e]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1462]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1009]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[3b27594f-4a4a-4824-8eac-4a34f05530c7]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1462]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1022]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[59d6406c-86ec-41fb-88e6-4184cebebecb]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1462]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1025]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c0356a4a-8ff0-41b7-88c3-153012f0287b]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1462]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1030]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[b8d71410-9266-4953-a873-28f93a0cfc28]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1462]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1031]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[a40741d2-b30f-4532-9d81-492d8e4fe66d]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1462]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1015]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9cc946c8-ff85-4513-a727-ff325d297dab]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1462]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1011]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[98ecd0a2-46f7-471b-b8f8-2ceb3bea1b02]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1462]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1014]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[fe94f965-2e33-42a4-b669-cfd48b790aaf]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1464]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1030]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9ba46cf2-4c65-45fc-94af-90252f50d299]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1466]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1022]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ea0cbe44-aa42-413c-9375-a62982c0715a]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1466]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1011]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c05e1d45-50f3-40c6-b5e7-f016bdb720a1]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1466]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1031]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[0c522ea5-9a63-4f0c-92ab-45fcd2809443]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1466]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1015]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d181ca12-5a48-4df2-a0a8-b980c6547bd7]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1466]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1014]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[3ce81f06-fbd0-459c-9bf8-bb2dd4f2df4f]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1466]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1025]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c4d69d5f-8423-450b-b836-890b386c48ae]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1466]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1009]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e02cc431-7f8b-4dc0-86b7-97c5beac5742]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1466]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1030]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[4cce5915-5a5d-49e3-8f03-d25df7b17147]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1467]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1025]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ebccb3c4-af69-49ab-b19e-d319b2c6f72f]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1467]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1030]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[440b88b3-2ea0-4512-b714-84502216ca0d]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1467]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1022]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[473ef726-51ec-4b2f-aa26-805256ef7810]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1467]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1014]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[3a64f7d9-19fb-404f-88e5-72d4dcd43abd]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1467]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1015]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[8da3e4ac-cf56-44d8-9575-f9fb814f1da9]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1467]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1009]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[3ea1ad67-7bda-4963-bd45-b6f66bb07a60]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1467]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1031]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[12f9cec3-d723-4cc8-a29a-b1dee912d0a2]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1467]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1011]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[7f3fb6dd-3793-4d66-af0e-fbdfbded9adb]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1468]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1030]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3194]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[5147265f-d7b9-420c-8d1e-dab8dd283e7b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.299]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[20fe6e9b-c7ad-415b-bafd-897be44f8e4f]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3195]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[2b7bff65-1a68-4365-af77-9684952b3422]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3196]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[d0619c4a-6a9d-4689-990a-68f1b971ba07]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.111]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3197]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c4b49481-2e22-497d-afde-aa71daa5d00b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3198]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[05c913c9-670a-4488-ba97-d07445dbb797]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3199]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[6eb172ed-5a45-4430-91b6-476dcf4b7957]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3200]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a59c4b08-e2a5-4f07-8f21-f0661c0ec5de]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3201]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8e7e4368-3aac-43ec-a291-ce6d353662e2]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3202]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[119411f8-8b3f-4dcf-8b32-590f8df07841]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3203]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[406b6c68-b71e-41cf-beb7-e8859afe7e82]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3204]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ea3f326f-3933-4261-a475-f8e359781313]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3205]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1a4e9ce4-7929-4c49-89ee-e11babeca170]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3206]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a1c25e14-7fa9-410f-b547-825496da5766]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3207]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1858c82e-910a-49ca-816a-c26256c4128b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3208]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ba82ec63-51e2-451a-9d64-9bf0f5298833]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3209]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[5319e69e-70a8-4d19-b46a-673d2bb3a397]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3210]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[cb1690f1-fe27-48ac-84f1-ec8df7061405]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3211]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e15261fc-3696-4a22-99a4-0cc306eb884b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3212]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[735877ca-5953-4eeb-b4f9-9457dcd2a94b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3213]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c943921e-ca43-48f7-becc-af447a752939]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3214]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[63b22189-2f80-4c45-988b-2f0834d02c72]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3215]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[61cea6b8-795a-40bf-a16a-39f10b7c5704]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3216]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[6f80581b-5cfc-46d5-ad0c-00b58aef8a20]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3217]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0cb7b3bf-dce7-432f-a1b8-340d079a6822]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3218]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[5926f7c9-e71b-41b6-9cb8-a2c36e9f1a8b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3219]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8c9c0555-33e7-447b-8a4b-a2e965d3a053]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3220]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[7405736e-e9d8-4c06-88e4-99a5db4d5d4e]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3221]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[740814e0-4f0a-47d5-b8a7-3fde09d24d30]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3222]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f5dfdf1a-438e-4406-aca8-aba42117ea83]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3223]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[4edb1dca-ea8f-47e9-ad09-16d133dfc113]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3224]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[182e91f9-3e84-4275-9c9b-84bc3a5d2ddf]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3225]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[d9e5f353-7781-48aa-b179-d3fbbb67756d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.103]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3226]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[03ce3ed9-2dac-44d0-9aa8-3b081a1143fc]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3227]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e197ddc9-aa02-4295-94f9-467309be0d7d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3228]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[652fd6f4-10f5-49f5-aab9-71d696db2f08]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.102]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3229]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8bc58ba8-6f0f-44c1-9063-fc9521b0d242]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3230]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b93583fa-2878-4b63-8065-6ccbd45be8c4]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3231]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[67079799-5352-4116-b849-8d05d0bf4f3d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3232]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[169a6f8f-1300-4e3e-aa12-50da816e2947]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3233]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[60236389-3744-4d41-8e76-bd7811792865]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3234]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[434fb195-19ee-4a93-885c-3953e794dcfe]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3235]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c7612723-7fe4-44f7-82a0-20d0a8081975]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3236]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[3745d435-8b92-4770-8750-310c8e98f6db]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3237]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[4ce0eaef-cf8d-4a8c-ab8a-0235c6aea27e]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3238]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f1009047-8cfc-48e0-b48d-51f354968a50]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.3239]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[3308c9ad-4d84-4bca-bbfe-3a03ae1132a9]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1011]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[88c320fb-c1ab-4076-9b6c-7c7c81642e8a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.COMPRESSION]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.11]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.1452]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c05e2bfb-44ae-4dc8-b95a-54c86ebccbce]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.Create Work Table]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.17]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1025]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[7520aefa-1de9-4051-bb99-b6ce109ef1c4]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.PROCESS_ONLY_CSV]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.16]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1014]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[fb56744c-cbf4-4527-b34d-27ce1c457902]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.USE_SALESFORCE_AS_SOURCE]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.24]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1030]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[06f1ea63-5b89-4308-8289-1637aaa8e895]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.DELETE_TEMPORARY_OBJECTS]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.24]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1031]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[bdfce617-ffc1-41e8-a2a1-574ae30aebdc]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.DIRECT_DATA_LOAD]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.16]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1022]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[cd2e2034-c45b-46f8-bbae-ab6dd26b51ff]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.USE_TRACE_LOG]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.13]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1009]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[54f706b5-f73c-4bdf-9a7c-51f636b78bdd]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.USE_BULK_API]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.12]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1015]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[57208fa0-0af7-4296-a4ca-4ecaad1ceb55]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.DELTA_EXTRACTION]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.16]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.1454]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[7c368975-ba59-42a6-b5f6-08a8f7523a4a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.Initialize Target Connection Properties]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.39]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.1455]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[9fce2a89-0893-4e9b-a594-aadf7b22da92]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.Generate SOQL Query]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.19]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.1456]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[193d5268-37eb-4b27-afaf-93df835b67a3]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.Set Parameters]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.14]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.1458]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[64f742fa-5993-4ca9-be91-5ff31cce8ae1]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.Generate Loader Script]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.22]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.1459]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[3700cd7c-0cd8-403d-a54b-35a79b3c50fa]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.Create Java Classes ]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.20]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.1461]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[bde261f8-adbe-4e6b-98c0-372d0cc8bc50]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.Load Data To Staging]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.20]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.1462]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[9933c200-6216-4848-a91c-2251a96a6b82]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.Load Data To Staging(SQLLDR)]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.28]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.1464]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[247caff1-2e70-40fc-8050-c060e87d2aff]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.Delete Tempory Files]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.20]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.1466]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[3f1a5a57-4fd3-4b4e-a639-aadd381ec295]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.Initialize]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.10]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.1467]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[7263a49e-8b92-4799-b509-75bd085bc8e4]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.Create Support Classes]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.22]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.1468]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[339b0f36-5d23-4bc0-9dd6-3618b7654b71]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Salesforce.com to Oracle.Drop Work Table]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[28.15]]></Field>
</Object>
<Object class="com.sunopsis.dwg.DwgExportSummary">
		<Field name="ExpTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="InstObjNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LinkDiagNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MorigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MtxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OrigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[46]]></Field>
	<Field name="OtherObjectsNb" type="com.sunopsis.sql.DbInt"><![CDATA[121]]></Field>
	<Field name="PlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="StepNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="TxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[46]]></Field>
	<Field name="UeOrigNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeUsedNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="VarPlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="ScenTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OdiVersion" type="java.lang.String"><![CDATA[12.2.1]]></Field>
	<Field name="OriginRepositoryID" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="RepositoryVersion" type="java.lang.String"><![CDATA[05.02.02.08]]></Field>
</Object>
</SunopsisExport>
