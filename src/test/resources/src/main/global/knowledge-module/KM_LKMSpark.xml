<?xml version="1.0" encoding="ISO-8859-1"?>
<SunopsisExport>
<Admin RepositoryVersion="05.02.02.08" OdiVersion="12.2.1" IsLegacyIdCompatible="false" IsExportWithParents="true" />
<Encryption algorithm="AES" keyLength="128" exportKeyHash="A/BvaX6RzeReDgkyCO6gQoYGFUYPUIHRUJwicKWnW0Y=" keyVect="rqlXYEmx/tJ8yZBVCxw9LA==" exportKeySalt="6dd9f8a8-9948-4c77-8667-99aa644f6faf" containsCipherText="false"/>
<SmartExportList materializeShortcut="false" >
   <Include><![CDATA[SnpTrt#134]]></Include>
</SmartExportList>
<Object class="com.sunopsis.dwg.dbobj.SnpTrt">
		<Field name="CleanupOnError" type="java.lang.String">null</Field>
	<Field name="CompType" type="java.lang.String"><![CDATA[AP]]></Field>
	<Field name="DelegateClass" type="java.lang.String"><![CDATA[LKMSpark]]></Field>
	<Field name="DelegateScript" type="java.lang.String"><![CDATA[


import oracle.odi.mapping.generation.AbstractSyntaxTree.ASTProducerMethod;
import oracle.odi.domain.mapping.generator.KMGeneratorDelegateRegistry.GeneratorDelegateClass;
@GeneratorDelegateClass(componentType="AP", descriptionKey="GeneratorDelegateClass.LKMSpark")
public class LKMSpark extends SparkKM {
    TemplateUtils getTemplateUtils() throws AdapterException, MappingException {
        return new TemplateUtils(physicalNode.getAdapter(), physicalNode.getAdapter().getLanguage("PYTHON"), physicalNode.getExecutionTechnology());
    }
    
    static Map<String, Class<? extends LKMSpark.LKMSparkStorage>> storageClasses = new HashMap<String, Class<? extends LKMSpark.LKMSparkStorage>>(6);
        
    static LKMSparkStorage getLKMSpark(String storageFn) throws MappingException {
       Class<?> lkmClass = storageClasses.get(storageFn);
       if (lkmClass == null) {
           throw new oracle.odi.domain.mapping.exception.MappingException("ComponentKM.UnKnowStorageFn",storageFn);
       }
       try {
            return (LKMSpark.LKMSparkStorage)lkmClass.newInstance();
       } catch (Exception e) {
         throw new oracle.odi.domain.mapping.exception.MappingException(e.getMessage(),e);
       }
    }

    static class FunctionParam {
        String name;
        public FunctionParam(String name) {
            this.name = name;
        }

        void decorate(String value, StringBuilder strBuilder) {
              strBuilder.append("'").append(value).append("'");
        }
    }
    
    static class FunctionMultiParam extends FunctionParam { 
        public FunctionMultiParam(String name) {
            super(name);
        }
    }

    static class FunctionOption {
        String name;
        String internalName;
        
        public FunctionOption(String name, String internalName) {
            this.name = name;
            this.internalName = internalName;
        }
    }
    
   static class Option {
       private String name;
       private String value;
       public Option(String name, String value) {
           this.name = name;
           this.value = value;
       }
       
       public String toString() {
           return name+"="+value;
       }
   }

   static class OptionParser {
       public OptionParser() {}

       public List<Option> parse(String options) { 
           char[] chars = options.trim().toCharArray();
           StringBuilder strBuilder = new StringBuilder(10);
           boolean parsingOption = false; 
           String option = null;
           List<Option> optionValues = new ArrayList<Option>();
           
           for (char ch : chars) {
               switch (ch) {
                   case '-':
                       if (strBuilder.length() == 0 || strBuilder.charAt(strBuilder.length()-1) == ' ') {
                           if (option != null) {
                               String value = strBuilder.toString().trim();
                               
                               optionValues.add(new Option(option, value.length() == 0 ? null : value));
                               
                               strBuilder.delete(0, strBuilder.length());
                               option = null;
                           }
                           parsingOption = true;    
                       }
                       else {
                           strBuilder.append(ch);
                       }
                       break;
                   case ' ':
                       if (parsingOption) {
                           option = strBuilder.toString();
                           strBuilder.delete(0, strBuilder.length());
                           parsingOption = false;
                       }
                       strBuilder.append(ch);
                       break;
                   case '"':    
                       break;
                   default : 
                       strBuilder.append(ch);
                       break;
               }
           }
           if (option != null) {
               String value = strBuilder.toString().trim();
               optionValues.add(new Option(option, value.length() == 0 ? null : value));
           }
           else if(!strBuilder.toString().isEmpty()) {
               optionValues.add(new Option(strBuilder.toString().trim(), null));
           }
           return optionValues; 
       }

   }
    
   //class LKMSparkStorage Start
   static class LKMSparkStorage {
       public static final String OPTION_SPARK_SCHEMA = "Spark Schema";
       public static final String PARAM_SPARK_SCHEMA = "schema";
       public static final String PARAM_TABLE_NAME = "tableName";
       public static final String PARAM_INPUT_FORMAT = "InputFormatClass";
       public static final String PARAM_OUTPUT_FORMAT = "OutputFormatClass";            
       public static final String PARAM_KEY_CLASS = "KeyClass";
       public static final String PARAM_VALUE_CLASS = "ValueClass";
       public static final String PARAM_KEY_CONVERTER = "KeyConverter";
       public static final String PARAM_VALUE_CONVERTER = "ValueConverter";
       public static final String PARAM_CONF_NAME = "Job Configuration";
       public static final String PARAM_TEST_DATA_CODE = "Input Test Data";

       SparkCommand storageCommand;
       MapPhysicalNode physicalNode;
       MapPhysicalNode dataStoreNode;
       
       void setPhysicalNodes(MapPhysicalNode physicalNode, MapPhysicalNode dataStoreNode) {
           this.physicalNode = physicalNode;
           this.dataStoreNode = dataStoreNode;
       }
   
       //For HDFS files, get name node url as base url.
       String getBaseUrl(  ) {
           if (dataStoreNode != null && dataStoreNode.getLogicalComponent().getBoundObject() instanceof IDataStore) {
               IDataStore ds        = (IDataStore)dataStoreNode.getLogicalComponent().getBoundObject();
               IContext context     = dataStoreNode.getPhysicalDesign().getExecutionContext();
               ILocation dsLocation = ds.getObjectLocation(context);
               String fileLSchema   = dsLocation.getLogicalSchema().getName();
               return '''<?=odiRef.getDataServerInfo("HADOOP_NAME_NODE_URI","''' + fileLSchema + '''")?>'''
               }
           }
      
       String getLoaderFunction() { return null; }
       String getStorerFunction() { return null; }
       List<FunctionParam> getLoaderFunctionParams() { return null; }
       List<FunctionOption> getLoaderFunctionOptions() { return null; }
       List<FunctionParam> getStorerFunctionParams() { return null; }
       List<FunctionOption> getStorerFunctionOptions() { return null; }
       String handleFunctionParam(FunctionParam param, String value, boolean isLoader) throws AdapterException, MappingException {  return value;}
       String handleFunctionOption(FunctionOption option, String value, boolean isLoader) throws AdapterException, MappingException { return value;}
       void addCommands(SparkCommand command) { return null;  }
       void addCommand(SparkCommand command) { return null;}
       final void addFunctionParamValue(FunctionParam funcParam, String optionValue, StringBuilder strBuilder) {
           if (optionValue != null && optionValue.size() > 0) {
               if (strBuilder.length() != 0) {
                   strBuilder.append(", ");
               }
               if (optionValue.startsWith("'") || optionValue.startsWith("{") || "None".equals(optionValue)) {
                   strBuilder.append(optionValue);
               }    
               else {
                   funcParam.decorate(optionValue, strBuilder);
               }
           }
       }
   
       String getStorageFunctionParamString(List<FunctionParam> funcParams, List<FunctionOption> funcOptions, final boolean isLoader) throws AdapterException, GenerationException, MappingException {
           StringBuilder strBuilder = new StringBuilder();
           if (funcParams != null) {
               for (final FunctionParam funcParam : funcParams) {
                   String optionValue = getOptionValue(funcParam.name);
                   if (funcParam instanceof FunctionMultiParam && optionValue != null) {
                       OptionParser parser = new OptionParser();
                       java.util.List<Option> options = parser.parse(optionValue);
                       for (Option option : options) {
                               String name = option.name;
                               String value = option.value;
                               FunctionParam multiFuncParam = new FunctionParam(name);
                               addFunctionParamValue(multiFuncParam, value, strBuilder);
                        }
                   }
                   else {
                       optionValue = handleFunctionParam(funcParam, optionValue,  isLoader);
                       addFunctionParamValue(funcParam, optionValue, strBuilder);                                                                    
                   } 
               }
           }
   
           if (funcOptions != null) {
               boolean isFirst = true; 
               for (FunctionOption funcOption : funcOptions) {
                   String optionValue = getOptionValue(funcOption.name);
                   optionValue = handleFunctionOption(funcOption,optionValue,isLoader);
                   if (optionValue != null && !optionValue.equals("false")) {
                       if (!isFirst) {
                           strBuilder.append(" ");
                       } else {
                           if (strBuilder.length() != 0) {
                               strBuilder.append(", ");
                           }
                           strBuilder.append("'");
                           isFirst = false;
                       }
                       
                       if (funcOption.internalName == null) {
                              strBuilder.append(optionValue);
                       }
                       else if (optionValue.equals("true")) {
                           strBuilder.append("-").append(funcOption.internalName)
                       }
                       else {
                           strBuilder.append("-").append(funcOption.internalName).append(" ").append(optionValue);
                       }
                   }
               }
               if (!isFirst)
                   strBuilder.append("'");
           }
           return strBuilder.toString();
       }
   
       void populateLoaderFunctionParams(SparkLoadCmd loadCmd) throws AdapterException, GenerationException, MappingException {
           String paramValue = getStorageFunctionParamString(getLoaderFunctionParams(), getLoaderFunctionOptions(), true);

           loadCmd.setLoadFuncArgs(paramValue);
           loadCmd.setLoadFunction(getLoaderFunction()); 
       }
   
       void populateStorerFunctionParams(SparkStoreCmd storeCmd) throws AdapterException, GenerationException, MappingException {
           String paramValue = getStorageFunctionParamString(getStorerFunctionParams(), getStorerFunctionOptions(), false);
           if (!paramValue.equals("")) {
               storeCmd.setStoreFuncArgs(paramValue);
           } 
           storeCmd.setStoreFunction(getStorerFunction()); 
       }
   
       static String getDataServerFlexFieldValue(MapPhysicalNode physicalNode, String flexFieldName) throws AdapterException, MappingException {
           oracle.odi.domain.model.OdiDataStore dataStore = (oracle.odi.domain.model.OdiDataStore)physicalNode.getLogicalComponent().getBoundObject();
           for (oracle.odi.domain.adapter.flexfields.IFlexFieldValue flexFieldValue : dataStore.getModel().getLogicalSchema().getPhysicalSchema(physicalNode.getContext()).getDataServer().getFlexFieldsValues()) {
               if (flexFieldValue.getName().equals(flexFieldName)){
                   Object value = flexFieldValue.getValue();
                   if (value != null && !value.length() == 0) {
                       return value.toString();
                   }
                   return null;
               }
           } 
           return null ; //throw new RuntimeException("Unknown FlexField : "+flexFieldName);
       }
               
       String getOptionValue(String optionName) throws AdapterException, GenerationException, MappingException {
           return getOptionValue(physicalNode, optionName);
       }

       static String getOptionValue(MapPhysicalNode physicalNode, String optionName) throws AdapterException, GenerationException, MappingException {
           String value = physicalNode.getKMOptionValueString(optionName);
           if (value != null && !value.equals("")) {
               return value;
           }
           return null;
       }
   
       MapPhysicalNode getNonAPParentNode(MapPhysicalNode physicalNode) { 
           if (physicalNode.getNodeType() == MapPhysicalNode.PhysicalNodeType.AP) {
               return physicalNode.getUpstreamConnectedNodes().get(0);
           } 
           return physicalNode;
       }
   
       String toSparkIdentifier(String identifier) {
           return identifier.replaceAll(":", "_");
       }
       
       List<oracle.odi.domain.mapping.expression.MapExpression> getMapExpressions(MapPhysicalNode physicalNode) throws AdapterException, MappingException {
          
           List<oracle.odi.domain.mapping.expression.MapExpression> mapExpressions = new ArrayList<oracle.odi.domain.mapping.expression.MapExpression>(3);
           
           physicalNode.getNodeAttributes().each {
              def physicalExpression = physicalNode.findPhysicalExpression(it)
              if (physicalExpression != null) {
                if (physicalExpression.getRefLogicalExpression() != null ) {
                  mapExpressions.add(physicalExpression.getRefLogicalExpression())
                }
              }
           }
           return mapExpressions; 
       }
       
       List<String> getMapExpressionAliases(MapPhysicalNode physicalNode) throws AdapterException, MappingException {

           List<String> aliases = new ArrayList<String>(3);
           
           physicalNode.getNodeAttributes().each {
              def physicalExpression = physicalNode.findPhysicalExpression(it)
              if (physicalExpression != null) {
                if (physicalExpression.getRefLogicalExpression() != null ) {
                  aliases.add(toSparkIdentifier(physicalExpression.getAlias()))
                }
              }
           }
           return aliases; 
       }                                                                          
   
       String getTransformedExpressions(MapPhysicalNode physicalNode) throws AdapterException, MappingException {
           List<MapPhysicalExpression> physicalExpressions = physicalNode.getTargetPhysicalExpressions();
           StringBuilder strBuilder = new StringBuilder();
           for (MapPhysicalExpression physicalExpression : physicalExpressions) {
               if (physicalExpression.getRefLogicalExpression() != null) {
                   if (strBuilder.length() != 0) {
                       strBuilder.append(", ");
                   }
                   String expression = getTransformedExpression(physicalExpression);
                   strBuilder.append(expression);
               }
           }
           return strBuilder.toString();
       }
   
       String getTransformedExpression(MapPhysicalExpression physicalExpression) throws AdapterException, MappingException {
           oracle.odi.domain.mapping.expression.MapExpression mapExpression = physicalExpression.getRefLogicalExpression();
           List<oracle.odi.domain.mapping.xreference.MapExpressionXRef> expressionXRefs = mapExpression.getCrossReferences();
   
           Map<MapAttribute, String> substituteMap = new HashMap<MapAttribute, String>(1);
           for (oracle.odi.domain.mapping.xreference.MapExpressionXRef expressionXRef : expressionXRefs) {
               MapAttribute refAttribute = expressionXRef.getReferencedAttribute();
               String transAttrName = toSparkIdentifier(refAttribute.getName());
               if (isConflictingColumn(physicalNode,refAttribute.getOwningComponent(),transAttrName)) {
                   transAttrName = new StringBuilder(refAttribute.getOwningComponent().getAlias()).append("::").append(transAttrName).toString();
               }
               substituteMap.put(refAttribute,transAttrName);
   
           }
           String transAttrName = mapExpression.getExpressionText(substituteMap);
           if (!mapExpression.isSimpleExpression()|| !transAttrName.equals(toSparkIdentifier(physicalExpression.getAlias()))) {
               transAttrName = new StringBuilder(transAttrName).append(" AS ").append(toSparkIdentifier(physicalExpression.getAlias())).toString();
           }
           return transAttrName;
       }
       
      List<String> getConvertedTgtDataTypes(MapPhysicalNode physicalNode,ITechnology tech) throws GenerationException{
          ArrayList<String> dataTypes = new ArrayList<String>();
          List<MapPhysicalExpression> exprs = physicalNode.getAllPhysicalExpressions();
          if (exprs!=null && exprs.size() > 0)
          for(MapPhysicalExpression expr:exprs){
            if (expr.getRefLogicalExpression() != null){
                MapAttribute outputAttr = expr.getRefLogicalExpression().getOwningAttribute();
                if (outputAttr != null){
                    // convert logical data type to physical:
                    try {
                      IDataType logicalDataType = outputAttr.getDataType();
                      Integer size = outputAttr.getSize();
                      Integer scale = outputAttr.getScale();
                      IDataType.ConvertedDataType convertedDataType = logicalDataType.getConvertedDataType(tech, size, scale);
                      if (convertedDataType != null && convertedDataType.dataType != null) {
                        // conversion is successful
                          dataTypes.add(convertedDataType.dataType.getName());
                      } else {
                        // conversion failed, use the logical data type name.
                          dataTypes.add(logicalDataType.getName());
                      }
                    } catch (Exception e) {
                      throw new GenerationException("", e);
                    }
                }
              }
          }
          return dataTypes;
      }
       
       boolean isConflictingColumn(MapPhysicalNode physicalNode,IMapComponent component,String attrName) throws AdapterException, MappingException {
           List<MapPhysicalNode> parentNodes = physicalNode.getUpstreamConnectedNodes();
           for (MapPhysicalNode parentNode : parentNodes) {
               if (parentNode.getLogicalComponent().isOfType("JOIN")) {
                   List<MapPhysicalNode> joinedNodes = parentNode.getUpstreamConnectedNodes();
                   List<String> allPhysicalColumns = new ArrayList<String>(5);
                   for (MapPhysicalNode joinedNode : joinedNodes) {
                       List<MapPhysicalColumn> physicalColumns = joinedNode.getPhysicalColumns();
                       for (MapPhysicalColumn physicalColumn : physicalColumns) {
                           String columnName = physicalColumn.getName();
                           // IMapComponent owningComponent =
                           // getNonAPParentNode(physicalColumn.getOwningNode()).getLogicalComponent();
                           if (attrName.equals(columnName)
                                   && allPhysicalColumns.contains(columnName)) {
                               return true;
                           } else {
                               allPhysicalColumns.add(columnName);
                           }
                       }
                   }
               } else {
                   return isConflictingColumn(parentNode, component,attrName);
               }
           }
           return false;
       }
   
       String getSchema() throws AdapterException, MappingException { return getSchema(false);}
       String getSchema(boolean isTarget) throws AdapterException,MappingException { return getSchema(isTarget, null);}
       String getSchema(List<String> ignoreFields) throws AdapterException, MappingException { return getSchema(false, ignoreFields);}
       String getSchema(boolean isTarget, List<String> ignoreFields) throws AdapterException,MappingException {
            StringBuilder schemaBuilder = new StringBuilder();
            if (isTarget) {
               List<MapPhysicalNode> physicalNodes = this.physicalNode.getDownstreamConnectedNodes();
                if (physicalNodes == null || physicalNodes.isEmpty()) {
                    throw new oracle.odi.domain.mapping.exception.MappingException("ComponentKM.MissingTarget");
                }
                List<MapAttribute> mapAttrs = physicalNodes.get(0).getLogicalComponent().getOutputAttributes();
                for (MapAttribute mapAttribute : mapAttrs) {
                    buildSchema(mapAttribute, mapAttribute.getDataType().getName(), schemaBuilder, ignoreFields);
                }
            } else {
                List<MapPhysicalColumn> columns = physicalNode.getPhysicalColumns();
                for (MapPhysicalColumn column : columns) {
                   buildSchema(column.getReferencedAttribute(), column.getDdlDataType(), schemaBuilder, ignoreFields);
               }
            }                                      
            return schemaBuilder.toString(); 
       }                                                                                       
   
       String getSchema(MapPhysicalNode physicalNode, List<String> ignoreFields) throws AdapterException,MappingException {   
           List<MapPhysicalColumn> columns = physicalNode.getPhysicalColumns();
           StringBuilder schemaBuilder = new StringBuilder();
           for (MapPhysicalColumn column : columns) {
               MapAttribute mapAttribute = column.getReferencedAttribute();
               buildSchema(mapAttribute, column.getDdlDataType(), schemaBuilder, ignoreFields);
           }
           return schemaBuilder.toString();
       }
       
       void buildSchema(MapAttribute mapAttribute, String  dataType, StringBuilder schemaBuilder, List<String> ignoreFields) {
           String columnName = toSparkIdentifier(mapAttribute.getName());
           if (ignoreFields == null || !ignoreFields.contains(columnName)) {
               if (schemaBuilder.length() != 0) {
                   schemaBuilder.append(", ");
               }
               schemaBuilder.append(columnName).append(":").append(dataType);
           }
       }
   }
}

    ]]></Field>
	<Field name="ExpectedAstClass" type="java.lang.String">null</Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-05-17 22:11:23.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUNOPSIS_INSTALL]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[80aa8be2-d68d-40fe-bc1e-0b0b3ee0105e]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[U]]></Field>
	<Field name="IndExcludeExUnitBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitEnd" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitMain" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapCleanup" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapEnd" type="java.lang.String">null</Field>
	<Field name="IndGenerateLoad" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndIsHidden" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndJrnMethod" type="java.lang.String">null</Field>
	<Field name="IndSuppSetBased" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IntgType" type="java.lang.String">null</Field>
	<Field name="IntVersion" type="com.sunopsis.sql.DbInt"><![CDATA[196]]></Field>
	<Field name="IsConcurrent" type="java.lang.String">null</Field>
	<Field name="IsSeeded" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IBaseCompKm" type="com.sunopsis.sql.DbInt"><![CDATA[133]]></Field>
	<Field name="IFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IProject" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScBaseTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScOrigTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[134]]></Field>
	<Field name="ITxtDelTxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtTrtTxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="KimMultiDserver" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KmDefault" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KmLang" type="java.lang.String"><![CDATA[PYTHON]]></Field>
	<Field name="KmSrcLang" type="java.lang.String">null</Field>
	<Field name="KmSrcTechno" type="java.lang.String">null</Field>
	<Field name="KmTechno" type="java.lang.String"><![CDATA[SPARK_PYTHON]]></Field>
	<Field name="KmVersion" type="java.lang.String">null</Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-11-05 19:07:41.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LkmType" type="java.lang.String"><![CDATA[N]]></Field>
	<Field name="LChecksum" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LCode" type="java.lang.String">null</Field>
	<Field name="OggJkm" type="java.lang.String">null</Field>
	<Field name="OrdFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ProcType" type="java.lang.String"><![CDATA[N]]></Field>
	<Field name="ProdAstType" type="java.lang.String">null</Field>
	<Field name="RepGuid" type="java.lang.String">null</Field>
	<Field name="RepVersion" type="java.lang.String">null</Field>
	<Field name="ScriptPath" type="java.lang.String">null</Field>
	<Field name="ScOrigTrtTag" type="java.lang.String">null</Field>
	<Field name="Subtype" type="java.lang.String"><![CDATA[*]]></Field>
	<Field name="TrtName" type="java.lang.String"><![CDATA[LKMSpark]]></Field>
	<Field name="TrtType" type="java.lang.String"><![CDATA[CK]]></Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
	<Field name="VLastDate" type="java.sql.Timestamp">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpReferencedObject">
		<Field name="IObject" type="com.sunopsis.sql.DbInt"><![CDATA[3600]]></Field>
	<Field name="ObjectPKasString" type="java.lang.String"><![CDATA[133]]></Field>
	<Field name="ObjectAKasString" type="java.lang.String"><![CDATA[]]></Field>
	<Field name="Description" type="java.lang.String"><![CDATA[SNP_TRT : SparkKM]]></Field>
 <Field name="GlobalId" type="java.lang.String"><![CDATA[739e7da4-f732-4455-8936-782fafe91869]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpKmTemplateJoin">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[07c7b1f0-07f1-4c32-a0e6-6ad15a9de337]]></Field>
	<Field name="ISnpKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[149]]></Field>
	<Field name="ISnpTrt" type="com.sunopsis.sql.DbInt"><![CDATA[134]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpKmTemplateJoin">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[4ae9e637-7d8a-420c-9513-577f279dddd5]]></Field>
	<Field name="ISnpKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[150]]></Field>
	<Field name="ISnpTrt" type="com.sunopsis.sql.DbInt"><![CDATA[134]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpKmTemplateJoin">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[75d35ef9-7e1b-449e-9b35-edcc19d9c798]]></Field>
	<Field name="ISnpKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[151]]></Field>
	<Field name="ISnpTrt" type="com.sunopsis.sql.DbInt"><![CDATA[134]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpKmTemplateJoin">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[66c6303c-bc82-442d-bf36-853f857c2201]]></Field>
	<Field name="ISnpKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[92]]></Field>
	<Field name="ISnpTrt" type="com.sunopsis.sql.DbInt"><![CDATA[134]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpKmTemplateJoin">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[b115e779-fb51-4549-9b99-2769da613ea5]]></Field>
	<Field name="ISnpKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[152]]></Field>
	<Field name="ISnpTrt" type="com.sunopsis.sql.DbInt"><![CDATA[134]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d332a9fc-4e5d-4898-9ec4-c3f727ef180c]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[134]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[305]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[Delete Spark Mapping Files]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Delete temporary objects at end of mapping]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String">null</Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String"><![CDATA[D]]></Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[817]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp">null</Field>
	<Field name="FirstUser" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4eaca97e-baa8-42ab-a6fe-2a73bf66bfeb]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[380]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[134]]></Field>
	<Field name="KcmAk" type="java.lang.String">null</Field>
	<Field name="KcmCond" type="java.lang.String">null</Field>
	<Field name="KcmErrDel" type="java.lang.String">null</Field>
	<Field name="KcmJoin" type="java.lang.String">null</Field>
	<Field name="KcmNull" type="java.lang.String">null</Field>
	<Field name="KcmPk" type="java.lang.String">null</Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String">null</Field>
	<Field name="KjmDrop" type="java.lang.String">null</Field>
	<Field name="KjmExtend" type="java.lang.String">null</Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String">null</Field>
	<Field name="KjmPurge" type="java.lang.String">null</Field>
	<Field name="KjmSetInstall" type="java.lang.String">null</Field>
	<Field name="KjmSetUninstall" type="java.lang.String">null</Field>
	<Field name="KjmSubscribe" type="java.lang.String">null</Field>
	<Field name="KjmTableOrder" type="java.lang.String">null</Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String">null</Field>
	<Field name="KjmUnsubscribe" type="java.lang.String">null</Field>
	<Field name="KlmAfterInt" type="java.lang.String">null</Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-11-05 19:07:16.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String"><![CDATA[X]]></Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[MC]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[130]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Remove Spark Python Script]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String"><![CDATA[POST_LOAD_TAP]]></Field>
	<Field name="VariableDefs" type="java.lang.String"><![CDATA[
              delegateClassInstance.generateOdiOsCommand(physicalNode, getBinding());
        ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c55c60fc-524e-4b74-9fea-8909b0b285ac]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[817]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
OdiFileDelete -FILE=$[sparkpyExecFileName]
                
            ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Target Technology]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[DEF_I_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_LINE_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String">null</Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String"><![CDATA[D]]></Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[819]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp">null</Field>
	<Field name="FirstUser" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b047313e-b47c-48ff-9ff2-ece67933f695]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[381]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[134]]></Field>
	<Field name="KcmAk" type="java.lang.String">null</Field>
	<Field name="KcmCond" type="java.lang.String">null</Field>
	<Field name="KcmErrDel" type="java.lang.String">null</Field>
	<Field name="KcmJoin" type="java.lang.String">null</Field>
	<Field name="KcmNull" type="java.lang.String">null</Field>
	<Field name="KcmPk" type="java.lang.String">null</Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String">null</Field>
	<Field name="KjmDrop" type="java.lang.String">null</Field>
	<Field name="KjmExtend" type="java.lang.String">null</Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String">null</Field>
	<Field name="KjmPurge" type="java.lang.String">null</Field>
	<Field name="KjmSetInstall" type="java.lang.String">null</Field>
	<Field name="KjmSetUninstall" type="java.lang.String">null</Field>
	<Field name="KjmSubscribe" type="java.lang.String">null</Field>
	<Field name="KjmTableOrder" type="java.lang.String">null</Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String">null</Field>
	<Field name="KjmUnsubscribe" type="java.lang.String">null</Field>
	<Field name="KlmAfterInt" type="java.lang.String">null</Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-11-05 19:07:16.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String"><![CDATA[X]]></Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[MC]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[140]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Remove Spark Log File]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String"><![CDATA[POST_LOAD_TAP]]></Field>
	<Field name="VariableDefs" type="java.lang.String"><![CDATA[
             delegateClassInstance.generateOdiOsCommand(physicalNode, getBinding());
                                ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4dfc6bf2-2b06-4424-bd7c-b3907ae0a4fc]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[819]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
OdiFileDelete -FILE=$[sparkPyOutFile]
             ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String">null</Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String"><![CDATA[D]]></Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[816]]></Field>
	<Field name="DefLanguage" type="java.lang.String"><![CDATA[GROOVY]]></Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[GROOVY]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp">null</Field>
	<Field name="FirstUser" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9c5693c8-4df7-434a-8cb2-e9bb8d417f25]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[379]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[134]]></Field>
	<Field name="KcmAk" type="java.lang.String">null</Field>
	<Field name="KcmCond" type="java.lang.String">null</Field>
	<Field name="KcmErrDel" type="java.lang.String">null</Field>
	<Field name="KcmJoin" type="java.lang.String">null</Field>
	<Field name="KcmNull" type="java.lang.String">null</Field>
	<Field name="KcmPk" type="java.lang.String">null</Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String">null</Field>
	<Field name="KjmDrop" type="java.lang.String">null</Field>
	<Field name="KjmExtend" type="java.lang.String">null</Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String">null</Field>
	<Field name="KjmPurge" type="java.lang.String">null</Field>
	<Field name="KjmSetInstall" type="java.lang.String">null</Field>
	<Field name="KjmSetUninstall" type="java.lang.String">null</Field>
	<Field name="KjmSubscribe" type="java.lang.String">null</Field>
	<Field name="KjmTableOrder" type="java.lang.String">null</Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String">null</Field>
	<Field name="KjmUnsubscribe" type="java.lang.String">null</Field>
	<Field name="KlmAfterInt" type="java.lang.String">null</Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-11-05 19:07:16.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String"><![CDATA[X]]></Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[EE]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[120]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Execute Spark Python Application]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String"><![CDATA[POST_LOAD_TAP]]></Field>
	<Field name="VariableDefs" type="java.lang.String"><![CDATA[
             delegateClassInstance.generateOdiOsCommand(physicalNode, getBinding());
             skipTaskGeneration = delegateClassInstance.skipTask();
         ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d83976a0-6128-4227-b159-7f1fb9c569d2]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[816]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[{# INCLUDE = 'SparkPythonSubmit' #}]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String">null</Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String"><![CDATA[D]]></Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[815]]></Field>
	<Field name="DefLanguage" type="java.lang.String"><![CDATA[GROOVY]]></Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[GROOVY]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp">null</Field>
	<Field name="FirstUser" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2e2641f5-7907-4f8c-9880-305604c62ee3]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[378]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[134]]></Field>
	<Field name="KcmAk" type="java.lang.String">null</Field>
	<Field name="KcmCond" type="java.lang.String">null</Field>
	<Field name="KcmErrDel" type="java.lang.String">null</Field>
	<Field name="KcmJoin" type="java.lang.String">null</Field>
	<Field name="KcmNull" type="java.lang.String">null</Field>
	<Field name="KcmPk" type="java.lang.String">null</Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String">null</Field>
	<Field name="KjmDrop" type="java.lang.String">null</Field>
	<Field name="KjmExtend" type="java.lang.String">null</Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String">null</Field>
	<Field name="KjmPurge" type="java.lang.String">null</Field>
	<Field name="KjmSetInstall" type="java.lang.String">null</Field>
	<Field name="KjmSetUninstall" type="java.lang.String">null</Field>
	<Field name="KjmSubscribe" type="java.lang.String">null</Field>
	<Field name="KjmTableOrder" type="java.lang.String">null</Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String">null</Field>
	<Field name="KjmUnsubscribe" type="java.lang.String">null</Field>
	<Field name="KlmAfterInt" type="java.lang.String">null</Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-11-05 19:07:16.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String"><![CDATA[X]]></Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[EE]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Deploy ODI jars]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String"><![CDATA[POST_LOAD_TAP]]></Field>
	<Field name="VariableDefs" type="java.lang.String"><![CDATA[
             delegateClassInstance.generateDeployJdbcJars(physicalNode, getBinding());
             skipTaskGeneration = delegateClassInstance.skipDeployJarTask();
    ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3f626326-dbde-43bb-b9ab-7e62dc8d135e]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[815]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[odiRef.updateOdiSparkLibIfNeeded('''$[jarKeysJdbc]''')

	]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String">null</Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String"><![CDATA[D]]></Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[814]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp">null</Field>
	<Field name="FirstUser" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[85793a01-ce10-4037-abaf-86c62b102a50]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[377]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[134]]></Field>
	<Field name="KcmAk" type="java.lang.String">null</Field>
	<Field name="KcmCond" type="java.lang.String">null</Field>
	<Field name="KcmErrDel" type="java.lang.String">null</Field>
	<Field name="KcmJoin" type="java.lang.String">null</Field>
	<Field name="KcmNull" type="java.lang.String">null</Field>
	<Field name="KcmPk" type="java.lang.String">null</Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String">null</Field>
	<Field name="KjmDrop" type="java.lang.String">null</Field>
	<Field name="KjmExtend" type="java.lang.String">null</Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String">null</Field>
	<Field name="KjmPurge" type="java.lang.String">null</Field>
	<Field name="KjmSetInstall" type="java.lang.String">null</Field>
	<Field name="KjmSetUninstall" type="java.lang.String">null</Field>
	<Field name="KjmSubscribe" type="java.lang.String">null</Field>
	<Field name="KjmTableOrder" type="java.lang.String">null</Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String">null</Field>
	<Field name="KjmUnsubscribe" type="java.lang.String">null</Field>
	<Field name="KlmAfterInt" type="java.lang.String">null</Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-11-05 19:07:16.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String"><![CDATA[X]]></Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[EE]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[100]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Generate ODI Pyspark Extension]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String"><![CDATA[POST_LOAD_TAP]]></Field>
	<Field name="VariableDefs" type="java.lang.String"><![CDATA[
             delegateClassInstance.generateOdiOsCommand(physicalNode, getBinding());
             skipTaskGeneration = delegateClassInstance.skipTask();
    ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[03a830f2-4ec5-463a-b005-8fedf9afd7e8]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[814]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[1]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
OdiOutFile -FILE=$[sparkPyWorkDir]/pyspark_ext.py
import sys
import time
import json
from datetime import datetime,date
from operator import is_not
from functools import partial
from pyspark.sql import *

class NoneRddElement(object):
  def __getitem__(self,key): 
    return None
  def __getattr__(self, key): 
    if key.startswith('__') and key.endswith('__'):
      return super(NoneRddElement, self).__getAttr__(key)
    return None
  def __getstate__(self): 
    pass
  def __setstate__(self, dict): 
    pass
  def __iter__(self): 
    return iter([NoneRddElement(),NoneRddElement()]);
  def __hash__(self): 
    return 0
  def __eq__(self,other): 
    return True if isinstance(other, NoneRddElement) else False

def sparkVersionNum(ver) :
  v = ver.strip()
  if (len(v) > 5) : v = v[0:5]
  return reduce(lambda sum, elem: sum*10 + elem, map(lambda x: int(x) if x.isdigit() else 0, v.split('.')), 0)

def convert_to_none(x): 
  return NoneRddElement() if x is None else x

def dict2Tuple(t):
  return tuple(map(dict2Tuple, t)) if isinstance(t, (list, tuple)) else tuple(sorted(t.items()))

def tuple2Dict(t):
  return dict((x,y) for x,y in t) if not isinstance(t[0][0], (list, tuple)) else tuple(map(tuple2Dict, t))

def SUM(x): 
  return sum(filter(None,x))

def MAX(x): 
  return max(x)

def MIN(x): 
  return min(x)

def AVG(x): 
  return None if COUNT(x) == 0 else SUM(x)/COUNT(x)

def COUNT(x): 
  return len(filter(partial(is_not, None),x))

def FIRST(x): 
  return x[0]

def LAST(x): 
  return x[-1]

def safeAggregate(x,y): 
  return None if not y else x(y)

def aggFuncExpr(expr, default):
  try: return expr()
  except TypeError as e:
    if 'object is not iterable' in e.args[0]: raise
    else: return default
  except Exception:
    return default

def getValue(type,value,format='%Y-%m-%d'):
  try:
    if type is date:
      return datetime.strptime(value,format).date()
    else: return type(value)
  except ValueError: return None
  except TypeError: return None

def getScaledValue(scale, value):
  try: 
    return '' if value is None else ('%0.'+ str(scale) +'f')%float(value)
  except ValueError:
    return ''

def getStrValue(value, format='%Y-%m-%d'):
  if value is None : return ''
  if isinstance(value, date): return value.strftime(format)
  if isinstance(value, str): return unicode(value, 'utf-8')
  if isinstance(value, unicode) : return value
  try: return unicode(value) 
  except UnicodeError : return ''

def safeExpr(expr, default):
  try: return expr()
  except Exception: return default
  
def getSqlContextInstance(sparkContext): 
  if ('sqlContextSingletonInstance' not in globals()): 
     if sparkVersionNum(sparkContext.version) > 200:
       globals()['sqlContextSingletonInstance'] = SparkSession(sparkContext)
     else:
       globals()['sqlContextSingletonInstance'] = SQLContext(sparkContext)      
  return globals()['sqlContextSingletonInstance']
  

	]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String">null</Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String"><![CDATA[D]]></Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[820]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp">null</Field>
	<Field name="FirstUser" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a174bd16-5445-411d-8707-61e456e8af5f]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[382]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[134]]></Field>
	<Field name="KcmAk" type="java.lang.String">null</Field>
	<Field name="KcmCond" type="java.lang.String">null</Field>
	<Field name="KcmErrDel" type="java.lang.String">null</Field>
	<Field name="KcmJoin" type="java.lang.String">null</Field>
	<Field name="KcmNull" type="java.lang.String">null</Field>
	<Field name="KcmPk" type="java.lang.String">null</Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String">null</Field>
	<Field name="KjmDrop" type="java.lang.String">null</Field>
	<Field name="KjmExtend" type="java.lang.String">null</Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String">null</Field>
	<Field name="KjmPurge" type="java.lang.String">null</Field>
	<Field name="KjmSetInstall" type="java.lang.String">null</Field>
	<Field name="KjmSetUninstall" type="java.lang.String">null</Field>
	<Field name="KjmSubscribe" type="java.lang.String">null</Field>
	<Field name="KjmTableOrder" type="java.lang.String">null</Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String">null</Field>
	<Field name="KjmUnsubscribe" type="java.lang.String">null</Field>
	<Field name="KlmAfterInt" type="java.lang.String">null</Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-11-05 19:07:16.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String"><![CDATA[X]]></Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[MC]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[150]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Remove Spark Error File]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String"><![CDATA[POST_LOAD_TAP]]></Field>
	<Field name="VariableDefs" type="java.lang.String"><![CDATA[
             delegateClassInstance.generateOdiOsCommand(physicalNode, getBinding());
         ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[01f3f26f-3af1-4c33-ac50-3ba52337babb]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[820]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
OdiFileDelete -FILE=$[sparkPyErrFile]
            ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[b16f2034-e2af-40c4-88f2-b695892718e8]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[380]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[305]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e041e8f4-eb2b-4108-bd3c-b3bac256b88c]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[381]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[305]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[47ff75fb-fc53-4034-9c5f-c385beabde82]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[382]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[305]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.133]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[739e7da4-f732-4455-8936-782fafe91869]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[SparkKM]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[7]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.134]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[80aa8be2-d68d-40fe-bc1e-0b0b3ee0105e]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKMSpark]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[8]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE.149]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[bcb3a042-a6d7-11e6-ac06-23e5aaa09e30]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[SparkPythonSubmitCommon]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[23]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE.150]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[fa46e082-2d00-11e6-93fb-00163e1ffd72]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[SparkPythonSubmitSync]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[21]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE.151]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[fa46e0aa-2d00-11e6-93fc-00163e1ffd72]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[SparkPythonSubmitAsync]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[22]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE.92]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[fa46e05a-2d00-11e6-93fa-00163e1ffd72]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[SparkPythonSubmit]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[17]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE.152]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[bc17c799-d8eb-4fe2-9440-a78c825b817b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[SparkPythonRESTSubmit]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[21]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.817]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c55c60fc-524e-4b74-9fea-8909b0b285ac]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.819]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[4dfc6bf2-2b06-4424-bd7c-b3907ae0a4fc]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.102]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.816]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[d83976a0-6128-4227-b159-7f1fb9c569d2]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.815]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[3f626326-dbde-43bb-b9ab-7e62dc8d135e]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.814]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[03a830f2-4ec5-463a-b005-8fedf9afd7e8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.820]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[01f3f26f-3af1-4c33-ac50-3ba52337babb]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.305]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[d332a9fc-4e5d-4898-9ec4-c3f727ef180c]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKMSpark.Delete Spark Mapping Files]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[8.26]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.380]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[4eaca97e-baa8-42ab-a6fe-2a73bf66bfeb]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKMSpark.Remove Spark Python Script]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[8.26]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.381]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b047313e-b47c-48ff-9ff2-ece67933f695]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKMSpark.Remove Spark Log File]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[8.21]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.382]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a174bd16-5445-411d-8707-61e456e8af5f]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKMSpark.Remove Spark Error File]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[8.23]]></Field>
</Object>
<Object class="com.sunopsis.dwg.DwgExportSummary">
		<Field name="ExpTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="InstObjNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LinkDiagNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MorigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MtxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OrigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[6]]></Field>
	<Field name="OtherObjectsNb" type="com.sunopsis.sql.DbInt"><![CDATA[16]]></Field>
	<Field name="PlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="StepNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="TxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[6]]></Field>
	<Field name="UeOrigNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeUsedNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="VarPlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="ScenTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OdiVersion" type="java.lang.String"><![CDATA[12.2.1]]></Field>
	<Field name="OriginRepositoryID" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="RepositoryVersion" type="java.lang.String"><![CDATA[05.02.02.08]]></Field>
</Object>
</SunopsisExport>
