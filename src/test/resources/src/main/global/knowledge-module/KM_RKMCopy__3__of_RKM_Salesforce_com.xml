<?xml version="1.0" encoding="ISO-8859-1"?>
<SunopsisExport>
<Admin RepositoryVersion="05.02.02.08" IsLegacyIdCompatible="false" />
<Encryption algorithm="AES" keyLength="128" exportKeyHash="669pqIV1mxtlMyiNiZLIerb+cFX8VZ7D/Qbt219ScWk=" keyVect="iLH2BpbAL6TNoPnxvQjX9Q==" exportKeySalt="83620fb3-b591-4dd2-bdc5-bde697fbef5e" containsCipherText="false"/>
<Object class="com.sunopsis.dwg.dbobj.SnpTrt">
		<Field name="CleanupOnError" type="java.lang.String">null</Field>
	<Field name="CompType" type="java.lang.String">null</Field>
	<Field name="DelegateClass" type="java.lang.String">null</Field>
	<Field name="DelegateScript" type="java.lang.String">null</Field>
	<Field name="ExpectedAstClass" type="java.lang.String">null</Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4db2fc8c-35eb-4db1-9c78-6c1d12f3b368]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[U]]></Field>
	<Field name="IndExcludeExUnitBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitEnd" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitMain" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapCleanup" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapEnd" type="java.lang.String">null</Field>
	<Field name="IndGenerateLoad" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndIsHidden" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndJrnMethod" type="java.lang.String"><![CDATA[S]]></Field>
	<Field name="IndSuppSetBased" type="java.lang.String">null</Field>
	<Field name="IntgType" type="java.lang.String">null</Field>
	<Field name="IntVersion" type="com.sunopsis.sql.DbInt"><![CDATA[2]]></Field>
	<Field name="IsConcurrent" type="java.lang.String">null</Field>
	<Field name="IsSeeded" type="java.lang.String">null</Field>
	<Field name="IBaseCompKm" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IProject" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScBaseTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScOrigTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="ITxtDelTxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtTrtTxt" type="com.sunopsis.sql.DbInt"><![CDATA[20483]]></Field>
	<Field name="KimMultiDserver" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KmDefault" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KmLang" type="java.lang.String">null</Field>
	<Field name="KmSrcLang" type="java.lang.String">null</Field>
	<Field name="KmSrcTechno" type="java.lang.String"><![CDATA[SALESFORCE]]></Field>
	<Field name="KmTechno" type="java.lang.String">null</Field>
	<Field name="KmVersion" type="java.lang.String">null</Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LkmType" type="java.lang.String">null</Field>
	<Field name="LChecksum" type="com.sunopsis.sql.DbInt"><![CDATA[2964]]></Field>
	<Field name="LCode" type="java.lang.String">null</Field>
	<Field name="OggJkm" type="java.lang.String">null</Field>
	<Field name="OrdFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ProcType" type="java.lang.String">null</Field>
	<Field name="ProdAstType" type="java.lang.String">null</Field>
	<Field name="RepGuid" type="java.lang.String">null</Field>
	<Field name="RepVersion" type="java.lang.String">null</Field>
	<Field name="ScriptPath" type="java.lang.String">null</Field>
	<Field name="ScOrigTrtTag" type="java.lang.String">null</Field>
	<Field name="Subtype" type="java.lang.String">null</Field>
	<Field name="TrtName" type="java.lang.String"><![CDATA[Copy (3) of RKM_Salesforce_com]]></Field>
	<Field name="TrtType" type="java.lang.String"><![CDATA[KR]]></Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
	<Field name="VLastDate" type="java.sql.Timestamp">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5c4b872c-bcc8-4b6b-8d97-952925f43dbb]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20483]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Component: RKM Salesforce.com
Author: Bristlecone Inc.
Version: 5_02
Compatibility: ODI 11.1.1.6 and above
Last Updated: Feb 2014

Description :
- Reverse Knowledge Module (Java Bean Shell)
- Reverse engineering Knowledge Module to retrieve the Standard and Custom objects from Salesforce.com. 
- Reverse engineering Knowledge Module provides a Tree Browser UI for selecting Sf.com objects
- This KM provides logging (Log File Name, Use Trace Log, Trace Log File Name) options.

To use this knowledge module:
1. Import this knowledge module in one of your projects.
2. Create a model, and choose the reverse context as well as the knowledge module in the "reverse" tab.
3. In the Topology manager import  salesfocre.com technologie  : TECH_Salesforce.com.xml, if it is not available.
4. Execute the reverse engineering and follow up the steps in the Operator window

Restrictions:
- The mask of tables to reverse must not be empty, and at least contain the '%' character.
- The tab Selective reverse cannot be used with this knowledge module.

Before using this Knowledge Module install:
(Contact your Salesforce.com correspondents to obtain these WSDL/jar files)
Force.com Web Services Connector (WSC) :
  - partner-<version>.jar, e.g. partner-29.jar
  - force-wsc-<version>.jar, e.g. force-wsc-29.0.0.jar


]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Edit Command]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_TRT_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e69e59fb-e7f8-45c1-9e09-9a028187ba9e]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[20484]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[6150]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[10]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[USE_GUI]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to display GUI]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1b292ce3-26d1-4de0-a297-564845147942]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20484]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Set to True to show UI browser for search and reverse Salesforce.com objects into ODI Model. Set to False, and provide the Object name in the KM option, that specified object(s) will be reversed. ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[User Exit help]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_UE_HELP]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_USER_EXIT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6c3f9fa0-f4ef-499c-b8aa-492908ef8244]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[20485]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[6151]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[20]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[OBJECT_NAMES]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Name of the Sf.com Object]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2d52f2f4-819c-4a75-8115-96e25e2fa761]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20485]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[For multiple objects (Standard or Custom) search, use "," (comma)  as a separator after every complete object name e.g:Account,Asset,Opportunity 

For single object, just provide Salesforce.com object Name (Standard or Custom) in this KM option or in the Mask Field.

Defaul value "All" will reverse/fetch all Objects from salesforce.com. Please note, it will take significant time in fetching all metadata information.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[cc48c146-c338-449c-a511-ca6c53f9a4b2]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[20486]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[6152]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[30]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[USE_TRACE_LOG]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to trace log]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[385a9b47-b9c3-46f0-82aa-cabe56d8acfe]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20486]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Flag for sf.com trace log message]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c7c3ae55-9df6-4dbb-970b-9d80cc6b5fb3]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[20487]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[6153]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[40]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[<?=new File(System.getProperty("java.io.tmpdir"),"Odi_Salesforce_RKM_Trace.log").toString()?>]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SF_TRACE_LOG]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Salesforce.com Trace Log File]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3ab9ffe8-fd26-4639-bb0d-48fc038c165b]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20487]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Salesforce.com Trace Log File]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[286343c3-f386-4a41-b6be-1048714423eb]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[20488]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[6154]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[50]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[<?=new File(System.getProperty("java.io.tmpdir"),"Odi_Salesforce_RKM_"+odiRef.getSession("SESS_NO")+".genlog").toString()?>]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[LOG_FILE_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Log File Name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[250e6830-7cd7-4d09-ab7d-d775bb6041b7]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20488]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Code generation log file name.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9261c796-e24c-4765-85a6-fbca547fb629]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[20489]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[6155]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[60]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[GET_COLUMNS]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Set to Yes to Reverse Columns]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a8f37adb-80e0-406d-97d4-f9f08f94b543]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20489]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Set to Yes to Reverse the columns.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[041cae24-1f5c-4f38-b967-312dd852bc91]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[20490]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[6156]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[70]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[GET_PRIMARY_KEYS]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Set to Yes to Reverse PKs]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[faafad8c-01d5-478b-bf92-c5aa475e77fe]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20490]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Set to Yes to reverse the primary keys.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20491]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String">null</Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d63f4b9b-05fb-4253-a21e-f2a18e8d0397]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[12247]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[10]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Java Logger Classes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ea5161d6-73c2-4ba0-b7ba-88faa661d1d3]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20491]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[import java.io.File;
import java.io.FileOutputStream;
import java.io.PrintStream;

/**
 * ODI Salesforce.com RKM Logger Class
 * 
 * @author Anzarul.Haque
 */
public class OdiSfLogger {

	PrintStream out;
	/*
	 * Log Levels
	 */
	public static final int DEBUG = 0;//Highest Value of the Log- Maximum Trace
	public static final int FINE = 1;
	public static final int FINER = 2;
	public static final int FINEST = 3;//Lowest Value of the Log- Minimum Trace

	/*
	 * Default Log Level
	 */
	private int intDefaultlog = -1;


	/**
	 * Creates Logger Instance and set initial Log Level.
	 * For Production Release, default log level will be FINEST.
	 * Change the log level to DEBUG if you need more detail trace.
	 * 
	 * @param level
	 * @param logFile
	 * @throws Exception
	 */
	public OdiSfLogger(int level, String logFile) throws Exception {
		intDefaultlog = level;
		if (intDefaultlog > FINEST || intDefaultlog < DEBUG)
			intDefaultlog = DEBUG;
		
	    String logFileName = "";
		if(logFile == null)
			logFileName = createLogFile();
		else{
			createLogFile(logFile);
			logFileName = logFile;
		}
		
		try {
			//Set the log file name in Java's System outputstream
			if(logFileName != null || !(logFileName.trim().equals(""))){
				out = new PrintStream(new FileOutputStream(logFileName));
				System.setOut(out);
				System.setErr(out);
			}
			System.out.println("##############################################################");
			System.out.println("################## ODI Salesforce Log file ###################");
			System.out.println("##############################################################");
		}catch(Exception le) {
			le.printStackTrace();
			System.out.println("Error in creating log file : " + logFileName + "-" + le.getMessage());
		}
	}
	
	private void createLogFile(String logFile) throws Exception {
		String path = logFile.substring(0, logFile.lastIndexOf(System.getProperty("file.separator"))+1);
		File file = new File(path);
		if(!file.exists())
			file.mkdir();
		file = new File(logFile);
		if(!file.exists())
			file.createNewFile();
	}
	/**
	 * Create log file
	 * @return
	 * @throws Exception
	 */
	private String createLogFile() throws Exception {
		String logPath = "";
		try{
			String path = System.getProperty("user.home")+ 
			              System.getProperty("file.separator")+ 
			              "ODI_SF_Log";
			File file = new File(path);
			if(!file.exists())
				file.mkdir();
			String fileName = file.getCanonicalPath()
			                  + System.getProperty("file.separator")
			                  + "ODI_SalesForce_RKM.genlog";
			file = new File(fileName);
			if(!file.exists())
				file.createNewFile();
			logPath = file.getCanonicalPath();
			System.out.println("## Log File Path="+ file.getCanonicalPath());
		}catch(Exception ex){
			System.out.println("Error: "+ ex.toString());
		}
		return logPath;
	}
	/**
	 * For Log Message as per the Level given by the user
	 * @param msg
	 * @param level
	 */
	public void log(int level, String msg) {
		if (level > FINEST || level < DEBUG)
			return;
		if (level >= intDefaultlog) {
			System.out.println("# "+ msg);
		}
		return;
	}
	
	public void log(String msg){
		log(DEBUG, msg);
	}
	
	public void log(String msg, String className, int level){
		msg = "["+ className+ "] "+ msg;
		log(level, msg);
	}
	
	public void close(){
		out.close();
		out = null;
	}
}//end of OdiSfLogger]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Source Technology]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[COL_I_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_LINE_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20492]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String">null</Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8b8e33e1-f578-4896-97a0-e48af8fcf3fd]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[12248]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[20]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Java Core Call classes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8d9c6e84-d755-4db3-9627-ef5b43d75f93]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20492]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//******* Start of OdiSfCoreCall class *********
import java.io.FileNotFoundException;
//import com.sforce.soap.metadata.MetadataConnection;
//import com.sforce.soap.partner.PartnerConnection;
//import com.sforce.ws.ConnectionException;
//import com.sforce.ws.ConnectorConfig;

/**
 * This class used for fundamental calls needed for 
 * logging in, maintaining session, etc.
 * 
 * @author Anzarul.Haque
 *
 */
public class OdiSfCoreCall {

	/*Logger object*/
    private OdiSfLogger logger = null;
    static com.sforce.soap.partner.PartnerConnection parterConnection;
    //com.sforce.soap.metadata.MetadataConnection metadataConnection;
    com.sforce.ws.ConnectorConfig metadataConfig;
    com.sforce.ws.ConnectorConfig partnerConfig;
	//private boolean isTraceOn = false;
 	
    //login result class reference
   // private LoginResult loginResult = null; // maintain the login results
    
    public OdiSfCoreCall() {
    }
    
	public OdiSfCoreCall(OdiSfLogger logger) {
    	this.logger = logger;
    	logger.log(OdiSfLogger.FINEST, "******* Odi Salesforce.com Core Call Logging **********");
    }
	
	/**
	 * Logging in to Salesforce and set session Id
	 */
	public com.sforce.soap.partner.PartnerConnection login(String userName, String pwd, String authEndPoint, String sfTraceLogFileName, String isTraceLog) {
		logger.log(OdiSfLogger.FINEST,"+++++++++OdiSfCoreCall.login()++++++++++++");
		metadataConfig = new com.sforce.ws.ConnectorConfig();
		//@SuppressWarnings("unused")
		try {
			partnerConfig = createConnectionConfig(authEndPoint, userName, pwd);
			parterConnection = com.sforce.soap.partner.Connector.newConnection(partnerConfig);
			// save the partner's session id into the metadata configuration then connect
			metadataConfig.setSessionId(parterConnection.getSessionHeader().getSessionId());
			if(isTraceLog.equals("1")) {
				partnerConfig.setTraceMessage(true);
				partnerConfig.setPrettyPrintXml(true);
				try {
			  		partnerConfig.setTraceFile(sfTraceLogFileName);
		  		}catch(FileNotFoundException fe) {
		  			logger.log(OdiSfLogger.FINEST,"File Not Found: "+fe.getMessage());
		  			throw new RuntimeException(fe.getMessage());
		  		}
			}
			//metadataConnection = com.sforce.soap.metadata.Connector.newConnection(metadataConfig);
			logger.log(OdiSfLogger.FINEST,"\nLogging in ...\n");
			logger.log(OdiSfLogger.FINEST,"Connection to Salesforce succesfully created...");
			logger.log(OdiSfLogger.FINEST,"Session Id: "+partnerConfig.getSessionId());
			logger.log(OdiSfLogger.FINEST,"User Id: "+parterConnection.getUserInfo().getUserId());
			logger.log(OdiSfLogger.FINEST,"User's Full Name: "+parterConnection.getUserInfo().getUserFullName());
			logger.log(OdiSfLogger.FINEST,"Auth End Point: " + partnerConfig.getAuthEndpoint());
			logger.log(OdiSfLogger.FINEST,"Service End Point: " + partnerConfig.getServiceEndpoint());
		}catch(com.sforce.ws.ConnectionException ce) {
			logger.log(OdiSfLogger.FINEST,"Connection Error: "+ce);
			throw new RuntimeException("ConnectionException: "+ce);
		}
		return parterConnection;
	}//end of login() method
	
	
	/**
	 * Create connection configuration
	 * @param endPoint
	 * @param userName
	 * @param password
	 * @return
	 * @throws ConnectionException
	 */
	private com.sforce.ws.ConnectorConfig createConnectionConfig(String endPoint, String userName, 
			String password) throws com.sforce.ws.ConnectionException {

		com.sforce.ws.ConnectorConfig connectionConfig = new com.sforce.ws.ConnectorConfig();
		if ((endPoint != null) && (userName != null) && (password != null)) {
			connectionConfig.setServiceEndpoint(endPoint);
		    connectionConfig.setAuthEndpoint(endPoint);
		    connectionConfig.setUsername(userName);
		    connectionConfig.setPassword(password);
		    return connectionConfig;
		}else
			throw new RuntimeException("Either endpoint or user name or password is empty!");
	}//end of createConnectionConfig() method
	
	/**
	 * Logout from Salesforce.com
	 */
	public void logout() {
	    try {
	    	parterConnection.logout();
	    	logger.log(OdiSfLogger.FINEST," logout(): Logged out");
	    } catch (com.sforce.ws.ConnectionException ce) {
	    	logger.log(OdiSfLogger.FINEST," logout(): Error: "+ce.getMessage());
			throw new RuntimeException("ConnectionException: "+ce.getMessage());
	    }
	}//end of logout() method
	
}//END of OdiSfCoreCall class
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20493]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String">null</Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7abc78aa-1600-4d7b-826d-521ddf6c631d]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[12249]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[30]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Java Describe Call classes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5f1a9ab4-7961-4f33-bd5b-3c0991059d6d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20493]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[import java.util.ArrayList;
import java.util.List;

//import com.sforce.soap.partner.DescribeGlobalResult;
//import com.sforce.soap.partner.DescribeGlobalSObjectResult;
//import com.sforce.soap.partner.DescribeSObjectResult;
//import com.sforce.soap.partner.Field;
//import com.sforce.soap.partner.PartnerConnection;
//import com.sforce.ws.ConnectionException;


/**
 * This class retrieve the list of Standard and Custom Objects
 * metadata using Partner SOAP API (partner WSDL)
 * @author Anzarul.Haque
 */
public class OdiSfDescribeCall {

	//Logger object
    private OdiSfLogger logger = null;
	
    //create a class scope reference to the service object
    com.sforce.soap.partner.PartnerConnection connection;
    
    
	public OdiSfDescribeCall(com.sforce.soap.partner.PartnerConnection connection, OdiSfLogger logger) {
    	//get the logger instance
		this.logger = logger;
		logger.log(OdiSfLogger.FINEST, "******* ODI Salesforce.com Describe Call Logging **********");
    	//get the session ID
		this.connection = connection;
    }
	
	/**
	 * Returns single object details
	 * @param objectName
	 * @return
	 * @throws Exception
	 */
	public com.sforce.soap.partner.DescribeSObjectResult getSingleObject(String objectName) throws com.sforce.ws.ConnectionException{
		com.sforce.soap.partner.DescribeSObjectResult describeSObjectResult = new com.sforce.soap.partner.DescribeSObjectResult();
		logger.log(OdiSfLogger.FINEST, "Object Name DescribeSObjectResult.... >>>> " + objectName);		
		if(!objectName.equals("") && objectName != null){
			describeSObjectResult = connection.describeSObject(objectName);
		}
		// Determine whether the describeSObject call succeeded.
		if(describeSObjectResult != null && (!describeSObjectResult.equals(""))){
			// Retrieve fields from the results
			//Field [] fields = describeSObjectResult.getFields();
			// Get the name of the object
			objectName = describeSObjectResult.getName();
			//System.out.println("get Object Name........ >>>> " + objectName);
			logger.log(OdiSfLogger.FINEST,"get Object Name........ >>>> " + objectName);				
		}
		return describeSObjectResult;
	}//end of getSingleObject() methotd	
	
	/**
	 * Returns list of All available Salesforce.com Objects
	 * @return DescribeGlobalSObjectResult
	 */
	public com.sforce.soap.partner.DescribeGlobalSObjectResult[] getGlobalSObjectList() {
		com.sforce.soap.partner.DescribeGlobalSObjectResult[] sobjectResults;
		try {
			com.sforce.soap.partner.DescribeGlobalResult describeGlobalResult = connection.describeGlobal();
			sobjectResults = describeGlobalResult.getSobjects();
			/*for(int i =0; i<sobjectResults.length;i++) {
				String ObjectName = sobjectResults[i].getName();
			}*/
			/*if(sobjectResults != null) {
				//Get the array of object names from the result 
				types = describeGlobalResult.getTypes();				
			}*/
			//sobjectResults = (DescribeGlobalSObjectResult[])std;
		}catch (com.sforce.soap.partner.fault.UnexpectedErrorFault ex1) {
			logger.log(OdiSfLogger.FINEST, "UnexpectedErrorFault: "+ex1.getExceptionMessage());
			throw new RuntimeException("UnexpectedErrorFault: "+ex1.getExceptionMessage());
		}catch (com.sforce.ws.ConnectionException ce) {
			logger.log(OdiSfLogger.FINEST, "ConnectionException: "+ce.getMessage());
			throw new RuntimeException("ConnectionException: "+ce.getMessage());
		}
        return sobjectResults;
    }//end of getGlobalSObjectList() methods

	/**
	 * Returns list of specified Salesforce.com Objects detail
	 * @return
	 */
	com.sforce.soap.partner.DescribeSObjectResult[] getSpecifiedObjectResult(String []ObjectList) {
	
		com.sforce.soap.partner.DescribeSObjectResult[] sobjectResults;
		try {
			sobjectResults = connection.describeSObjects(ObjectList);
		}catch (com.sforce.soap.partner.fault.UnexpectedErrorFault ex1) {
			logger.log(OdiSfLogger.FINEST, "UnexpectedErrorFault: "+ex1.getExceptionMessage());
			throw new RuntimeException("UnexpectedErrorFault: "+ex1.getExceptionMessage());
		}catch (com.sforce.ws.ConnectionException ce) {
			logger.log(OdiSfLogger.FINEST, "ConnectionException: "+ce.getMessage());
			throw new RuntimeException("ConnectionException: "+ce.getMessage());
		}
        return sobjectResults;
    }//End of getSpecifiedObjectResult(...) methods
	
	
	/**
	 * This method is used in GUI option = Yes, only.
	 * To determine the objects that are available to the logged-in
	 * user, the client application executes a describeGlobal
	 * call, which returns all of the objects that are visible to
	 * the logged-in user. This call should not be made more than
	 * once per session, as the data returned from the call likely
	 * does not change frequently. 
	*/      
	public ArrayList getAllSfObjects() {
		ArrayList sfObjectList = new ArrayList();
		try {
			com.sforce.soap.partner.DescribeGlobalResult describeGlobalResult = connection.describeGlobal();
			com.sforce.soap.partner.DescribeGlobalSObjectResult[] sobjectResults = describeGlobalResult.getSobjects();
			logger.log(OdiSfLogger.FINEST, "-----------------------------------------------------");
			logger.log(OdiSfLogger.FINEST, "Retrieving all Salesforce Standard and Custom Objects");
			logger.log(OdiSfLogger.FINEST, "-----------------------------------------------------");
			for (int i = 0; i < sobjectResults.length; i++) {
				System.out.println(sobjectResults[i].getName());
				sfObjectList.add(sobjectResults[i].getName());
			}
		} catch (com.sforce.ws.ConnectionException ce) {
			throw new RuntimeException("ConnectionException: "+ce.getMessage());
		}
		logger.log(OdiSfLogger.FINEST, "Total Number of Sf Objects: "+sfObjectList.size());
		return sfObjectList;
	}//end of getSfObjects()
	
	
	/**
	 * Returns metadata information of give object
	 * @param String
	 * @return ArrayList
	 */
	public ArrayList getSfObjectMetadata(String sObjectName) {
		logger.log(OdiSfLogger.FINEST,"+++++++++++++OdiSfDescribeCall.getSfObjectMetadata()++++++++++++++++++++");
		List fieldList = new ArrayList();
		logger.log(OdiSfLogger.FINEST,"<<<<<<<<<<< >>>>>>>>>>>> sObjectName: "+sObjectName.toString());
		try {
			com.sforce.soap.partner.DescribeSObjectResult sObjResult = connection.describeSObject(sObjectName.toString());
			logger.log(OdiSfLogger.FINEST,"<<<<<<<<<<<1111111111 describeSObjectResult: "+sObjResult);
			//DescribeGlobalSObjectResult[] sobjectResults = describeSObjectResult.getSobjects();
			if(sObjResult != null) {
				com.sforce.soap.partner.Field []fields = sObjResult.getFields();
		        String objectName = sObjResult.getName();
		        logger.log(OdiSfLogger.FINEST,"==================================================");
		        logger.log(OdiSfLogger.FINEST,"*********** Getting Object Metadata  *************");
		        logger.log(OdiSfLogger.FINEST,"********** Object Name: "+ objectName+" **********");
		        logger.log(OdiSfLogger.FINEST,"==================================================");
		        boolean isActivateable = sObjResult.isActivateable();
		        if (fields != null) {
		        	for (int i = 0; i < fields.length; i++) {
		        		com.sforce.soap.partner.Field field = fields[i];
		        		//String name = field.getName();
		        		fieldList.add(field.getName());
		        		logger.log(OdiSfLogger.FINEST,"Field Name: "+field.getName());
		        		field = null;
		        	}//end of for loop - for (int i = 0; i < fields.length; i++)
		        }//end of if (fields != null)
			}//end of if(describeSObjectResult != null)
		}catch (com.sforce.ws.ConnectionException ce) {
			logger.log(OdiSfLogger.FINEST,""+ce.getMessage());
			throw new RuntimeException(ce.getMessage());
		} 
		return (ArrayList) fieldList;
	}//end of getSfObjectMetadata() method
	

}//END of OdiSfDescribeCall class
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20494]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String">null</Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f35833bd-bcea-4059-bbcc-89602732026e]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[12250]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[40]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Java Supporting Classes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[34a8c191-3c2e-4465-b951-fafe2609ca1f]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20494]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Create Java Supporting Classes
//Start of OdiSfAdapterDefaultTreeNode class

import javax.swing.tree.DefaultMutableTreeNode;

/**
 * This is a customized DefaultMutableTreeNode which handle each Tree node as
 * MyNode object
 *
 */
public class OdiSfAdapterDefaultTreeNode extends DefaultMutableTreeNode {

	private OdiSfNode node;

	public OdiSfAdapterDefaultTreeNode(OdiSfNode node){
		super(node.getName());
		this.node = node;
	}

	public OdiSfNode getMyNode(){
		return node;
	}

	public String toString(){
		//return node name
		return node.getName();
	}

}//end of class - OdiSfAdapterDefaultTreeNode

//Start of OdiSfNode class

/**
 * This class will represent each Tree Browser node
 * name- node name
 * desc- node description
 * selected- its corresponding checkbox is selected/deselected
 *
 */
public class OdiSfNode {

	String name = "";
	//selected status
	boolean selected;

	public OdiSfNode(String name, String desc, boolean selected){
		this.name = name;
		//this.desc = desc;
		this.selected = selected;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public boolean isSelected() {
		return selected;
	}
	public void setSelected(boolean selected) {
		this.selected = selected;
	}

}//end of class - OdiSfNode

//**** Start of OdiSfUtil class *********//
/**
 * @(#)OdiSfUtil.java  1.00 10/30/2013
 *
 * Application : ODI Salesforce Knowledge Modules
 * Module      : RKM Salesforce.com Adapter
 * Author(s)   : 
 **/

/**
 * <b>OdiSfUtil</b> class is a data structure of all utilities to be used in RKM
 */
public class OdiSfUtil {

	// Check the ODI Release
	public static boolean isOdi10gOr11g() {
		return <%=odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION")%>;
	}
}
//end of main class -- OdiSfUtil]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20495]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String">null</Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[cd1c16c7-a348-4f24-a2ac-00cf83530c69]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[12251]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[50]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Java UI Classes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[20f06a2f-118c-450b-8486-24cd791e4c1c]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20495]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Create Java UI Classes
//import com.sforce.soap.partner.DescribeGlobalSObjectResult;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import java.net.URL;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.HashSet;
import java.util.Vector;
import java.util.Iterator;
import java.util.List;

import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.JTree;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TreeExpansionEvent;
import javax.swing.event.TreeExpansionListener;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.event.TreeWillExpandListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.ExpandVetoException;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;

/**
 * CheckRenderer: This inner class is responsible to set the tree node icon
 * @author Anzar
 *
 */
class CheckRenderer extends DefaultTreeCellRenderer implements ItemListener {

    //protected JCheckBox check;
    protected TreeLabel label;
    protected JPanel jPan = null;
    protected OdiSfLogger sfLogger = null;
    //private SfMetadataAdapter sfMetadataAdapter = null;
    private OdiSfObjectMetadataBrowser browser;
    OdiSfNode selNode;
    //ArrayList mandatoryFieldList;
    Icon iconRoot = null;
    //Icon iconModule = null;
    Icon iconField = null;
    Icon iconSfObject = null;
    Icon iconComponent = null;
    //Icon iconMandatoryField = null;

    public CheckRenderer(OdiSfObjectMetadataBrowser browser, OdiSfLogger logger) {
        this.sfLogger = logger;
        sfLogger.log(OdiSfLogger.FINEST, "CheckRenderer Constructor");
        jPan = new JPanel();
        //jPan.add(check = new JCheckBox());
        jPan.add(label = new TreeLabel());
        this.browser = browser;////ODI version
        //URL obj_model = this.getClass().getResource("com/sunopsis/graphical/gif/obj_model.gif");
        URL obj_model = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/obj_model.gif");//changed for 12c
        iconRoot = new ImageIcon(obj_model);


        //URL obj_table = this.getClass().getResource("com/sunopsis/graphical/gif/obj_table.gif");
        URL obj_table = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/obj_table.gif");
        iconSfObject = new ImageIcon(obj_table);

        
        //URL obj_column = this.getClass().getResource("com/sunopsis/graphical/gif/obj_column.gif");
        URL obj_column = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/obj_column.gif");
        iconField = new ImageIcon(obj_column);

        //URL obj_column_holder = this.getClass().getResource("com/sunopsis/graphical/gif/obj_model_hierarchy.gif");
        URL obj_column_holder = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/obj_model_hierarchy.gif");
        iconComponent = new ImageIcon(obj_column_holder);
    }

    public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected,
            boolean expanded, boolean leaf, int row, boolean hasFocus) {

        try {
            //logger.log(OdiSfLogger.FINEST, "### Cell Rendered Component......");
            OdiSfAdapterDefaultTreeNode tnode = (OdiSfAdapterDefaultTreeNode) value;
            OdiSfNode node = tnode.getMyNode();
            TreePath path = tree.getPathForRow(row);

            String nodeName = node.getName();
            boolean isFieldNode = false;
            if ((tnode.getChildCount() == 0) && !(node.getName().equals("Fields"))) {
                isFieldNode = true;
            }

            if ((tnode.getChildCount() == 1) && (tnode.getLevel() == 1) && !(nodeName.equalsIgnoreCase("Salesforce.com Objects"))) {

                String imgSrc = "";
                //find out node type
                try {
                    imgSrc = iconSfObject.toString();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }

                //set custom label for Sf Object
                label.setText(nodeName);
                label.setIcon(iconSfObject);
                label.setFont(tree.getFont());
                label.setSelected(node.isSelected());
                /*if (selected) {
                System.out.println("Renderer");
                if (browser.mouseClicked) {//AKS
                label.setSelected(!node.isSelected());//AKS
                node.setSelected(!node.isSelected());//AKS
                }
                }*/
                //browser.mouseClicked = false;//AKS
                //this.setTextNonSelectionColor(Color.RED);
                //String cusLabel = checkboxLabel1 + imgSrc + checkboxLabel2 + name+ checkboxLabel3;
                //check.setLabel(cusLabel);
                //check.setFont(tree.getFont());

                //check.setBackground(UIManager.getColor("Tree.textBackground"));

                /*if(selected) {
                System.out.println(""+name+" is Clicked ");
                if(node != selNode) {
                System.out.println(""+name+" is Clicked ");
                if(node.isSelected()) {
                //CheckBox DESELECT Trigger
                browser.mUncheckedTableList.add(node.getName());
                } else {
                //Checkbox SELECT Trigger
                int index = browser.mUncheckedTableList.indexOf(node.getName());
                if( index != -1) {
                //node already exists, so remove it
                browser.mUncheckedTableList.remove(index);
                }
                }
                selNode = node;
                check.setSelected(!node.isSelected());
                node.setSelected(!node.isSelected());
                }
                } else if(name.equalsIgnoreCase(browser.searchTableName) ) {//if node is selected thru search
                check.setSelected(!node.isSelected());
                node.setSelected(!node.isSelected());
                browser.searchTableName = null;
                }
                check.setSelected(node.isSelected());
                return check;*/

            } else {
                String stringValue = "";
                if (nodeName.equalsIgnoreCase("Salesforce.com Objects")) {
                    stringValue = nodeName;
                } else if (nodeName.equalsIgnoreCase("Fields")) {
                    stringValue = nodeName;
                } else if (isFieldNode) {
                    stringValue = nodeName;
                }

                jPan.setEnabled(tree.isEnabled());
                label.setFont(tree.getFont());
                label.setText(stringValue);
                //setForeground(Color.red);
                //label.setSelected(selected);
                //label.setFocus(hasFocus);
                String modName = node.getName();
                if (path == null) {
                    label.setIcon(iconSfObject);
                } else {
                    if (path.getPathCount() == 1) {
                        label.setIcon(iconRoot);
                        if (selected) {
                            label.setSelected(true);
                        } else {
                            label.setSelected(false);
                        }
                    } else if (path.getPathCount() == 2) {
                        label.setIcon(iconSfObject);
                    } else if (nodeName.equalsIgnoreCase("Fields")) {
                        label.setIcon(iconComponent);
                        label.setSelected(false);
                    }
                }
                if (isFieldNode) {
                    label.setIcon(iconField);
                    label.setSelected(false);
                }
            }//end of outer else
            //browser.mouseClicked = false;//AKS
            //tree.clearSelection();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return label;
    }//end of public Component getTreeCellRendererComponent() method

    public void reset() {
        selNode = null;
    }

    public void doLayout() {
        //Dimension d_check = check.getPreferredSize();
        Dimension d_label = label.getPreferredSize();
        int y_check = 0;
        int y_label = 0;
        /*if (d_check.height < d_label.height) {
        y_check = (d_label.height - d_check.height) / 2;
        } else {
        y_label = (d_check.height - d_label.height) / 2;
        }
        check.setLocation(0, y_check);
        check.setBounds(0, y_check, d_check.width, d_check.height);
        label.setLocation(d_check.width, y_label);
        label.setBounds(d_check.width, y_label, d_label.width, d_label.height);*/
    }

    public class TreeLabel extends JLabel {

        boolean isSelected;
        boolean isLeaf;
        boolean hasFocus;

        public void paint(Graphics g) {
            String str;
            if ((str = getText()) != null) {
                if (0 < str.length()) {
                    if (isSelected) {
                        //g.setColor(UIManager.getColor("Tree.selectionBackground"));
                        g.setColor(Color.LIGHT_GRAY);
                    } else {
                        g.setColor(UIManager.getColor("Tree.textBackground"));
                    }
                    Dimension d = getPreferredSize();
                    int imageOffset = 0;
                    Icon currentI = getIcon();
                    if (currentI != null) {
                        imageOffset = currentI.getIconWidth()
                                + Math.max(0, getIconTextGap() - 1);
                    }
                    g.fillRect(imageOffset, 0, d.width - 1 - imageOffset,
                            d.height);
                    if (hasFocus) {
                        g.setColor(UIManager.getColor("Tree.selectionBorderColor"));
                        g.drawRect(imageOffset, 0, d.width - 1 - imageOffset,
                                d.height - 1);
                    }
                }
            }
            super.paint(g);
        }//end of paint() method

        public void setSelected(boolean isSelected) {
            this.isSelected = isSelected;
        }

        public void setFocus(boolean hasFocus) {
            this.hasFocus = hasFocus;
        }
    }//end of inner class TreeLabel

    public void itemStateChanged(ItemEvent e) {
        // TODO Auto-generated method stub
    }
}//end of CheckRenderer class

//AKS
//start of class ListRenderer
class ListRenderer extends DefaultListCellRenderer {

    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
        //URL obj_table = this.getClass().getResource("com/sunopsis/graphical/gif/obj_table.gif");
        URL obj_table = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/obj_table.gif");
        JLabel label = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
        label.setIcon(new ImageIcon(obj_table));
        return label;
    }
}
//end of ListRenderer class

public class OdiSfObjectMetadataBrowser {

    private OdiSfAdapterDefaultTreeNode root; //rootNode
    private OdiSfAdapterDefaultTreeNode jTreeSelectedNode; //selected node
    private OdiSfAdapterDefaultTreeNode jTreeSObjectNode; //selected node
    protected JFrame frame = null;
    private JPanel jPanelTop = null;
    private JPanel jPanelGap2 = null;
    private JPanel jPanelSearch = null;
    private JPanel jPanelTree = null;
    private JPanel jPanelBottom = null;
    private JTextField jTxtFieldObjName = null;
    private JLabel jLabelObjectName = null;
    private JButton jButtonSearch = null;
    private JButton jButtonObjLookup = null;
    private JButton jButtonReverse = null;
    private JButton jButtonCancel = null;
    //private JButton jButtonTest = null;
    private JTree tree = null;
    public boolean isCancel = false;
    //public boolean isFieldNodeSelected = false;
    public boolean isObjectNodeSelected = false;
    private HashSet sObjectSelectedList = new HashSet();
    private ArrayList filteredObjectList;
    private com.sforce.soap.partner.DescribeGlobalSObjectResult[] sobjectResults;
    private List ObjectList;
    private OdiSfDescribeCall odiSfDescribeCall;
    /*Logger object*/
    private OdiSfLogger logger = null;
    private String selectedObjectName;
    private String[] selectedObjectArray;
    private JLabel headerLabel;//AKS
    private JLabel listLabel;//AKS
    private JLabel treeLable;//AKS
    private JScrollPane treeScrollPane;//AKS
    private JScrollPane listScrollPane;//AKS
    private JList selectedTableList;//AKS
    private DefaultListModel tableListModel;//AKS
    private boolean treeExpanded;//AKS
    public boolean mouseClicked;//AKS
    public boolean tableSelection;//AKS

    public OdiSfObjectMetadataBrowser(OdiSfDescribeCall odiSfDescribeCall, OdiSfLogger logger) {
        this.logger = logger;
        this.odiSfDescribeCall = odiSfDescribeCall;
        this.ObjectList = odiSfDescribeCall.getAllSfObjects();
        jPanelTop = new JPanel();
        jPanelGap2 = new JPanel();
        jPanelSearch = new JPanel();
        jPanelTree = new JPanel();
        jPanelBottom = new JPanel();
        jLabelObjectName = new JLabel("Enter Object Name: ");
        jTxtFieldObjName = new JTextField("", 20);
        jButtonSearch = new JButton("Search");
        jButtonObjLookup = new JButton("...");
        jButtonReverse = new JButton("Reverse");
        jButtonCancel = new JButton("Cancel");
        frame = new JFrame();
        try {
            addSearchPanel();
            createTreePanel();
            addBottomPanel();

//start of AKS
            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(frame.getContentPane());
            frame.getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jPanelSearch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanelBottom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE).addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(treeLable).addComponent(treeScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)).addGap(18, 18, 18).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(listScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE).addComponent(listLabel)))).addContainerGap()));
            layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(treeLable).addComponent(listLabel)).addGap(3, 3, 3).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(treeScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE).addComponent(listScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanelBottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()));
//end of AKS
        } catch (Exception e) {
            e.printStackTrace();
            throw new RuntimeException(e.getMessage());
        }
        frame.setTitle("Salesforce.com Metadata Browser");
        //loading icon for frame
      	//URL designerIconUrl = this.getClass().getResource("com/sunopsis/graphical/gif/toolbar/designer_16.gif");
      	URL designerIconUrl = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/toolbar/designer_16.gif");
      	ImageIcon frameIcon = new ImageIcon(designerIconUrl);
      	frame.setIconImage(frameIcon.getImage());
      	
        frame.setSize(550, 495);//AKS
        frame.setLocationRelativeTo(null);// set location in center  
        frame.setVisible(true);
        frame.addWindowListener(new WindowAdapter() {

            public void windowClosing(WindowEvent e) {
                isCancel = true;
                frame.setVisible(false);
            }
        });
    }

    /**
     * Add search panel on top
     */
    private void addSearchPanel() {

        headerLabel = new JLabel();
        headerLabel.setText("Salesforce.com Object Search");
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanelSearch);
        jPanelSearch.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).
                addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().
                addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(headerLabel).
                addGroup(jPanel1Layout.createSequentialGroup().addComponent(jLabelObjectName).
                addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).
                addComponent(jTxtFieldObjName, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE).
                addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).
                addComponent(jButtonObjLookup, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE).
                addGap(6, 6, 6).
                addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jButtonSearch))).
                addContainerGap(93, Short.MAX_VALUE)));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addComponent(headerLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabelObjectName).addComponent(jTxtFieldObjName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jButtonObjLookup).addComponent(jButtonSearch)).addContainerGap(12, Short.MAX_VALUE)));


        //ActionListener for lookup button
        jButtonObjLookup.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                filteredObjectList = new ArrayList();
                String searchStr = jTxtFieldObjName.getText().trim();
                if (searchStr.indexOf("*") == -1) {
                    JOptionPane.showMessageDialog(null, "Please use wild card(*) in your search string!", "Error", JOptionPane.OK_OPTION);
                } else {
                    createSearchResult(searchStr);
                }
            } // End actionPerformed() method
        }); // End of inner class button search listener

        //ActionListener for search button
        jButtonSearch.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                String userInptObjName = jTxtFieldObjName.getText();
                selectSearchedObject(userInptObjName);
            } // End actionPerformed() method
        }); // End of inner class button search listener

    }//End of addSearchPanel() method

    /**
     * Prepare list of filtered Sf Object
     * @param searchStr
     */
    private void createSearchResult(String searchStr) {

//        final JFrame jFrameLookup = new JFrame("Input Help for Salesforce.com Object");
    	final JDialog jFrameLookup = new JDialog(frame);
        jFrameLookup.setTitle("Input Help for Salesforce.com Object");
        jFrameLookup.setModal(true);
        List objList = ObjectList;

        String searchStrToBeSearched = searchStr.replace("*", "");
        Iterator itr = objList.iterator();
        while (itr.hasNext()) {
            String str = itr.next().toString();
            if (searchStr.startsWith("*")) {
                if (str.toLowerCase().contains(searchStrToBeSearched.toLowerCase())) {
                    filteredObjectList.add(str);
                    logger.log(OdiSfLogger.FINEST, "Filtered Object: " + str);
                }
            } else {
                if (str.toLowerCase().startsWith(searchStrToBeSearched.toLowerCase())) {
                    filteredObjectList.add(str);
                    logger.log(OdiSfLogger.FINEST, "Filtered Object: " + str);
                }
            }
        }
        logger.log(OdiSfLogger.FINEST, "filteredObjectList size: " + filteredObjectList.size());

        Vector rowData = new Vector();
        Vector rowDataTemp = null;

        Iterator fItr = filteredObjectList.iterator();
        while (fItr.hasNext()) {
            String objName = fItr.next().toString();
            rowDataTemp = new Vector();
            rowDataTemp.addElement(objName);
            if (objName.contains("__c")) {
                rowDataTemp.addElement("Custom Object");
            } else {
                rowDataTemp.addElement("Standard Object");
            }

            rowData.addElement(rowDataTemp);
        }//end of while loop
        Vector columnHeader = new Vector();

        columnHeader.addElement("Salesforce.com Object Name");
        columnHeader.addElement("Object Type");

        final JTable jTableLookup = new JTable(new DefaultTableModel(rowData, columnHeader));
                

        /**
         * Object selection code will be here
         */
        ListSelectionModel cellSelectionModel = jTableLookup.getSelectionModel();        
        cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        cellSelectionModel.addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
            	tableSelection = true;//AKS
//            	
//                int lookupSelection = JOptionPane.showConfirmDialog(jFrameLookup, "Continue with selection?", "Confirmation", JOptionPane.YES_NO_OPTION);
//                //jFrameLookup.setVisible(true);
//
//                if (lookupSelection == 0) {
//                    String selectedData = null;
//                    int selectedRow = jTableLookup.getSelectedRow();
//                    //int selectedColumn = jTableLookup.getSelectedColumn();
//                    selectedData = (String) jTableLookup.getValueAt(selectedRow, 0);
//                    jTxtFieldObjName.setText("");
//                    jTxtFieldObjName.setText(selectedData);
//                    jFrameLookup.setVisible(false);
//                    frame.setVisible(true);
//                    //frame.setEnabled(true);
//                } else {
//                    jFrameLookup.setVisible(true);
//                }
            }
        });
//AKS start of mouse listener
        jTableLookup.addMouseListener(new MouseAdapter() {
        	public void mouseClicked(MouseEvent e){
        		if(tableSelection){
                	int lookupSelection = JOptionPane.showConfirmDialog(jFrameLookup, "Continue with selection?", "Confirmation", JOptionPane.YES_NO_OPTION);
                  //jFrameLookup.setVisible(true);

                  if (lookupSelection == 0) {
                      String selectedData = null;
                      int selectedRow = jTableLookup.getSelectedRow();
                      //int selectedColumn = jTableLookup.getSelectedColumn();
                      selectedData = (String) jTableLookup.getValueAt(selectedRow, 0);
                      jTxtFieldObjName.setText("");
                      jTxtFieldObjName.setText(selectedData);
                      jFrameLookup.setVisible(false);
                      frame.setVisible(true);
                      //frame.setEnabled(true);
                  } else {
                      jFrameLookup.setVisible(true);
                  }
                  tableSelection = false;
                }
        	}
		});//AKS
        
        jTableLookup.setOpaque(true); //content panes must be opaque
        JScrollPane scrollPane = new JScrollPane(jTableLookup);
        jFrameLookup.getContentPane().add(scrollPane);

        jFrameLookup.setSize(350, 300);
        jFrameLookup.setLocationRelativeTo(null);
        jFrameLookup.setVisible(true);
        jFrameLookup.setResizable(false);

    }//end of createSearchResult() method

    /**
     * Select object in object tree
     */
    private void selectSearchedObject(String userInputObjName) {
        logger.log(OdiSfLogger.FINEST, "+++++++ selectSearchedObject() called ++++++++++");
        //String userInputObjName = jTxtFieldObjName.getText();
    	/*if(userInputObjName.equals("")) {
        JOptionPane.showMessageDialog(null, "Search string is empty!", "Error", JOptionPane.OK_OPTION);
        return;
        }*/
        logger.log(OdiSfLogger.FINEST, ">>> userInputObjName: " + userInputObjName);
        OdiSfAdapterDefaultTreeNode jTreeSearchNode = null;
        TreeModel model = tree.getModel();
        Object rootObject = model.getRoot(); //Getting root node of the tree
        Enumeration children = ((TreeNode) rootObject).children();
        String SearchMod = null;

        TreePath selectTreePath = null;

        if (children != null) { //Populating modules
            while (children.hasMoreElements()) {
                jTreeSearchNode = (OdiSfAdapterDefaultTreeNode) children.nextElement();
                String modName = jTreeSearchNode.getMyNode().getName().trim();
                if (modName.equalsIgnoreCase(userInputObjName)) {
                    selectTreePath = searchWithPopulatedNodes(jTreeSearchNode, userInputObjName);
                    tree.setSelectionPath(selectTreePath);
                    tree.scrollPathToVisible(selectTreePath);
                    break;
                }
            }//end of while loop
        }//end of if (children != null)
        tree.collapsePath(selectTreePath);
        //tree.expandPath(selectTreePath);

    }//end of selectSearchedObject()

    /**
     * This method is used to search table from already populated Nodes
     * @param  OdiSfAdapterDefaultTreeNode    -  childNode
     * @param  String    -  undefinedTableName
     * @return TreePath
     */
    private TreePath searchWithPopulatedNodes(OdiSfAdapterDefaultTreeNode objectNode, String userInputObjName) {
        logger.log(OdiSfLogger.FINEST, "+++++++++searchWithPopulatedNodes() called +++++++++++");
        OdiSfAdapterDefaultTreeNode jTreeChildNode = null;
        TreePath selectTreeNode = null;

        Enumeration enumeration = ((TreeNode) objectNode).children();
        while (enumeration.hasMoreElements()) {
            jTreeChildNode = (OdiSfAdapterDefaultTreeNode) enumeration.nextElement();
            String childNodeName = jTreeChildNode.getMyNode().getName();
            logger.log(OdiSfLogger.FINEST, ">>>>>>>>>childNodeName: " + childNodeName);
            logger.log(OdiSfLogger.FINEST, ">>>>>>>>>userInputObjName: " + userInputObjName);
            if (childNodeName.equalsIgnoreCase("Fields") && jTreeChildNode.getChildCount() == 0) {
                //selectTreeNode = new TreePath( jTreeChildNode.getPath() );
                //SfMetadataAdapter sfMetadataAdapter = new SfMetadataAdapter(parterConnection);
                //sfMetadataAdapter.createSfObjectMetadataList(userInputObjName);
                //logger.log(OdiSfLogger.FINEST, ">>>>>>>>>#############");
                ArrayList fieldList = odiSfDescribeCall.getSfObjectMetadata(userInputObjName);
                //logger.log(OdiSfLogger.FINEST, ">>>>>>>>>^^^^^^^^^^^^^^^");
                //mandatoryFieldList = (ArrayList)sfMetadataAdapter.getMandatoryFieldList();
                Iterator itr = fieldList.iterator();
                String str = null;
                while (itr.hasNext()) {
                    str = itr.next().toString();
                    OdiSfAdapterDefaultTreeNode fieldNode = new OdiSfAdapterDefaultTreeNode(new OdiSfNode(str, "", false));
                    jTreeChildNode.add(fieldNode); //Adding table fields into node
                }//end of while - else loop

            }//if(tableName.equalsIgnoreCase(undefinedTableName)){
        }//while (enumeration.hasMoreElements()) {
        //Add Searched Object in selected Object List
        String objectName = objectNode.getMyNode().getName().trim();
        sObjectSelectedList.add(objectName);

        DefaultListModel mod = ((DefaultListModel) selectedTableList.getModel());//AKS
        if (!mod.contains(objectName)) {//AKS
            mod.addElement(objectName);//AKS
        }
        objectNode.getMyNode().setSelected(true);//AKS

        logger.log(OdiSfLogger.FINEST, objectName + " Object added in selected Object list");
        selectTreeNode = new TreePath(objectNode.getPath());
        logger.log(OdiSfLogger.FINEST, ">>>>>> selectTreeNode: " + selectTreeNode);
        return selectTreeNode;
    }// end of method SearchWithPopulatedNodes()

    /**
     * Create tree panel
     */
    private void createTreePanel() throws Exception {
        logger.log(OdiSfLogger.FINEST, "++++++++++++OdiSfObjectMetadataBrowser.createTreePanel()++++++++++++++++");
        List sObjectList = ObjectList;

        Iterator itr = (Iterator) sObjectList.iterator();
        root = new OdiSfAdapterDefaultTreeNode(new OdiSfNode("Salesforce.com Objects", "", false));
        while (itr.hasNext()) {

            OdiSfAdapterDefaultTreeNode sObjectNode = new OdiSfAdapterDefaultTreeNode(new OdiSfNode(itr.next().toString(), "", false));
            root.add(sObjectNode);

            OdiSfAdapterDefaultTreeNode fieldNode = new OdiSfAdapterDefaultTreeNode(new OdiSfNode("Fields", "", false));
            sObjectNode.add(fieldNode);
        }//end of while loop
        tree = new JTree(root);
        //Call treeSelectionListener
        TreeSelectionListener listener = new MyTreeSelectionListener();
        if (listener != null) {
            tree.addTreeSelectionListener(listener);
        }
        final CheckRenderer checkRendererObj = new CheckRenderer(this, logger);
        tree.setCellRenderer(checkRendererObj);
        tree.putClientProperty("JTree.lineStyle", "Angled");
        //Add mouse listener to add sub nodes (App. component, tables & fields) in the tree on double click
        MouseListener mouseListener = new MouseAdapter() {

            public void mousePressed(MouseEvent me) {
                try {
                    if (me.getClickCount() == 1) { //Single Mouse click
                        mouseClicked = true;//AKS
                        logger.log(OdiSfLogger.FINEST, "mouse single clicked");
                        //checkRendererObj.reset();
                        //getting table & Application component
                        //logger.log(OdiSfLogger.FINEST, "getChild Count: "+jTreeSelectedNode.getChildCount());
                        if (jTreeSelectedNode == null) {
                            logger.log(OdiSfLogger.FINEST, "No Node is selected");
                            return;
                        }
                        if (jTreeSelectedNode.getChildCount() == 1) {
                            jTreeSObjectNode = jTreeSelectedNode;
                            OdiSfNode sfObjNode = jTreeSelectedNode.getMyNode();
                            setSelectedObjectName(sfObjNode.getName());
                            //Add selected object in the list 
                            if (!sfObjNode.getName().equals("Fields")) {
                                sObjectSelectedList.add(sfObjNode.getName().trim());
                                logger.log(OdiSfLogger.FINEST, "" + sfObjNode.getName() + " object added in the selected list");
                            }
                        }
                        OdiSfNode nodeName = jTreeSelectedNode.getMyNode();
                        logger.log(OdiSfLogger.FINEST, ">>>nodeName: " + nodeName.getName());

                        if (jTreeSelectedNode.getChildCount() == 0 && nodeName.getName().equals("Fields")) {
                            OdiSfNode node = jTreeSelectedNode.getMyNode();
                            logger.log(OdiSfLogger.FINEST, "Node Name: " + node.getName());

                            OdiSfNode sObjNode = jTreeSObjectNode.getMyNode();
                            logger.log(OdiSfLogger.FINEST, "S ObjectName: " + sObjNode.getName());

                            //SfMetadataAdapter sfMetadataAdapter = new SfMetadataAdapter(parterConnection);
                            //sfMetadataAdapter.createSfObjectMetadataList(sObjNode.getName());

                            ArrayList fieldList = odiSfDescribeCall.getSfObjectMetadata(sObjNode.getName());
                            //mandatoryFieldList = (ArrayList)sfMetadataAdapter.getMandatoryFieldList();

                            logger.log(OdiSfLogger.FINEST, "fieldList size: " + fieldList.size());
                            if (fieldList.isEmpty()) { //If no record found from SFDC Cloud
                                JOptionPane.showMessageDialog(null, "No Field available", "Error", JOptionPane.OK_OPTION);
                                return;
                            }
                            Iterator itr = fieldList.iterator();
                            String str = null;
                            while (itr.hasNext()) {
                                str = itr.next().toString();
                                OdiSfAdapterDefaultTreeNode fieldNode = new OdiSfAdapterDefaultTreeNode(new OdiSfNode(str, "", false));
                                jTreeSelectedNode.add(fieldNode); //Adding table fields into node
                            }//end of while - else loop
                            //return;
                        }

                        //AKS
                        //Adding the selected Object Name to the List  
                        if (jTreeSelectedNode.getPath().length == 2) {
                            if (!treeExpanded) {
                                System.out.println("Mouse Click");
                                OdiSfNode selectedNode = jTreeSelectedNode.getMyNode();
                                DefaultListModel mod = (DefaultListModel) selectedTableList.getModel();
                                if (mod.contains(selectedNode.getName())) {
                                    mod.removeElement(selectedNode.getName());
                                    selectedNode.setSelected(false);
                                } else {
                                    mod.addElement(selectedNode.getName());
                                    selectedNode.setSelected(true);
                                }
                            }
                        }
                        treeExpanded = false;
                    }//end of  if(me.getClickCount() == 1)
                    else if (me.getClickCount() == 2) {
                        logger.log(OdiSfLogger.FINEST, "mouse double clicked");
                        treeExpanded = true;//AKS
                        mouseClicked = false;//AKS
                        //code will be added in future as per requirement
                    }// end of if(me.getClickCount() == 2)

                } catch (Exception excp) {
                    excp.printStackTrace();
                } finally {
                    frame.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    frame.repaint();
                }//end of finally
            }// end of mousePressed() method
        }; //end of MouseListener adapter class
        tree.addMouseListener(mouseListener);
        MyTreeExpansionListener expansionListener = new MyTreeExpansionListener();

        tree.addTreeExpansionListener(expansionListener);
        tree.addTreeWillExpandListener(expansionListener);

        //AKS
        tree.addKeyListener(new KeyAdapter() {

            public void keyTyped(KeyEvent e) {
                mouseClicked = false;
            }

            public void keyPressed(KeyEvent e) {
                mouseClicked = false;
            }

            public void keyReleased(KeyEvent e) {
                mouseClicked = false;
            }
        });

//        //Add tree structure into the scroll pane & after that in the container
//        JScrollPane scrollpane = new JScrollPane(tree);
//        jPanelTree.setLayout(new BoxLayout(jPanelTree, BoxLayout.LINE_AXIS));
//        jPanelTree.add(scrollpane);
//        jPanelTree.setBorder(BorderFactory.createTitledBorder(""));
//        frame.getContentPane().add(jPanelTree, BorderLayout.CENTER); //Adding tree in the center 
        //start 
        treeScrollPane = new JScrollPane(tree);
        tableListModel = new DefaultListModel();
        selectedTableList = new javax.swing.JList(tableListModel);
        ListRenderer listRender = new ListRenderer();
        selectedTableList.setCellRenderer(listRender);
        listScrollPane = new JScrollPane(selectedTableList);
        treeLable = new JLabel("Salesforce.com Standard and Custom Objects");
        listLabel = new JLabel("Selected Salesforce.com Objects");


    }//END of createTree() panel 

    private void addBottomPanel() {
        //logger.log(OdiSfLogger.FINEST, "++++++++++ OdiSfObjectMetadataBrowser  || addBottomPanel() ++++++++++++");
        //Add bottom panel with two buttons - cancel & reverse

        jPanelBottom.add(jButtonReverse);//AKS
        jPanelBottom.add(jButtonCancel);//AKS

//	  jButtonCancel.setPreferredSize(new Dimension(80, 25));
//	  jButtonReverse.setPreferredSize(new Dimension(80, 25));
//	  jPanelBottom.add(jButtonReverse);
//	  jPanelBottom.add(jButtonCancel);
//	  jPanelBottom.setBorder(BorderFactory.createLoweredBevelBorder());
//	  frame.getContentPane().add(jPanelBottom, BorderLayout.SOUTH);
//	  //ActionListener for cancel button
        jButtonCancel.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                isCancel = true;
                frame.setVisible(false);
            }
        });

        //ActionListener for Reverse Metadata button
        jButtonReverse.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent ae) {
                isCancel = false;
                //logger.log(OdiSfLogger.FINEST, "Number Of Object Selected>>>> "+sObjectSelectedList.size());
                boolean frameVisible = true;
                int listSize = selectedTableList.getModel().getSize();//AKS
                frame.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                try {
//                    if (sObjectSelectedList.size() == 0) {
                    if (listSize == 0) {//AKS
                        JOptionPane.showMessageDialog(null, "No Object Selected", "Error", JOptionPane.OK_OPTION);
                        frameVisible = true;
                    } else {
                        frameVisible = false;
                        logger.log(OdiSfLogger.FINEST, "Number of selected Object: " + sObjectSelectedList.size());
                        logger.log(OdiSfLogger.FINEST, "Selected Object(s) to reverse:");
                        //convert HashSet to String array
//                      String[] sObjArray = new String[sObjectSelectedList.size()];
//                      sObjArray = (String[]) sObjectSelectedList.toArray(sObjArray);

                        String[] sObjArray = new String[listSize];//AKS
                        for (int j = 0; j < listSize; j++) {//AKS
                            sObjArray[j] = selectedTableList.getModel().getElementAt(j).toString();//AKS
                        }
                        setSelectedObjectArray(sObjArray);
                        //checking selected objects in the log file
                        logger.log(OdiSfLogger.FINEST, "Selected Object Name:");
                        for (int i = 0; i < sObjArray.length; i++) {
                            logger.log(OdiSfLogger.FINEST, "" + sObjArray[i]);
                        }
                    }
                } catch (Exception e) {
                    logger.log(OdiSfLogger.FINEST, "" + e.getMessage());
                    throw new RuntimeException(e);
                } finally {
                    frame.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    frame.repaint();
                    if (frameVisible) {
                        frame.setVisible(true); //After reversing closing the SFDC Metadata UI browser
                    } else {
                        frame.setVisible(false); //After reversing closing the SFDC Metadata UI browser
                    }
                }//end finally
            }// end of actionPerformed() method
        });
    } //end of addBottomPanel() method

    /**
     * Set selected Node
     * @param eventDescription
     * @param e
     */
    void setSelectedNode(String eventDescription, TreeExpansionEvent e) {
        //textArea.append(eventDescription + "; "+ "path = " + e.getPath()+ newline);
        logger.log(OdiSfLogger.FINEST, eventDescription + ";" + e.getPath());
        jTreeSelectedNode = getTreeNode(e.getPath());
        //isObjectNodeSelected = e.isAddedPath();
        logger.log(OdiSfLogger.FINEST, "Node " + jTreeSelectedNode.toString() + " is selected");
    }

    /**
     * This method returns the current selected tree node name
     *
     * @param    TreePath
     * @return   OdiSfAdapterDefaultTreeNode   -  as name of current selected node
     */
    private OdiSfAdapterDefaultTreeNode getTreeNode(TreePath path) {
        return (OdiSfAdapterDefaultTreeNode) (path.getLastPathComponent());
    }

    /**
     * 
     * @author Anzarul.Haque
     *
     */
    class MyTreeSelectionListener implements TreeSelectionListener {

        public void valueChanged(TreeSelectionEvent event) {
            TreePath path = event.getPath();
            jTreeSelectedNode = getTreeNode(event.getPath()); //taking the name of selected node

            isObjectNodeSelected = event.isAddedPath();

            if (isObjectNodeSelected == false) {
                OdiSfNode deselectedObjNode = jTreeSelectedNode.getMyNode();
                sObjectSelectedList.remove(deselectedObjNode.getName());
                logger.log(OdiSfLogger.FINEST, deselectedObjNode.getName() + " removed from selected object list");
            }
            logger.log(OdiSfLogger.FINEST, "Node " + jTreeSelectedNode.toString() + " is " + (event.isAddedPath() ? "selected" : "deselected"));

        } // End of valueChanged()
    } //End of inner class - MyTreeSelectionListener

    class MyTreeExpansionListener implements TreeExpansionListener, TreeWillExpandListener {

        //Required by TreeWillExpandListener interface.
        public void treeWillExpand(TreeExpansionEvent e) throws ExpandVetoException {
            setSelectedNode("Tree-will-expand event detected", e);
            treeExpanded = true;//AKS
            //int n = JOptionPane.showOptionDialog(this, willExpandText, willExpandTitle, JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,null,willExpandOptions,willExpandOptions[1]);
                  /*if (n == 0) {
            //User said cancel expansion.
            saySomething("Tree expansion cancelled", e);
            throw new ExpandVetoException(e);
            }*/
        }

        //Required by TreeWillExpandListener interface.
        public void treeWillCollapse(TreeExpansionEvent e) {
            setSelectedNode("Tree-will-collapse event detected", e);
            treeExpanded = true;//AKS
        }

        // Required by TreeExpansionListener interface.
        public void treeExpanded(TreeExpansionEvent e) {
            setSelectedNode("Tree-expanded event detected", e);
            treeExpanded = true;//AKS
        }

        // Required by TreeExpansionListener interface.
        public void treeCollapsed(TreeExpansionEvent e) {
            setSelectedNode("Tree-collapsed event detected", e);
            treeExpanded = true;//AKS
        }
    }//end of inner class MyTreeExpansionListener

    private void createSearchWindow() {

        final JFrame jFrameLookup = new JFrame("Salesforce.com Object Search");
        ArrayList objList = (ArrayList) ObjectList;

        //JTextField jTextFieldSearchStr = new JTextField("",20);

        //JButton jButtonSearchNew = new JButton("Search");
        //JButton jButtonObjLookupNew = new JButton("...");

        String searchStr = "";

        String searchStrToBeSearched = searchStr.replace("*", "");
        Iterator itr = objList.iterator();

        while (itr.hasNext()) {
            String str = itr.next().toString();
            if (searchStr.startsWith("*")) {
				if (str.toLowerCase().contains(searchStrToBeSearched.toLowerCase())) {
                    filteredObjectList.add(str);
                    logger.log(OdiSfLogger.FINEST, "Filtered Object: " + str);
                }
            } else {
				if (str.toLowerCase().startsWith(searchStrToBeSearched.toLowerCase())) {
                    filteredObjectList.add(str);
                    logger.log(OdiSfLogger.FINEST, "Filtered Object: " + str);
                }
            }
        }
        logger.log(OdiSfLogger.FINEST, "filteredObjectList size: " + filteredObjectList.size());

        Vector rowData = new Vector();
        Vector rowDataTemp = null;

        Iterator fItr = filteredObjectList.iterator();
        while (fItr.hasNext()) {
            String objName = fItr.next().toString();
            rowDataTemp = new Vector();
            rowDataTemp.addElement(objName);
            if (objName.contains("__c")) {
                rowDataTemp.addElement("Custom Object");
            } else {
                rowDataTemp.addElement("Standard Object");
            }

            rowData.addElement(rowDataTemp);
        }//end of while loop
        Vector columnHeader = new Vector();

        columnHeader.addElement("Salesforce.com Object Name");
        columnHeader.addElement("Object Type");

        final JTable jTableLookup = new JTable(new DefaultTableModel(rowData, columnHeader));

        /**
         * Object selection code will be here
         */
        ListSelectionModel cellSelectionModel = jTableLookup.getSelectionModel();
        cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        cellSelectionModel.addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {

                int lookupSelection = JOptionPane.showConfirmDialog(jFrameLookup, "Continue with selection?", "Confirmation", JOptionPane.YES_NO_OPTION);
                //jFrameLookup.setVisible(true);

                if (lookupSelection == 0) {

                    String selectedData = null;
                    int selectedRow = jTableLookup.getSelectedRow();
                    //int selectedColumn = jTableLookup.getSelectedColumn();
                    selectedData = (String) jTableLookup.getValueAt(selectedRow, 0);
                    jTxtFieldObjName.setText("");
                    jTxtFieldObjName.setText(selectedData);
                    jFrameLookup.setVisible(false);
                    frame.setVisible(true);
                    //frame.setEnabled(true);
                } else {
                    jFrameLookup.setVisible(true);
                }
            }
        });
        jTableLookup.setOpaque(true); //content panes must be opaque
        JScrollPane scrollPane = new JScrollPane(jTableLookup);
        jFrameLookup.getContentPane().add(scrollPane);

        jFrameLookup.setSize(350, 300);
        jFrameLookup.setLocationRelativeTo(null);
        jFrameLookup.setVisible(true);
        jFrameLookup.setResizable(false);
    }//End of createSearchResult() method

    /**
     * Set current selected object
     * @param selectedSfObjName
     */
    private void setSelectedObjectName(String selectedSfObjName) {
        this.selectedObjectName = selectedSfObjName;
    }

    /**
     * Returns current of selected object
     * @return
     */
    public String getSelectedObjectName() {
        return selectedObjectName;
    }

    /**
     * Returns array of selected objects
     * @return the selectedObjectArray
     */
    public String[] getSelectedObjectArray() {
        return selectedObjectArray;
    }

    /**
     * Set array of selected Objects
     * @param selectedObjectArray the selectedObjectArray to set
     */
    public void setSelectedObjectArray(String[] selectedObjectArray) {
        this.selectedObjectArray = selectedObjectArray;
    }

//start of AKS
    public DefaultListModel getModel() {
        DefaultListModel model = new DefaultListModel();
        for (int i = 0; i < 10; i++) {
            model.addElement("Value - " + (i + 1));
        }
        return model;
    }
}//end of main class OdiSfObjectMetadataBrowser
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20496]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String">null</Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9f0292a7-ec24-4e75-be5c-9fffda921472]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[12252]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[60]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Java RevHandler Classes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0ac401fd-1d2d-43dc-9ab1-7cf589d54877]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20496]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Create Java RevHandler Classes
/**
* Copyright (c) 2010, Bristlecone. All rights reserved. 
 */
import com.sforce.soap.partner.ChildRelationship;
import java.sql.BatchUpdateException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * This class insert all metadata information
 * into ODI repository
 * @author Anzarul.Haque
 *
 */
public class OdiSfRevHandler {

    private Connection conn = null;
    private PreparedStatement tablePstmt = null;
    private PreparedStatement fieldPstmt = null;
    private PreparedStatement keyPstmt = null;
    private PreparedStatement keyColPstmt = null;
    private PreparedStatement joinPstmt = null;
    private PreparedStatement joinColPstmt = null;
    /**logger object*/
    private OdiSfLogger logger = null;
    /**Metadata browser object*/
    private OdiSfObjectMetadataBrowser odiSfObjectMetadataBrowser = null;
    /**OdiSfDescribe call object*/
    private OdiSfDescribeCall odiSfDescribeCall = null;

    //Check the ODI Release
  	<%boolean isOdi10gOr11g = odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION");%>
    

    /**
     * OdiSfRevHandler - Parameterized overloaded Constructor
     * @param repoCon
     * @param logger
     * @param odiSfDescribeCall
     * @param odiSfObjectMetadataBrowser
     */
    public OdiSfRevHandler(Connection repoCon,
            OdiSfLogger logger, OdiSfDescribeCall odiSfDescribeCall, OdiSfObjectMetadataBrowser odiSfObjectMetadataBrowser) {

        this.logger = logger;
        logger.log(OdiSfLogger.FINEST, "++++++++++ OdiSfRevHandler overloaded Constructor ++++++++++++++++");
        this.conn = repoCon;
        this.odiSfDescribeCall = odiSfDescribeCall;
        this.odiSfObjectMetadataBrowser = odiSfObjectMetadataBrowser;
        logger.log(OdiSfLogger.FINEST, "With GUI Constructor");
        
        try {
            conn.setAutoCommit(false);
        } catch (ClassNotFoundException e) {
            logger.log(OdiSfLogger.FINEST, "ClassNotFoundException: " + e.getMessage());
            throw new RuntimeException("ClassNotFoundException: " + e.getMessage());
        } catch (SQLException e) {
            logger.log(OdiSfLogger.FINEST, "SQLException: " + e.getMessage());
            throw new RuntimeException("SQLException: " + e.getMessage());
        }

    }//End of constructor

    /**
     * OdiSfRevHandler - Parameterized overloaded Constructor
     * @param repoCon
     * @param logger
     * @param odiSfDescribeCall
     */
    public OdiSfRevHandler(Connection repoCon,
            OdiSfLogger logger, OdiSfDescribeCall odiSfDescribeCall) {

        this.logger = logger;
        logger.log(OdiSfLogger.FINEST, "++++++++++ OdiSfRevHandler overloaded Constructor ++++++++++++++++");
        this.conn = repoCon;
        this.odiSfDescribeCall = odiSfDescribeCall;
        logger.log(OdiSfLogger.FINEST, "Without GUI Constructor");
      
        try {
            conn.setHoldability(ResultSet.CLOSE_CURSORS_AT_COMMIT);
            conn.setAutoCommit(false);
        } catch (ClassNotFoundException e) {
            logger.log(OdiSfLogger.FINEST, "ClassNotFoundException: " + e.getMessage());
            throw new RuntimeException("ClassNotFoundException: " + e.getMessage());
        } catch (SQLException e) {
            logger.log(OdiSfLogger.FINEST, "SQLException: " + e.getMessage());
            throw new RuntimeException("SQLException: " + e.getMessage());
        }

    }//End of constructor

    /**
     * Reverse engineer all metadata information to put into ODI Model
     * 
     * @param isGui as boolean
     * @param objectNameList as String
     * @param maskObjectName as String
     */
    public void reverseEngineer(String isGui, String objectNameList, String maskObjectName) {
        logger.log(OdiSfLogger.FINEST, "++++++++++++++OdiSfRevHandler.reverseEngineer(...)+++++++++++++++");
        com.sforce.soap.partner.DescribeSObjectResult[] sObjectResultList = null; //For specified list of sf.com objects
        com.sforce.soap.partner.DescribeGlobalSObjectResult[] sObjectGlobalResult = null; //For all sf.com objects
        com.sforce.soap.partner.DescribeSObjectResult describeSObjectResult = null;//For single sf.com object

        try {
            logger.log(OdiSfLogger.FINEST, "!!!!!!!!!!! Start of Process to insert Metadata into ODI Repository !!!!!!!!!!!!!");

            //if(<%=odiRef.getOption("USE_GUI").equals("1")%>) {//if Use GUI option is Yes
            if (isGui.equalsIgnoreCase("1")) {//if Use GUI option is Yes
                logger.log(OdiSfLogger.FINEST, "inside if Use GUI option is Yes");
                String[] sObjectArray = odiSfObjectMetadataBrowser.getSelectedObjectArray();
                logger.log(OdiSfLogger.FINEST, "sObjectArray.length: " + sObjectArray.length);
                for (int i = 0; i < sObjectArray.length; i++) {
                    logger.log(OdiSfLogger.FINEST, "Object to be reversed: " + sObjectArray[i]);
                }
                sObjectResultList = odiSfDescribeCall.getSpecifiedObjectResult(sObjectArray);
                logger.log(OdiSfLogger.FINEST, "Number of Objects to be reversed: " + sObjectResultList.length);
            } else {//else Use GUI option is No

                logger.log(OdiSfLogger.FINEST, "!!!!! maskObjectName !!!!!!!!!!" + maskObjectName);
                logger.log(OdiSfLogger.FINEST, "!!!!! objectNameList !!!!!!!!!!" + objectNameList);

                if (!(maskObjectName.equalsIgnoreCase("%")) && (!(maskObjectName.equalsIgnoreCase("")))) {//reverse single object
                    logger.log(OdiSfLogger.FINEST, "Specified sf.com object name in the Mask: " + maskObjectName);
                    String[] sObjectArray = {maskObjectName};
                    sObjectResultList = odiSfDescribeCall.getSpecifiedObjectResult(sObjectArray);
                    //describeSObjectResult = odiSfDescribeCall.getSingleObject(maskObjectName);

                } else if (objectNameList.equalsIgnoreCase("All")) {//reverse all Objects
                    //types = odiSfDescribeCall.getTypes();
                    sObjectGlobalResult = odiSfDescribeCall.getGlobalSObjectList();
                    logger.log(OdiSfLogger.FINEST, "the sObjectGlobalResult length " + sObjectGlobalResult.length);
                } else if (objectNameList.contains(",")) {//reverse more than one object as specified with comma separated
                    objectNameList = objectNameList.replace(" ", "");
                    String[] objectArray = objectNameList.split(",");
                    sObjectResultList = odiSfDescribeCall.getSpecifiedObjectResult(objectArray);

                    logger.log(OdiSfLogger.FINEST, "Number of tables to be reversed >>>> " + objectArray.length);
                    //for (int x=0; x<objectArray.length; x++)
                    //logger.log(OdiSfLogger.FINEST,"ObjectArray Values >>>>>>>>> " + objectArray[x].trim());			
                    //types = objectArray;
                } else {//reverse single object
                    logger.log(OdiSfLogger.FINEST, "Single table name provided in KM option: " + objectNameList);
                    //describeSObjectResult = odiSfDescribeCall.getSingleObject(objectNameList);
                    String[] sObjectArray = {objectNameList};
                    sObjectResultList = odiSfDescribeCall.getSpecifiedObjectResult(sObjectArray);
                }
            }//end of outer else - GUI = No

            if (sObjectResultList != null) {//Fetch specified Salesforce.com objects metadata
                logger.log(OdiSfLogger.FINEST, "++++ Inside if(sObjectResultList != null) ++++");
                if (sObjectResultList.length != 0) {
                    for (int i = 0; i < sObjectResultList.length; i++) {
                        String objectName = sObjectResultList[i].getName();
                        String label = sObjectResultList[i].getLabel();
//                        label = label + "_" + objectName;
//                        label += objectName;

                        /******** Preparing batch  for Inserting table atttibutes in SNP_REV_TABLE table *****/
                        createTable(objectName, label);

                        /******* Preparing batch for Inserting Fields metadata  ********/
                        com.sforce.soap.partner.Field[] field = sObjectResultList[i].getFields();
                        createColumn(objectName, label, field);

                        /********* Preparing batch for Inserting child relationship metadata ************/
//                        com.sforce.soap.partner.ChildRelationship[] crelation = sObjectResultList[i].getChildRelationships();
//                        createReferenceColumn(modelId, objectName, crelation);

                        /*********executing the batch***********/
                        executeSQLBatch();

                    }//end of for loop
                }//end of if(sObjectResultList.length != 0) 

            } else if (sObjectGlobalResult != null) {//Fetch All Salesforce.com objects metadata
                logger.log(OdiSfLogger.FINEST, "++++ Inside else if(sObjectGlobalResult != null) ++++");
                if (sObjectGlobalResult.length != 0) {

                    for (int i = 0; i < sObjectGlobalResult.length; i++) {
                        String objectName = sObjectGlobalResult[i].getName();
                        String label = sObjectGlobalResult[i].getLabel();
                        label = label + "_" + objectName;

                        describeSObjectResult = odiSfDescribeCall.getSingleObject(objectName);

                        /******** Preparing batch  for Inserting table attributes in SNP_REV_TABLE table *****/
                        createTable(objectName, label);

                        /******* Preparing batch for Inserting Fields metadata  ********/
                        logger.log(OdiSfLogger.FINEST, "describeSObjectResult.getFields()");
                        com.sforce.soap.partner.Field[] field = describeSObjectResult.getFields();
                        createColumn(objectName, label, field);

                        /********* Preparing batch for Inserting child relationship metadata ************/
//                        com.sforce.soap.partner.ChildRelationship[] crelation = describeSObjectResult.getChildRelationships();
//                        createReferenceColumn(modelId, objectName, crelation);

                        /*********executing the batch***********/
                        executeSQLBatch();
                    }//end of for loop
                }//end of if(sObjectGlobalResult.length != 0)
            }//end of else if(sObjectGlobalResult != null)
            //Execute all job which was added into batch
            logger.log(OdiSfLogger.FINEST, "....ALL REOCRDS COMMITTED SUCCESSFULLY.");

        } catch (BatchUpdateException buexp) {
            logger.log(OdiSfLogger.FINEST, "Exception in BatchUpdate:: " + buexp.getMessage());
            try {
                conn.rollback();
            } catch (SQLException e) {
                throw new RuntimeException("SQLException: " + e.getMessage());
            }
            throw new RuntimeException("SQLException: " + buexp.getMessage());
        } catch (SQLException se) {
            logger.log(OdiSfLogger.FINEST, "SQLException: " + se.getMessage());
            try {
                conn.rollback();
            } catch (SQLException e) {
                throw new RuntimeException("SQLException: " + e.getMessage());
            }
            throw new RuntimeException("SQLException: " + se.getMessage());

        } catch (Exception ex) {
            logger.log(OdiSfLogger.FINEST, "Exception: " + ex.getMessage());
            try {
                conn.rollback();
            } catch (SQLException e) {
                throw new RuntimeException("SQLException: " + e.getMessage());
            }
            throw new RuntimeException("Exception: " + ex.getMessage());
        } finally {
            logger.log(OdiSfLogger.FINEST, "OdiSfRevHandler.reverseEngineer() - Finally Block: ");
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException e) {
                    logger.log(OdiSfLogger.FINEST, "SQLException: " + e.getMessage());
                    throw new RuntimeException(e.getMessage());
                }
            }//end of if condition
        }//end of finally block

    }//End of reverseEngineer() method

    /**
     * Create Data Store in ODI REV Table
     * @param objectName
     * @param label
     * @throws SQLException, Exception 
     */
    private void createTable(String objectName, String label) throws SQLException, Exception {
        logger.log(OdiSfLogger.FINEST, "+++++++++++++++++ OdiSfRevHandler.createTable(...) +++++++++++++++++");
        
        String tableQuery = "";
        <% if(isOdi10gOr11g) {%> /*if ODI 10g or 11g*/ 
        	tableQuery = "INSERT INTO SNP_REV_TABLE(I_MOD, TABLE_NAME, RES_NAME, TABLE_ALIAS, TABLE_TYPE, "
                    + "TABLE_DESC, IND_SHOW, R_COUNT, FILE_FORMAT, FILE_SEP_FIELD, FILE_ENC_FIELD, FILE_SEP_ROW, "
                    + "FILE_FIRST_ROW, FILE_DEC_SEP, SMOD_CODE) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
        <%}else {%>//if ODI 12c
        	tableQuery = "INSERT INTO SNP_REV_TABLE(MOD_GUID, TABLE_NAME, RES_NAME, TABLE_ALIAS, TABLE_TYPE, "
                    + "TABLE_DESC, IND_SHOW, R_COUNT, FILE_FORMAT, FILE_SEP_FIELD, FILE_ENC_FIELD, FILE_SEP_ROW, "
                    + "FILE_FIRST_ROW, FILE_DEC_SEP, SMOD_CODE) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
        <%}%>
        

        tablePstmt = conn.prepareStatement(tableQuery);
        <% if(isOdi10gOr11g) {%> /*if ODI 10g or 11g*/
        	tablePstmt.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
        <%}else {%>//if ODI 12c
        	tablePstmt.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
        <%}%>
        tablePstmt.setString(2, label);//TABLE_NAME 
        tablePstmt.setString(3, objectName);//RES_NAME
        tablePstmt.setString(4, objectName.substring(0, 3).toUpperCase().replace(" ", ""));//TABLE_ALIAS
        tablePstmt.setString(5, "T");//TABLE_TYPE
        tablePstmt.setString(6, "");//TABLE_DESC
        tablePstmt.setString(7, "1");//IND_SHOW
        tablePstmt.setNull(8, java.sql.Types.INTEGER);//R_COUNT
        tablePstmt.setString(9, "");//FILE_FORMAT
        tablePstmt.setString(10, "");//FILE_SEP_FIELD
        tablePstmt.setString(11, "");//FILE_ENC_FIELD
        tablePstmt.setString(12, "");//FILE_SEP_ROW
        tablePstmt.setNull(13, java.sql.Types.INTEGER);//FILE_FIRST_ROW
        tablePstmt.setString(14, "");//FILE_DEC_SEP
        tablePstmt.setNull(15, java.sql.Types.VARCHAR);//SMOD_CODE

        logger.log(OdiSfLogger.FINEST, "tableQuery: " + tableQuery);
        tablePstmt.addBatch();
        //tablePstmt.execute();
        logger.log(OdiSfLogger.FINEST, "Data added in SNP_REV_TABLE for batch update of object " + label + " successfully...");
        logger.log(OdiSfLogger.FINEST, "----------------- OdiSfRevHandler.createTable(...) -----------------");
    }//End ofcreateTable(...) method

    /**
     * Create Column metadata
     * 
     * @param objectName
     * @param label
     * @param []field
     * @throws SQLException, Exception
     */
    private void createColumn(String objectName, String label, com.sforce.soap.partner.Field[] field) throws SQLException, Exception {
        logger.log(OdiSfLogger.FINEST, "+++++++++++++++++ OdiSfRevHandler.createColumn(...) +++++++++++++++++");
        int pos = 1;
        int refCounter = 1;//For the foreign key names

        //table column entry
        String fieldQuery = "";
        <% if(isOdi10gOr11g) {%> /*if ODI 10g or 11g*/
        	fieldQuery = "INSERT INTO SNP_REV_COL(I_MOD, TABLE_NAME, COL_NAME, COL_HEADING, COL_DESC, DT_DRIVER, POS, LONGC,"
                + " SCALEC, FILE_POS, BYTES,IND_WRITE, COL_MANDATORY, CHECK_FLOW, CHECK_STAT, COL_FORMAT, COL_DEC_SEP,"
                + " REC_CODE_LIST,COL_NULL_IF_ERR, DEF_VALUE) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
        <%}else {%>//if ODI 12c
        	fieldQuery = "INSERT INTO SNP_REV_COL(MOD_GUID, TABLE_NAME, COL_NAME, COL_HEADING, COL_DESC, DT_DRIVER, POS, LONGC,"
                    + " SCALEC, FILE_POS, BYTES,IND_WRITE, COL_MANDATORY, CHECK_FLOW, CHECK_STAT, COL_FORMAT, COL_DEC_SEP,"
                    + " REC_CODE_LIST,COL_NULL_IF_ERR, DEF_VALUE) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
        <%}%>
        fieldPstmt = conn.prepareStatement(fieldQuery);

        //primary key entry
        String pkQuery = "";
        <% if(isOdi10gOr11g) {%> /*if ODI 10g or 11g*/
        	pkQuery = "INSERT INTO SNP_REV_KEY(I_MOD, TABLE_NAME, KEY_NAME, CONS_TYPE, IND_ACTIVE, CHECK_FLOW, CHECK_STAT)"
        			+ " VALUES(?,?,?,?,?,?,?)";
        <%}else {%>//if ODI 12c
        	pkQuery = "INSERT INTO SNP_REV_KEY(MOD_GUID, TABLE_NAME, KEY_NAME, CONS_TYPE, IND_ACTIVE, CHECK_FLOW, CHECK_STAT)"
        			+ " VALUES(?,?,?,?,?,?,?)";
        <%}%>
        logger.log(OdiSfLogger.FINEST, "pkQuery: " + pkQuery);
        keyPstmt = conn.prepareStatement(pkQuery);

        //Primary Column Entry
        String pkColQuery = "";
        <% if(isOdi10gOr11g) {%> /*if ODI 10g or 11g*/
        	pkColQuery = "INSERT INTO SNP_REV_KEY_COL(I_MOD, TABLE_NAME, KEY_NAME, COL_NAME, POS) VALUES(?,?,?,?,?)";
        <%}else {%>//if ODI 12c
        	pkColQuery = "INSERT INTO SNP_REV_KEY_COL(MOD_GUID, TABLE_NAME, KEY_NAME, COL_NAME, POS) VALUES(?,?,?,?,?)";
        <%}%>
        logger.log(OdiSfLogger.FINEST, "pkColQuery: " + pkColQuery);
        keyColPstmt = conn.prepareStatement(pkColQuery);

        //Foreign Key Entry
        String fkQuery = "";
        <% if(isOdi10gOr11g) {%> /*if ODI 10g or 11g*/
        	fkQuery = "INSERT INTO SNP_REV_JOIN(I_MOD,FK_NAME,TABLE_NAME,FK_TYPE,PK_CATALOG,PK_SCHEMA,"
        			+ "PK_TABLE_NAME,CHECK_STAT,CHECK_FLOW,IND_ACTIVE, DEFER,UPD_RULE, DEL_RULE)"
        			+ "VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?)";
        <%}else {%>//if ODI 12c
        	fkQuery = "INSERT INTO SNP_REV_JOIN(MOD_GUID,FK_NAME,TABLE_NAME,FK_TYPE,PK_CATALOG,PK_SCHEMA,"
        			+ "PK_TABLE_NAME,CHECK_STAT,CHECK_FLOW,IND_ACTIVE, DEFER,UPD_RULE, DEL_RULE)"
        			+ "VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?)";
        <%}%>
        
        joinPstmt = conn.prepareStatement(fkQuery);
        logger.log(OdiSfLogger.FINEST, "fkQuery: " + fkQuery);

        //Foreign Key Column Entry
        String fkColQuery = "";
        <% if(isOdi10gOr11g) {%> /*if ODI 10g or 11g*/
        	fkColQuery = "INSERT INTO SNP_REV_JOIN_COL(I_MOD, FK_NAME, FK_COL_NAME, FK_TABLE_NAME, "
        			+ "PK_COL_NAME, PK_TABLE_NAME, POS) VALUES(?,?,?,?,?,?,?)";
        <%}else {%>//if ODI 12c
        	fkColQuery = "INSERT INTO SNP_REV_JOIN_COL(MOD_GUID, FK_NAME, FK_COL_NAME, FK_TABLE_NAME, "
                    + "PK_COL_NAME, PK_TABLE_NAME, POS) VALUES(?,?,?,?,?,?,?)";
        <%}%>
        
        joinColPstmt = conn.prepareStatement(fkColQuery);
        logger.log(OdiSfLogger.FINEST, "fkColQuery: " + fkColQuery);

        for (int j = 0; j < field.length; j++) {
            com.sforce.soap.partner.Field fieldInfo = (com.sforce.soap.partner.Field) field[j];
            logger.log(OdiSfLogger.FINEST, j + " Field " + fieldInfo.getName());
            logger.log(OdiSfLogger.FINEST, "Field Type " + fieldInfo.getType().name());
            String fLabel = "";
            if (fieldInfo.getType().name().equals("reference")) {
                fLabel = fieldInfo.getLabel().replace("'", "") + "XRef";
            } else {
                fLabel = fieldInfo.getLabel().replace("'", "");
            }
            logger.log(OdiSfLogger.FINEST, "Field Label :" + fLabel);
            String colHeading = fieldInfo.getName();
            if (colHeading.length() > 35) {
                colHeading = colHeading.substring(0, 34);
            }
            
            <% if(isOdi10gOr11g) {%> /*if ODI 10g or 11g*/
            	fieldPstmt.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
            <%}else {%>//if ODI 12c
            	fieldPstmt.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
            <%}%>
            fieldPstmt.setString(2, label);//TABLE_NAME
            fieldPstmt.setString(3, fieldInfo.getName());//COL_NAME
            logger.log(OdiSfLogger.FINEST, "Field Name: " + fieldInfo.getName());
            fieldPstmt.setString(4, colHeading);//COL_HEADING
            fieldPstmt.setString(5, fLabel);//COL_DESC
            String fieldType = fieldInfo.getType().toString();
            if (fieldType.startsWith("_")) {
                fieldType = fieldType.replace("_", "");
            }
            logger.log(OdiSfLogger.FINEST, "Field type: " + fieldType);
            fieldPstmt.setString(6, fieldType);//DT_DRIVER / Data Type
            fieldPstmt.setInt(7, pos);//POS
            fieldPstmt.setInt(8, fieldInfo.getLength());//LONGC
            fieldPstmt.setInt(9, fieldInfo.getPrecision());//SCALEC
            fieldPstmt.setNull(10, java.sql.Types.INTEGER);//FILE_POS
            fieldPstmt.setInt(11, fieldInfo.getByteLength());//BYTES
            fieldPstmt.setString(12, "1");//IND_WRITE
            fieldPstmt.setString(13, (fieldInfo.isNillable() ? "1" : "0"));//COL_MANDATORY
            fieldPstmt.setString(14, "1");//CHECK_FLOW
            fieldPstmt.setString(15, "1");//CHECK_STAT
            fieldPstmt.setNull(16, java.sql.Types.VARCHAR);//COL_FORMAT
            fieldPstmt.setNull(17, java.sql.Types.VARCHAR);//COL_DEC_SEP
            fieldPstmt.setNull(18, java.sql.Types.VARCHAR);//REC_CODE_LIST
            fieldPstmt.setNull(19, java.sql.Types.VARCHAR);//COL_NULL_IF_ERR
            fieldPstmt.setNull(20, java.sql.Types.VARCHAR);//DEF_VALUE

            logger.log(OdiSfLogger.FINEST, "fieldQuery: " + fieldQuery);
            fieldPstmt.addBatch();
            //fieldPstmt.execute();
            logger.log(OdiSfLogger.FINEST, "Column metadata added in batch to insert data in SNP_REV_COL successfully");
            pos++;

            // ******Generate primary key definition ******/
            if (fieldInfo.getType().name().equalsIgnoreCase("id")) {
            	
            	<% if(isOdi10gOr11g) {%> /*if ODI 10g or 11g*/
            		keyPstmt.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
                <%}else {%>//if ODI 12c
                	keyPstmt.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
                <%}%>
                keyPstmt.setString(2, label);//TABLE_NAME
                keyPstmt.setString(3, "PK_" + label.toUpperCase().replace(" ", "") + "_ID");//KEY_NAME
                keyPstmt.setString(4, "PK");//CONS_TYPE
                keyPstmt.setString(5, "1");//IND_ACTIVE
                keyPstmt.setString(6, "1");//CHECK_FLOW
                keyPstmt.setString(7, "1");//CHECK_STAT

                keyPstmt.addBatch();
                logger.log(OdiSfLogger.FINEST, "Primary key added in batch to insert data in SNP_REV_KEY successfully");
                
                <% if(isOdi10gOr11g) {%> /*if ODI 10g or 11g*/
                	keyColPstmt.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
                <%}else {%>//if ODI 12c
                	keyColPstmt.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
                <%}%>
                keyColPstmt.setString(2, label);//TABLE_NAME
                keyColPstmt.setString(3, "PK_" + label.toUpperCase().replace(" ", "") + "_ID");//KEY_NAME
                keyColPstmt.setString(4, fieldInfo.getName());//COL_NAME
                keyColPstmt.setInt(5, 1);//POS

                keyColPstmt.addBatch();
                logger.log(OdiSfLogger.FINEST, "Primary key Column added in batch to insert data in SNP_REV_KEY_COL successfully");


            }//end of if condition for PK

            /*****Generate FK definition ******/
            if (fieldInfo.getType().name().equals("reference")) {
                String[] refs = fieldInfo.getReferenceTo();
                if (refs != null) {
                    int refCnt = 1;
                    for (int k = 0; k < refs.length; k++) {
                        String ref = refs[k];
                        
                        <% if(isOdi10gOr11g) {%> /*if ODI 10g or 11g*/
                        	joinPstmt.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
                        <%}else {%>//if ODI 12c
                        	joinPstmt.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
                        <%}%>
                        joinPstmt.setString(2, "FK_" + label.replace(" ", "").toUpperCase() + "_" + ref.toUpperCase() + "_" + refCounter);//FK_NAME
                        joinPstmt.setString(3, label);//TABLE_NAME
                        joinPstmt.setString(4, "D");//FK_TYPE
                        joinPstmt.setNull(5, java.sql.Types.VARCHAR);//PK_CATALOG
                        joinPstmt.setNull(6, java.sql.Types.VARCHAR);//PK_SCHEMA
                        joinPstmt.setString(7, ref);//PK_TABLE_NAME
                        joinPstmt.setString(8, "1");//CHECK_STAT
                        joinPstmt.setString(9, "1");//CHECK_FLOW
                        joinPstmt.setString(10, "1");//IND_ACTIVE
                        joinPstmt.setNull(11, java.sql.Types.VARCHAR);//DEFER
                        joinPstmt.setString(12, "R");//UPD_RULE
                        joinPstmt.setString(13, "R");//DEL_RULE

                        joinPstmt.addBatch();

                        logger.log(OdiSfLogger.FINEST, "Foreign key added in batch to insert data in SNP_REV_JOIN successfully");
                        
                        <% if(isOdi10gOr11g) {%> /*if ODI 10g or 11g*/
                        	joinColPstmt.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
                        <%}else {%>//if ODI 12c
                        	joinColPstmt.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
                        <%}%>
                        joinColPstmt.setString(2, "FK_" + label.replace(" ", "").toUpperCase() + "_" + ref.toUpperCase() + "_" + refCounter);//FK_NAME
                        joinColPstmt.setString(3, fieldInfo.getName());//FK_COL_NAME
                        joinColPstmt.setString(4, label);//FK_TABLE_NAME
                        joinColPstmt.setString(5, "Id");//PK_COL_NAME
                        joinColPstmt.setString(6, ref);//PK_TABLE_NAME
                        joinColPstmt.setInt(7, refCnt);//POS

                        joinColPstmt.addBatch();
                        logger.log(OdiSfLogger.FINEST, "....column " + fieldInfo.getLabel() + " was a FK");
                        logger.log(OdiSfLogger.FINEST, "Foreign key column added in batch to insert data in SNP_REV_JOIN_COL successfully");

                        refCnt++;
                    }//end of for loop for foreign keys
                    refCounter++;

                }//end of if(refs != null)
            }//end of if condition for FK
        }// end of fields iteration
//        executeSQLBatch();
        logger.log(OdiSfLogger.FINEST, "----------------- OdiSfRevHandler.createColumn(...) -----------------");
    }//End of createColumn(...) method

    /**
     * 
     * @param objectName
     * @param crelation
     * @throws SQLException 
     */
    private void createReferenceColumn(String objectName, com.sforce.soap.partner.ChildRelationship[] crelation) throws SQLException {
        logger.log(OdiSfLogger.FINEST, "+++++++++++++++++ OdiSfRevHandler.createReferenceColumn(...) +++++++++++++++++");
        String ref = "";
        int refCnt = 1;
        for (ChildRelationship rel : crelation) {
            ref = rel.getChildSObject();
            logger.log(OdiSfLogger.FINEST,"FK_" + rel.getField().toUpperCase() + "_" + ref.toUpperCase() + "_" + refCnt + (rel.getRelationshipName() != null ? " " + rel.getRelationshipName() : ""));            
            <% if(isOdi10gOr11g) {%> /*if ODI 10g or 11g*/
            	joinPstmt.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
            <%}else {%>//if ODI 12c
            	joinPstmt.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
            <%}%>
            joinPstmt.setString(2, "FK_" + rel.getField().toUpperCase() + "_" + ref.toUpperCase() + "_" + refCnt + (rel.getRelationshipName() != null ? " " + rel.getRelationshipName() : ""));//FK_NAME
            joinPstmt.setString(3, ref);//TABLE_NAME
            joinPstmt.setString(4, "D");//FK_TYPE
            joinPstmt.setNull(5, java.sql.Types.VARCHAR);//PK_CATALOG
            joinPstmt.setNull(6, java.sql.Types.VARCHAR);//PK_SCHEMA
            joinPstmt.setString(7, objectName);//PK_TABLE_NAME
            joinPstmt.setString(8, "1");//CHECK_STAT
            joinPstmt.setString(9, "1");//CHECK_FLOW
            joinPstmt.setString(10, (rel.isDeprecatedAndHidden() ? "0" : "1"));//IND_ACTIVE
            joinPstmt.setNull(11, java.sql.Types.VARCHAR);//DEFER
            joinPstmt.setString(12, "R");//UPD_RULE
            joinPstmt.setString(13, (rel.isCascadeDelete() ? "C" : "R"));//DEL_RULE

            joinPstmt.addBatch();

            logger.log(OdiSfLogger.FINEST, "Foreign key added in batch to insert data in SNP_REV_JOIN successfully");
            
            <% if(isOdi10gOr11g) {%> /*if ODI 10g or 11g*/
            	joinColPstmt.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
            <%}else {%>//if ODI 12c
            	joinColPstmt.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
            <%}%>
            joinColPstmt.setString(2, "FK_" + rel.getField().toUpperCase() + "_" + ref.toUpperCase() + "_" + refCnt + (rel.getRelationshipName() != null ? " " + rel.getRelationshipName() : ""));//FK_NAME
            joinColPstmt.setString(3, rel.getField());//FK_COL_NAME
            joinColPstmt.setString(4, ref);//FK_TABLE_NAME
            joinColPstmt.setString(5, rel.getField());//PK_COL_NAME
            joinColPstmt.setString(6, objectName);//PK_TABLE_NAME
            joinColPstmt.setInt(7, refCnt);//POS

            joinColPstmt.addBatch();
            logger.log(OdiSfLogger.FINEST, "....column " + rel.getField() + " was a FK");
            logger.log(OdiSfLogger.FINEST, "Foreign key column added in batch to insert data in SNP_REV_JOIN_COL successfully");
            refCnt++;
        }
        logger.log(OdiSfLogger.FINEST, "+++++++++++++++++ OdiSfRevHandler.createReferenceColumn(...) +++++++++++++++++");
    }

    /**
     * Execute SQL queries in Batch for efficiency   
     * and better usage of network bandwidth.
     * @throws SQLException, Exception  
     */
    private void executeSQLBatch() throws SQLException, Exception {
        logger.log(OdiSfLogger.FINEST, "+++++++++++++++++ OdiSfRevHandler.executeSQLBatch() +++++++++++++++++");
        logger.log(OdiSfLogger.FINEST, "tablePstmt: " + tablePstmt);
        logger.log(OdiSfLogger.FINEST, "fieldPstmt: " + fieldPstmt);
        logger.log(OdiSfLogger.FINEST, "keyPstmt: " + keyPstmt);
        logger.log(OdiSfLogger.FINEST, "keyColPstmt: " + keyColPstmt);
        logger.log(OdiSfLogger.FINEST, "joinPstmt: " + joinPstmt);
        logger.log(OdiSfLogger.FINEST, "joinColPstmt: " + joinColPstmt);

        if (tablePstmt != null) {
            logger.log(OdiSfLogger.FINEST, "Executing Query (Create Table)...");
            tablePstmt.executeBatch();
            conn.commit();
            tablePstmt.clearBatch();
            tablePstmt.close();
            tablePstmt = null;
            logger.log(OdiSfLogger.FINEST, "Executing Query (Create Table): Done!!");
        }
        if (fieldPstmt != null) {
            logger.log(OdiSfLogger.FINEST, "Executing Query (Create Column)...");
            fieldPstmt.executeBatch();
            conn.commit();
            fieldPstmt.clearBatch();
            fieldPstmt.close();
            fieldPstmt = null;
            logger.log(OdiSfLogger.FINEST, "Executing Query (Create Column): Done!!");
        }
        if (keyPstmt != null) {
            logger.log(OdiSfLogger.FINEST, "Executing Query (Create primary key)...");
            keyPstmt.executeBatch();
            conn.commit();
            keyPstmt.clearBatch();
            keyPstmt.close();
            keyPstmt = null;
            logger.log(OdiSfLogger.FINEST, "Executing Query (Create primary key): Done!!");
        }
        if (keyColPstmt != null) {
            logger.log(OdiSfLogger.FINEST, "Executing Query (Create primary key column)...");
            keyColPstmt.executeBatch();
            conn.commit();
            keyColPstmt.clearBatch();
            keyColPstmt.close();
            keyColPstmt = null;
            logger.log(OdiSfLogger.FINEST, "Executing Query (Create primary key column): Done!!");
        }
        if (joinPstmt != null) {
            logger.log(OdiSfLogger.FINEST, "Executing Query (Create foreign key)...");
            joinPstmt.executeBatch();
            conn.commit();
            joinPstmt.clearBatch();
            joinPstmt.close();
            joinPstmt = null;
            logger.log(OdiSfLogger.FINEST, "Executing Query (Create foreign key): Done!!");
        }
        if (joinColPstmt != null) {
            logger.log(OdiSfLogger.FINEST, "Executing Query (Create foreign key)...");
            joinColPstmt.executeBatch();
            conn.commit();
            joinColPstmt.clearBatch();
            joinColPstmt.close();
            joinColPstmt = null;
            logger.log(OdiSfLogger.FINEST, "Executing Query (Create foreign key): Done!!");
        }
        logger.log(OdiSfLogger.FINEST, "----------------- OdiSfRevHandler.executeSQLBatch() -----------------");

    }//End of executeSQLBatch() method
}//End of OdiSfRevHandler class]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20497]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String">null</Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[583c1462-173c-44e8-882a-0377f609945b]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[12253]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[70]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Initialize]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b8ecd013-dc50-40b7-b798-d0fb372fc172]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20497]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Initialize classes & connection to SalesForce.com
//License Key:BRI-NA-STZ-ODI-KG-IN

import com.sforce.soap.partner.PartnerConnection;

//Check the ODI Release
<%boolean isOdi10gOr11g = odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION");%>

// ODI SF RKM Logger
logFile = <@=odiRef.getQuotedString("<%= odiRef.getOption("LOG_FILE_NAME")%>") @>;
logger = new OdiSfLogger(OdiSfLogger.DEBUG, logFile);

//OdiSfCoreCall object
OdiSfCoreCall coreCall = new OdiSfCoreCall(logger);
//Create partner connection to login on SalesForce.com
String userName = "<%=odiRef.getInfo("SRC_USER_NAME")%>";
String pwd =  "<%=odiRef.getInfo("SRC_PASS")%>";
String authEndPoint= "<%=odiRef.getInfo("SRC_DSERV_NAME")%>";
String isTraceLog = "<%= odiRef.getOption("USE_TRACE_LOG")%>";
String sfTraceLogFileName = <@=odiRef.getQuotedString("<%= odiRef.getOption("SF_TRACE_LOG")%>") @>;

//Create Partner connection
PartnerConnection connection = coreCall.login(userName, pwd, authEndPoint, sfTraceLogFileName, isTraceLog);
logger.log(OdiSfLogger.FINEST, "InitializeSalesForce: Login Successfull...."+connection.getUserInfo().getUserFullName());

//Create OdiSfdescribeCall object
OdiSfDescribeCall odiSfdcDescribeCall = new OdiSfDescribeCall(connection, logger);
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20498]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String">null</Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f0e26f86-1c2b-4779-94dd-c1cf7b446b92]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[12254]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[80]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Get Sf.com Metadata Browser]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[77184f98-5d50-4b33-ba9b-140a41e60aaf]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20498]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Command Name: Get Sf.com Metadata Browser
import javax.swing.JDialog;

//Show Sf.com metadata browser, if user selected USE_GUI = True
JFrame browserFrame = null;
OdiSfObjectMetadataBrowser odiSfObjectMetadataBrowser = null;
JDialog plzWait = new JDialog();

<%if(odiRef.getOption("USE_GUI").equals("1")) {%>
	logger.log(OdiSfLogger.FINEST, "USE_GUI = 111Yes");
	odiSfObjectMetadataBrowser = new OdiSfObjectMetadataBrowser(odiSfdcDescribeCall, logger);
	browserFrame = odiSfObjectMetadataBrowser.frame;
	//Wait loop unti user selection is done i.e user clicks either Cancel/ReverseMetadata button
	while(true) {
		if(browserFrame.isVisible())
			continue;
		else
			break;
	}
	if(odiSfObjectMetadataBrowser.isCancel) {
		throw new Exception("Reversing canceled / aborted!!!");
	}
<%} else {%>
	logger.log(OdiSfLogger.FINEST, "USE_GUI = No");
	
	logger.log(OdiSfLogger.FINEST,"Reversing Metadata Started......");
<%};%>
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String">null</Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20499]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c3fbe83d-2692-47b1-af40-0673a00ea7b9]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[12255]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[90]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Reset SNP_REV tables]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[29e050d9-b627-4b46-a5f4-a3087cd98ac2]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20499]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (isOdi10gOr11g) { /*if ODI 10g or 11g*/ %>
  OdiReverseResetTable -MODEL=<%=odiRef.getModel("ID")%>
<%} else { /*if ODI 12C*/%>
  OdiReverseResetTable -MODEL=<%=odiRef.getModel("GLOBAL_ID")%>
<%}%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Target Technology]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[DEF_I_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_LINE_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20500]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String">null</Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[18d10db2-b2ff-4765-b6a3-6fd34c48b9e9]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[12256]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[100]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Reverse Engineer Core]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0370c606-3b13-4a98-aece-b73369cb160c]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20500]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Reverse Engineer Core Step
//ODI repository connection
logger.log(OdiSfLogger.FINEST, "Reverse Engineer Core step: Getting ODI repository connection");

Connection repoConnection = odiRef.getJDBCConnection("DEST");

String isGui = "<%=odiRef.getOption("USE_GUI")%>";
OdiSfRevHandler odiSfRevHandler = null;
if(isGui.equals("1")) {//if Use GUI option is Yes
	odiSfRevHandler = new OdiSfRevHandler(repoConnection, logger, odiSfdcDescribeCall,  odiSfObjectMetadataBrowser);
} else {//else if GUI option is No
	odiSfRevHandler = new OdiSfRevHandler(repoConnection, logger, odiSfdcDescribeCall);
}
//Get Object names from KM option "Object_Names" if use GUI option is No
String objectNameList = "<%=odiRef.getOption("OBJECT_NAMES")%>";
logger.log(OdiSfLogger.FINEST, "Reverse Engineer Core step - objectNameList: "+ objectNameList);

//Get Single object name from ODI's "Mask" field, if use GUI option is No
String maskObjectName = "<%=odiRef.getModel("REV_OBJ_PATT")%>";

logger.log(OdiSfLogger.FINEST, "Reverse Engineer Core step: isGui = "+isGui);
odiSfRevHandler.reverseEngineer(isGui, objectNameList, maskObjectName);

logger.log(OdiSfLogger.FINEST, "Reverse Engineer Core step completed");
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String">null</Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20501]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[547fb6dc-cd2d-4b3b-957d-0abb40e1dd4b]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[12257]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Set Metadata]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[83fc35c3-c9f6-4f93-960d-672ad6573ef4]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20501]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (isOdi10gOr11g) { /*if ODI 10g or 11g*/ %>
OdiReverseSetMetaData -MODEL=<%=odiRef.getModel("ID")%> -USE_TABLE_NAME_FOR_UPDATE=true
<%} else { /*if ODI 12C*/%>
OdiReverseSetMetaData "-MODEL=<%=odiRef.getModel("GLOBAL_ID")%>" -USE_TABLE_NAME_FOR_UPDATE=true
<%}%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20502]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String">null</Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b231d369-dbf2-4af3-9768-2f1d62d06946]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[12258]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-10-25 15:08:20.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[120]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Release Resources]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[cb47c947-1477-4c4b-b25c-8bc7cefe300e]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[20502]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//de-allocation of memory

logger = null;
coreCall = null;
connection = null;
odiSfDescribeCall = null;
conn = null;

tablePstmt = null;
fieldPstmt = null;
keyPstmt = null;
keyColPstmt = null;
joinPstmt = null;
joinColPstmt = null;
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20483]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[5c4b872c-bcc8-4b6b-8d97-952925f43dbb]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.1900]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[4db2fc8c-35eb-4db1-9c78-6c1d12f3b368]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[Copy (3) of RKM_Salesforce_com]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[30]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20484]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1b292ce3-26d1-4de0-a297-564845147942]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20485]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[2d52f2f4-819c-4a75-8115-96e25e2fa761]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.111]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20486]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[385a9b47-b9c3-46f0-82aa-cabe56d8acfe]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20487]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[3ab9ffe8-fd26-4639-bb0d-48fc038c165b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20488]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[250e6830-7cd7-4d09-ab7d-d775bb6041b7]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20489]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a8f37adb-80e0-406d-97d4-f9f08f94b543]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20490]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[faafad8c-01d5-478b-bf92-c5aa475e77fe]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20491]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ea5161d6-73c2-4ba0-b7ba-88faa661d1d3]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20492]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8d9c6e84-d755-4db3-9627-ef5b43d75f93]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.103]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20493]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[5f1a9ab4-7961-4f33-bd5b-3c0991059d6d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20494]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[34a8c191-3c2e-4465-b951-fafe2609ca1f]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20495]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[20f06a2f-118c-450b-8486-24cd791e4c1c]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20496]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0ac401fd-1d2d-43dc-9ab1-7cf589d54877]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20497]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b8ecd013-dc50-40b7-b798-d0fb372fc172]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20498]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[77184f98-5d50-4b33-ba9b-140a41e60aaf]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20499]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[29e050d9-b627-4b46-a5f4-a3087cd98ac2]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20500]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0370c606-3b13-4a98-aece-b73369cb160c]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20501]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[83fc35c3-c9f6-4f93-960d-672ad6573ef4]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.102]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.20502]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[cb47c947-1477-4c4b-b25c-8bc7cefe300e]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.DwgExportSummary">
		<Field name="ExpTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="InstObjNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LinkDiagNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MorigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MtxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OrigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[20]]></Field>
	<Field name="OtherObjectsNb" type="com.sunopsis.sql.DbInt"><![CDATA[20]]></Field>
	<Field name="PlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="StepNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="TxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[20]]></Field>
	<Field name="UeOrigNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeUsedNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="VarPlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="ScenTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OdiVersion" type="java.lang.String"><![CDATA[12.2.1]]></Field>
	<Field name="OriginRepositoryID" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="RepositoryVersion" type="java.lang.String"><![CDATA[05.02.02.08]]></Field>
</Object>
</SunopsisExport>
