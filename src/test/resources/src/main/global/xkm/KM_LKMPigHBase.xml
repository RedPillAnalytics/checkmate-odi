<?xml version="1.0" encoding="ISO-8859-1"?>
<SunopsisExport>
<Admin RepositoryVersion="05.02.02.08" IsLegacyIdCompatible="false" />
<Encryption algorithm="AES" keyLength="128" exportKeyHash="s2VUocbmsAz3lOxX7fnvixi/UV8/XkP59+bs4C+SSmI=" keyVect="ehzb3VeiTIrIp7OPocqAyA==" exportKeySalt="05feeea2-de20-4a5e-b98b-b2ef0ecfcf0c" containsCipherText="false"/>
<Object class="com.sunopsis.dwg.dbobj.SnpTrt">
		<Field name="CleanupOnError" type="java.lang.String">null</Field>
	<Field name="CompType" type="java.lang.String"><![CDATA[AP]]></Field>
	<Field name="DelegateClass" type="java.lang.String"><![CDATA[LKMPigHBase]]></Field>
	<Field name="DelegateScript" type="java.lang.String"><![CDATA[


	public class LKMPigHBase extends LKMPig {

		static {
			LKMPig.storageClasses.put(LKMPigHBaseStorage.STORAGE_FUNCTION,LKMPigHBaseStorage.class);
		}
		
				
 		//class LKMPigHBaseStorage Start

		static class LKMPigHBaseStorage extends LKMPig.LKMPigStorage {
		
		    static final String STORAGE_FUNCTION = "HBaseStorage";
		
		    static List<LKMPig.FunctionParam> FUNCT_ARG = new ArrayList<LKMPig.FunctionParam>(1);
		    static List<LKMPig.FunctionOption> FUNCT_OPTIONS = new ArrayList<LKMPig.FunctionOption>(1);
		    
		    boolean loadKey;
            String columnDelimiter = " ";
		    
		    static {
		        FUNCT_ARG.add(new LKMPig.FunctionParam("HBase Columns"));
		        FUNCT_OPTIONS.add(new LKMPig.FunctionOption("Load Row Key", "loadKey"));
		        FUNCT_OPTIONS.add(new LKMPig.FunctionOption("Greater Than Min Key", "gt"));
		        FUNCT_OPTIONS.add(new LKMPig.FunctionOption("Less Than Min Key", "lt"));
		        FUNCT_OPTIONS.add(new LKMPig.FunctionOption("Greater Than Or Equal Min Key", "gte"));
		        FUNCT_OPTIONS.add(new LKMPig.FunctionOption("Less Than Or Equal Min Key", "lte"));
		        FUNCT_OPTIONS.add(new LKMPig.FunctionOption("Limit Rows", "limit"));
		        FUNCT_OPTIONS.add(new LKMPig.FunctionOption("Cached Rows", "caching"));
		        FUNCT_OPTIONS.add(new LKMPig.FunctionOption("Column Delimiter", "delim"));
		        FUNCT_OPTIONS.add(new LKMPig.FunctionOption("Storage Converter", "caster"));
		        FUNCT_OPTIONS.add(new LKMPig.FunctionOption("Min Timestamp", "minTimestamp"));
		        FUNCT_OPTIONS.add(new LKMPig.FunctionOption("Max Timestamp", "maxTimestamp"));
		        FUNCT_OPTIONS.add(new LKMPig.FunctionOption("Timestamp", "timestamp"));
		        FUNCT_OPTIONS.add(new LKMPig.FunctionOption("Disable Write Ahead Log", "noWAL"));
		    }
		    
		    @Override 
		    String getBaseUrl() {
		    	return "hbase://";
		   	}
		
		    private String getFunctionClass() {
		    	return "org.apache.pig.backend.hadoop.hbase.HBaseStorage";
		    }
		
		    @Override
		    String getLoaderFunction() {
		        return getFunctionClass();
		    }
		
		    @Override
		    String getStorerFunction() {
		        return getFunctionClass();
		    }
		
		    @Override
		    List<LKMPig.FunctionParam> getLoaderFunctionParams() {
		        return FUNCT_ARG;
		    }
		
			@Override
		    List<LKMPig.FunctionParam> getStorerFunctionParams() {
		        return FUNCT_ARG;
		    }
		
			@Override
		    List<LKMPig.FunctionOption> getLoaderFunctionOptions() {
		        return FUNCT_OPTIONS;
		    }
            
            @Override
            List<LKMPig.FunctionOption> getStorerFunctionOptions() {
                return FUNCT_OPTIONS;
            }
		    
		    @Override
		    String handleFunctionParam(LKMPig.FunctionParam param,
		                             String value,
		                             boolean isLoader) throws AdapterException,
		                                          oracle.odi.domain.mapping.exception.MappingException {
		
		
		        if (param.name.equals("HBase Columns")) {
		            columnDelimiter = getOptionValue("Column Delimiter");
                    if (columnDelimiter == null) columnDelimiter = " ";
		            return getHBaseColumns(!isLoader);
		        }
		        return value;
		    }
		    
		    String handleFunctionOption(LKMPig.FunctionOption option,
		                                String value,
		                                boolean isLoader) throws AdapterException,
		                                          oracle.odi.domain.mapping.exception.MappingException {
		                                          
				if (option.name.equals("Load Row Key")) {
				
					loadKey = isLoader;
					return (isLoader) ? "true" : "false";
				}		                                          
		        return value;
		    }
		    
		    String getHBaseColumns(boolean isTarget) throws AdapterException,
                                                 oracle.odi.domain.mapping.exception.MappingException {

                List<MapPhysicalColumn> columns = (isTarget) ? physicalNode.getTAPTargetPhysicalColumns() : physicalNode.getPhysicalColumns();
        
                StringBuilder schemaBuilder = new StringBuilder();
                for (MapPhysicalColumn column : columns) {
        
                    MapAttribute mapAttribute = column.getReferencedAttribute();
        
                    String columnName = mapAttribute.getName();
        
                    if (columnName.equals("key")) {
                        continue;
                    }
        
                    if (schemaBuilder.length() != 0) {
                        schemaBuilder.append(columnDelimiter);
                    }
                    schemaBuilder.append(columnName);
                }
        
                return schemaBuilder.toString();
            }
            
            String getSchema() {
            
            
            	if (loadKey) {
            		return super.getSchema();
            	}
            	else {
            	
            		List<String> skipColumns = new ArrayList<String>(1);
            		skipColumns.add("key");
            		return super.getSchema(skipColumns);
            	
            	}
            
            
            }
            
            @Override 
            void addPigCommands(PigCommand pigCommand) {
            
                if (pigCommand instanceof PigLoadCmd && !loadKey) {
                  PigScript pigScript = pigCommand.getParentScript();
                  PigSchema pigSchema = pigScript.getOutputSchema();
                  List<PigField> pigFields = pigSchema.getFields();
                  if (pigFields != null) {
                    int i = 0; 
                    for (PigField pigField : pigFields) {
                      if ("key".equals(pigField.getRawName())) {
                        pigFields.remove(i);
                        break;
                      }
                      i++;
                    }
                  }
                }
            }
		    
		}
 		
 		//class LKMPigHBaseStorage End
 	}
 		

		]]></Field>
	<Field name="ExpectedAstClass" type="java.lang.String">null</Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2019-05-17 22:11:19.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUNOPSIS_INSTALL]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[60ed4e9e-ebf9-4b05-b89f-e7e46af75f60]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[U]]></Field>
	<Field name="IndExcludeExUnitBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitEnd" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitMain" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapCleanup" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapEnd" type="java.lang.String">null</Field>
	<Field name="IndGenerateLoad" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndIsHidden" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndJrnMethod" type="java.lang.String">null</Field>
	<Field name="IndSuppSetBased" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IntgType" type="java.lang.String">null</Field>
	<Field name="IntVersion" type="com.sunopsis.sql.DbInt"><![CDATA[53]]></Field>
	<Field name="IsConcurrent" type="java.lang.String">null</Field>
	<Field name="IsSeeded" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IBaseCompKm" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="IFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IProject" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScBaseTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScOrigTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[109]]></Field>
	<Field name="ITxtDelTxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtTrtTxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="KimMultiDserver" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KmDefault" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KmLang" type="java.lang.String"><![CDATA[PIGLATIN]]></Field>
	<Field name="KmSrcLang" type="java.lang.String">null</Field>
	<Field name="KmSrcTechno" type="java.lang.String">null</Field>
	<Field name="KmTechno" type="java.lang.String"><![CDATA[PIG]]></Field>
	<Field name="KmVersion" type="java.lang.String">null</Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2019-07-22 21:06:41.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LkmType" type="java.lang.String"><![CDATA[N]]></Field>
	<Field name="LChecksum" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LCode" type="java.lang.String">null</Field>
	<Field name="OggJkm" type="java.lang.String">null</Field>
	<Field name="OrdFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ProcType" type="java.lang.String"><![CDATA[N]]></Field>
	<Field name="ProdAstType" type="java.lang.String">null</Field>
	<Field name="RepGuid" type="java.lang.String">null</Field>
	<Field name="RepVersion" type="java.lang.String">null</Field>
	<Field name="ScriptPath" type="java.lang.String">null</Field>
	<Field name="ScOrigTrtTag" type="java.lang.String">null</Field>
	<Field name="Subtype" type="java.lang.String"><![CDATA[*]]></Field>
	<Field name="TrtName" type="java.lang.String"><![CDATA[LKMPigHBase]]></Field>
	<Field name="TrtType" type="java.lang.String"><![CDATA[CK]]></Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
	<Field name="VLastDate" type="java.sql.Timestamp">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpReferencedObject">
		<Field name="IObject" type="com.sunopsis.sql.DbInt"><![CDATA[3600]]></Field>
	<Field name="ObjectPKasString" type="java.lang.String"><![CDATA[105]]></Field>
	<Field name="ObjectAKasString" type="java.lang.String"><![CDATA[]]></Field>
	<Field name="Description" type="java.lang.String"><![CDATA[SNP_TRT : LKMPig]]></Field>
 <Field name="GlobalId" type="java.lang.String"><![CDATA[bd83513d-cde7-4a1e-8eda-862396b7f21b]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.105]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[bd83513d-cde7-4a1e-8eda-862396b7f21b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKMPig]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[6]]></Field>
</Object>
<Object class="com.sunopsis.dwg.DwgExportSummary">
		<Field name="ExpTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="InstObjNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LinkDiagNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MorigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MtxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OrigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OtherObjectsNb" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="PlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="StepNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="TxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeOrigNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeUsedNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="VarPlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="ScenTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OdiVersion" type="java.lang.String"><![CDATA[12.2.1]]></Field>
	<Field name="OriginRepositoryID" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="RepositoryVersion" type="java.lang.String"><![CDATA[05.02.02.08]]></Field>
</Object>
</SunopsisExport>
